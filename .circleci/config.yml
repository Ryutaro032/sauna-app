version: 2.1

orbs:
  ruby: circleci/ruby@2.1.1
  browser-tools: circleci/browser-tools@1.4.8

services:
  chrome:
    image: selenium/standalone-chrome-debug
    ports:
      - 4444:4444

jobs:
  build:
    docker:
      - image: cimg/ruby:3.0.6
        environment:
            RAILS_ENV: test
            MYSQL_HOST: 127.0.0.1
            TZ: "Japan"
      - image: circleci/mysql:8.0.21
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_USERNAME: 'root'
          MYSQL_PASSWORD: 'password'
          MYSQL_DATABASE: 'sauna-app'

    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - restore_cache:
          keys:
            - rails-demo-{{ checksum "Gemfile.lock" }}
            - rails-demo-

      - run:
          name: setup bundler
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            sudo gem install bundler

      - run:
          name: Which bundler?
          command: bundle -v

      - run:
          name: bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      # Store bundle cache
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load
      - run:
          name: Run rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: tmp/screenshots
          destination: test-screenshots
  
  rubocop:
    docker:
      - image: cimg/ruby:3.0.6
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: bundle install
      - run:
          name: Run RuboCop
          command: bundle exec rubocop

workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
      - rubocop
