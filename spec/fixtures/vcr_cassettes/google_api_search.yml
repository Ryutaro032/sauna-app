---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%B1%A0%E8%A2%8B,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 07 May 2024 10:04:54 GMT
      Expires:
      - Tue, 07 May 2024 10:09:54 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '28381'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=368
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 07 May 2024 10:04:54 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%BE%B3%E5%B3%B6%E7%9C%8C%20%E6%81%B5%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 07 May 2024 10:16:55 GMT
      Expires:
      - Tue, 07 May 2024 10:21:55 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41437'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=602
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJuZXh0X3BhZ2VfdG9rZW4iIDogIkFVR0dmWm5fZGZleHpCV2dYam43SUUwSXlEVEpld2ZPaVY5eEZUQTRoUzNwdW9rRkVyN0dKTU5FamtFU0RObGVjWVRpcGk5QTJLV0ljTnhrWVFHOTJzYnM3RnFvSFlhMldkaWlmRzhEcVRoQjd4akpQbFphVTdCZ2tlcEZTQU9HZDZsc1FhQ0M1bGs3M1JDbjNYMWo2WWZ6Z0ZxNjNhTGpYaWFOVFJpZWs5RlRYdmRxWFdGNlVfUzUyMWlTQlM5RmxVdXBIMDdadUpRejRyNVJJWTVOYS12YzBXQzc4cG8xMVdlOFJ3SmpzRU5FQ29BUGNRNG9XREdHYWRsbGh1Y213TDBhUXJrN3Bpd0VCTzV5VkN4cG8yR3h0Q1ZqVXNTMmdrbDV5YXptZFZkeWhpS2tLUGxYVW93bXptaUtkemtLazJnckpzYzc2TmxpQ0FPZW1PRy1yMnMzUGo2d0Z5bXA1UEtlNngycE5SckhESVNWTmF2SXJqY0JjLVNLbjN1NDBvXzJrcU9qZGIweEptVGs5R3dsQnVNWmdfclpCNnVNIiwKICAgInJlc3VsdHMiIDogCiAgIFsKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzcwLTAwMDQg5b6z5bO255yM5b6z5bO25biC5Y2X55Sw5a6u77yR5LiB55uu77yS4oiS77yYIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0LjA4NTUxNSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNTQ2Nzk1MgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjA4NzA0MTI3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC41NDgzMDI5Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wODQzNDE2MjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNTQ1NjAzMjcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5b6z5bO25aSp54S25rip5rOJIOOBguOCieOBn+OBiOOBrua5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDM4NiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA0NzM0MzY0OTQ5ODE1MTM3MTIwXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm5jUWVCajg5WlIxc19sc2N4RzNGWkhJa0ZGX0FnX0tlT1hUaVZZV3I3eUNuT2I1T213Mm1VS1VVaGFQUVlRWXVQaW15dkkxNEFiNGxWUVAtTVJXWHlPR2l4UlB2Q1YzNFd6NWdma054V1dOZlJNLTN6RWk1blJ4RHJ4SmRIQ25KaUVOc3IzNFNVUE1URHZ5QW9iOFhLU3NRelU1VUVrS1ZTeHF4aVJKTHA2S3ZJaSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA2MDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpyM3loejROeVV6VVJXWU1NMWdxQ2NLRSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjNHUFcrNlAg5b6z5bO25biC44CB5b6z5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZQM0dQVys2UCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjEsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpyM3loejROeVV6VVJXWU1NMWdxQ2NLRSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJyZXN0YXVyYW50IiwKICAgICAgICAgICAgImZvb2QiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxODgyCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc3MC04MDExIOW+s+WztuecjOW+s+WztuW4guirlueUsOeUuuaWsOmWi++8lu+8luKIku+8me+8liIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wMzY0NTc4OTk5OTk5OSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNTc3OTI2NwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjAzNzgwOTAyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC41NzkyOTY0Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wMzUxMDkzNzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNTc2NTk2ODIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44GI44Gz44GZ44Gu5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjc0MCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA2NjE4MzU3ODIzNTM3MTc0NDIwXCJcdTAwM2Xopb/lgInlgaXkuoxcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zaa1Q3NTg5NzlnUmtHWE5EaVpWWW5OaUZKb183ZkQyNGFpUEhhQ1lINEY0T0hYUFhmUDZ5YUlTbmdrTk1SRm1val8tQzNoSFNEdFJfMzhrbk9UOWVlWU9OeENud2FHV2QyaWtSRWhhNmxjMWN3R1p1MHdrTUhoY0RBZmUxbFBtNmJUeWllaE1VQVAtVlZ0TmpoUzg2azhPNVVVcEk1TlZKR1c4dFN1bXEzTXRoVXhIIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDU0ODAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpkWHQzRjg0U1V6VVI4ZXZXOTNubC1fSSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjJIUEgrRzUg5b6z5bO25biC44CB5b6z5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZQMkhQSCtHNSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKZFh0M0Y4NFNVelVSOGV2VzkzbmwtX0kiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNjk2CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc3NC0wMDMwIOW+s+WztuecjOmYv+WNl+W4guWvjOWyoeeUuuOBgueOi+iwt++8le+8k+KIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzMy45MTYzMTg1LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNC42NTUxOTkxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuOTE3NzAzMjc5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjY1NjQ2NzcyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjkxNTAwMzYyMDEwNzI5LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC42NTM3NjgwNzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlpKflkozjga7pg7ciLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDMyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTMwMDI1NDQwNTMwMzgzNzk3NTBcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabW9iQXNpWGo2TGVPZnE0OXF2UDdkNVU2ckt2X2c3MTFtQkN3aWNWbHY3eTJYMXdEb3Z6cmVRRVdLSV9oeG5ON1BLbFVPWVhsT1duei1UUnpibUJzVzROeEloQmxUZWk5WHFST1llZ0dkT21JN2lJUHNRNXdfSDF0SlEwdjVZM3A4U1NzekVtX2Vsd2NKVjhhWjVONkd3MktFcmFpWlY4ZzhlcFhHQ051UFRsVHFCIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpwU2N1elBJV1V6VVJ3Yi1fNGlHWVl3MCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIldNODQrRzMg6Zi/5Y2X5biC44CB5b6z5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTVQV004NCtHMyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjYsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpwU2N1elBJV1V6VVJ3Yi1fNGlHWVl3MCIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTk5CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc3MC0wODA2IOW+s+WztuecjOW+s+WztuW4guWMl+WJjeW3neeUuu+8lOS4geebru+8mOKIku+8lSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wODEyNTQ1LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNC41NDk3OTIzCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMDgyNjA2OTc5ODkyNzEsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjU1MTE0NDQyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjA3OTkwNzMyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC41NDg0NDQ3NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlkInjga7muKnms4kiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzNjQ4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTIwNjkzNjk3OTE5MTUyNjMzMjhcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zaa19kbEdVZFI4X2NpeHJlYWpLZDNKMERrZFdRTjNsbS1LY0dSQUFiQlFIMC01RU9zd3NpTEt2ZVpGT1FZai1nMVIwNFVnRFktbXFwQnAyZERHRnBqc0tkRmVqYUs5eUVzWjNKcmJjQ09KTEJBbDVoZkxmMFJlZEk0ZUt6X0ZMUGJWUWh5cGpYeWZUVFpNTG5NZXdBRzJlaVBPTEw5R1hEM2J1LXFMRENjdzFWcTBRIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDU0NzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpfMURrcklKeVV6VVJaX1VlSkZuSWxHUSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjNHSlgrRlcg5b6z5bO25biC44CB5b6z5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZQM0dKWCtGVyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKXzFEa3JJSnlVelVSWl9VZUpGbklsR1EiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjYKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzczLTAwMTcg5b6z5bO255yM5bCP5p2+5bO25biC56uL5rGf55S66buS5bKp77yR77yT4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDMzLjk3NjU4NTIsCiAgICAgICAgICAgICAgICJsbmciIDogMTM0LjYwNTYyMTcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy45Nzc5MjM0Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNjA3MTEzNTc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuOTc1MjIzNzcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjYwNDQxMzkyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIua5r+WHpuOBguOCieOBn+OBiCDlsI/mnb7ls7blupciLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA1MDAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMTAxNDMyMjczNTEyOTk5MzAwM1wiXHUwMDNl44GK44Gf44GL44Op44OD44Kz44Gu5rmvIOW+oeWvtuiogOaziVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptbFlFQ3FJdi1MTGVEYUlaQWFIRGdnc0Iwb2xRRDVRQm9pMDI2Z3JVV3pLQUtzMEh6bzZlT2dhTTZNNVd6Z3R6X010SVF0T0xBZkJVYUVGS2VUWFFDTm1wQ1B5cy1hczgwV1MzczBjNk9BN2tHWE1lajlyekg5dTVteXo2dXhTd2dyXzAyZ051T08ydkZNQnJhSV9aVzZaaGF4ODNPZXdBLWt6TEFmQ3V0SGpCMmEiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNzAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKVFhSang3OFRVelVSTnhzMTV0alREYVkiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJYSkc0K0o2IOWwj+advuWztuW4guOAgeW+s+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE1UFhKRzQrSjYiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy4zLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKVFhSang3OFRVelVSTnhzMTV0alREYVkiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjU0CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc3MC04MDAyIOW+s+WztuecjOW+s+WztuW4gua0peeUsOeUuu+8kuS4geebru+8kyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wNDkxMzgxLAogICAgICAgICAgICAgICAibG5nIiA6IDEzNC41Nzk4ODYyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMDUwNDg3OTI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjU4MTIzNjAyOTg5MjgKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjA0Nzc4ODI3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC41Nzg1MzYzNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlpKflkozmua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyMjY4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDk4NjQ2NzUyNDE2MzI2MzQ0MjhcIlx1MDAzZUJFQVIgSElST1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptdGU2X0lQd2o0RHJ3NGVtVEtBX3RYM0lEOUN5a09JbEt5anl3eWZNNmdtX1ZLQWZJei1BY19KXzFUUDY4b01rRFdkN1hYT2pBckdaV0xPNHhQS002M0Y5T3ZiUHhhb3FGQVc5YkxmOVFCWVJoNWZaTGNtQVZra0Q4YXNfUHlXTTRibkJXY0xDeUZWYW95YkhSd1gyS0FraE9PZHlJNk9aT1pHRmhMSVRpcFlvVVoiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkFZd3lfdlJ0VXpVUk1sYWk3M2I4LTE0IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiMkhYSCtNWCDlvrPls7bluILjgIHlvrPls7bnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlAySFhIK01YIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkFZd3lfdlJ0VXpVUk1sYWk3M2I4LTE0IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDIwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc3Mi0wMDEyIOW+s+WztuecjOmztOmWgOW4guaSq+mkiueUuuWwj+ahkeWztuaXpeWQkeiwt++8ku+8lyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC4xODI2MDA3LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNC42MDgyMjY4CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMTgzOTUzNzc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjYwOTU3NzIyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjE4MTI1NDEyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC42MDY4Nzc1NzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmnbHmua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA2NDAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNTAwNzU3Nzg0NDE5NzA3NDU5OVwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpuNmR1THdxXzdWN3llLWVaTXp0b3FGbHRGQVpFM2d1cTBHSlZJbng0RnpzVzAzU2pYVUZ1OGFCZ1NxTG1adTl2WGREOXZ5SHp3cnRRVDNDX3lnVXJLa3I2RDEwaHY2Tk5YRlgtQ2VleUs5Q1FGMlRiWW1pNmlEbXFTaUdPRlJXdlZaaEcxb3VPYWN0enRObEJuVmxiS1k4NmdtYmlCSG95ekgzQmtma28yVTZBZFIiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDgwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKdXdWajZleGxVelVSU3RDdEZMaU5YWnMiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI1Sk01KzI3IOmztOmWgOW4guOAgeW+s+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2UDVKTTUrMjciCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC4xLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKdXdWajZleGxVelVSU3RDdEZMaU5YWnMiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAzNAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3NzAtMDg2MyDlvrPls7bnnIzlvrPls7bluILlronlroXvvJHkuIHnm67vvJPiiJLvvJLvvJQg5a+/44OT44OrIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0LjA2OTIyNjUsCiAgICAgICAgICAgICAgICJsbmciIDogMTM0LjU3MDIxNjgKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wNzA1NTQzMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNTcxNTkzMDI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMDY3ODU0NjcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjU2ODg5MzM3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOBk+OBqOOBtuOBjea4qeaziSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQwMzIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNzIxNjc0OTYwNjQ0NTI2NTUwMFwiXHUwMDNl5aSn6YeO5oWO5LmfXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm1wYVZjem9BeDZhaDc0T1Bxb1BYQ1hIZjhkc1FVTjQ3eXFLWXAxSzdtdmg5RjdJWF9pTURZeFBJR3BBTjh2OUh4T3lkMGlnSWVKLWlta1NuaG1SSFpvSjkxWEV6TUcxV0o1NUtUcVEzclY5ZjZVMkhZQW1aWS16TjIzN1V3Nk05YmdEY0JudFVOclFvLThvYlAwWVpiMDFRQVVxMVVKZHEwOEFkT1VMTUY2MldvMSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyMjY4CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKR2RFUUloTnRVelVSU3BzQkpRcGs3SlEiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICIzSDlDK00zIOW+s+WztuW4guOAgeW+s+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2UDNIOUMrTTMiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC40LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKR2RFUUloTnRVelVSU3BzQkpRcGs3SlEiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNzIKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzcwLTgwMDMg5b6z5bO255yM5b6z5bO25biC5rSl55Sw5pys55S677yT5LiB55uu77yT4oiS77yS77yTIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0LjA0NzQwMDIsCiAgICAgICAgICAgICAgICJsbmciIDogMTM0LjU3OTE5MwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjA0ODc2MjE3OTg5MjczLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC41ODA1MjY5Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wNDYwNjI1MjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNTc3ODI3MjcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5pit5ZKM5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjU5MiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE3Mzg2MjA5MjE3OTg4NDc4NDIzXCJcdTAwM2Xmnb7mnZHpmobku4tcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabWlXTDZwUEl4MVIwdjRIQlNvS3luSTZvcDlMbERIa0dWWGVqbXFwTDZSMUJ6RXpldng1SHZxV3ZHNXVVM3A3ZDlnTlRVTjhudk5HVF9Fa3FNX3BWYkoyUExjTl9VRFE1Nl93dW5DdHBKZkE5S1gtY2Y0bjhXQ0gtb2RzQW5laE5PeE1nNGg4Vy13blNOaVB6eEJ5THpidnBUWnpoRGFVcWJndmhTcFcyeFVpcGd3IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDE5NDQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpwV2lKTWk1dFV6VVJkcTFYdWVEN2lFTSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjJIV0grWEog5b6z5bO25biC44CB5b6z5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZQMkhXSCtYSiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjQsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpwV2lKTWk1dFV6VVJkcTFYdWVEN2lFTSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxMDgKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzcyLTAwMTEg5b6z5bO255yM6bO06ZaA5biC5pKr6aSK55S65aSn5qGR5bO25YyX44OO5rWc77yY4oiS77ySIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0LjE5MDkzMTksCiAgICAgICAgICAgICAgICJsbmciIDogMTM0LjYwODA3NDYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4xOTIxNTU1Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNjA5MzgxOTI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMTg5NDU1OTIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjYwNjY4MjI3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIumztOmWgOWkqeeEtua4qeaziSDjgYLjgonjgZ/jgYjjga7mua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0OTEyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTM1OTY5NTgyNzc1OTE2NDg0MDdcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabVdadEFMRVJHNU95UGZQUkh5UGx3Mlh1TENFRHNtSUR5cjJKWFFkY3dXQlpLVEFwYTJDVXlpaUtlZDZGRkZsb25oeXRoWkoteHBWMFU2T3dSZVJveFc0bldUV1BTTzA4QnNCWWt3NEt1RS1rUVAwbXFpSzZOOUxMNjR6R3g1alBsVEdPaTZ4b05JQ2tKZ1hZc1E0VkVSX2g3YWJFQ0V6Rl9EY2lWYzN1MDJadzNlIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDczNjAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUptLUFsNDhCbFV6VVJDR2ZYM05UYWhkMCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjVKUjUrOTYg6bO06ZaA5biC44CB5b6z5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZQNUpSNSs5NiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUptLUFsNDhCbFV6VVJDR2ZYM05UYWhkMCIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDg4NwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3NzAtMDAyOCDlvrPls7bnnIzlvrPls7bluILkvZDlj6TlhavnlarnlLrvvJbiiJLvvJHvvJYiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuMDc4NjY0LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNC41MjA3NzQ4CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMDgwMDI0Nzc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjUyMjEyMTc3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjA3NzMyNTEyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC41MTk0MjIxMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlhYPnlLrmua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyNDQ4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTIyNTQyNzkxNjA5MTE3NTA5NDNcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zabm9JZVFRZU1tVjJ2RGdSczhpN3piOHBUVW5IaFhqTjRITDRubjhiV05qS3UtVjVrcThYMXQ0amRFWjlKVFkwei1Gd1VxenNNdzNSaktzRUFfemxfNzNORlhaUXFoNXFidW9xdjhNd2NhSGpKekJYR3FyRjlaVkxwN3Z6b2NZTlVINEktQ0VqZnNEaVlqSjZKOURTMG0yR2ZvaUZydmJTVGhfb1FDWjA3RUQzbVV4IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDI0NDgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpGZFk2SHR0eVV6VVI1S2E3d1phWlFlbyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjNHSEMrQzgg5b6z5bO25biC44CB5b6z5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZQM0dIQytDOCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKRmRZNkh0dHlVelVSNUthN3daYVpRZW8iLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNzkKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzcwLTA4MzQg5b6z5bO255yM5b6z5bO25biC5YWD55S677yR5LiB55uu77yV4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0LjA3MzIyNDYsCiAgICAgICAgICAgICAgICJsbmciIDogMTM0LjU1MDUzNDcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wNzQ2NzA4Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNTUxODk1MDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMDcxOTcxMjIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjU0OTE5NTQyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9sb2RnaW5nLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM5MDlDRTEiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2hvdGVsX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgbPjgZbjgpPjga7mua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzNDU2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDcyOTc4MjA2NDcxMjA3MzkwMDFcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zaa2ZBbHkwMjl3UzVHbW1GS2w0clZsaHdOd2RPQU5TY0ZjU2JjSGdHQWNxU3NlcDlMSWtENUlOYTJCbDZpYUNZU0Zuc2FPY2dhcllldFlyVGVPaXFIYlpidkJIUjI3MUlqVE5jWWhOdXFtME9OUG53UmMwWlZGY3dHQnVxWFBsR25ScGtNSVE0ZVBRMFh2bkZ3ZkdsMFVobkJid0NzTXVzRGExcWlhSDRXNG5rUlRYIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQ2MDgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpMUXQ5SkdCdFV6VVJiZ2NONmxSTHEyVSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjNIRjIrNzYg5b6z5bO25biC44CB5b6z5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZQM0hGMis3NiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpMUXQ5SkdCdFV6VVJiZ2NONmxSTHEyVSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAibG9kZ2luZyIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE3NAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3NzEtMTM0MyDlvrPls7bnnIzmnb/ph47pg6HkuIrmnb/nlLrmpI7mnKzlm5vlrq7opb/vvJPvvJjvvJgiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuMTE5ODI5NSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNDMyNTUwNgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjEyMTAyMzc3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC40MzM5ODQ1Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4xMTgzMjQxMjAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNDMxMjg0ODcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5ZCJ6YeO5bed5rip5rOJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjI2OCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAzNzY0NjA0NTU3NTQxOTc0MjIyXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmxpb0pLZlNUamNySVJPY1JPSjlHWjVnZDZsd2NpSHpVd1VVcHRFS3RFWFdpWU90R050ZzNQTkFQV1pyaExsUXM5SkxFUHNNY2ZvY1JDMGJrTVFtQUk0N0szakxjaGVpbjNzbGhXTUZCblhuczRCQVNtZVZZLTZiVVBzZF9WUlZWbmFhTnQ3MmYydTJnbDBIUmFBUVFCdHA2MzFYSVZ2ZFhtd3hPRVNLd3JneG93QSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKYzdFYW55WjFVelVSQWo1cjhaTkhhSE0iLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI0QzlNK1gyIOS4iuadv+eUuuOAgeW+s+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2UDRDOU0rWDIiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy40LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKYzdFYW55WjFVelVSQWo1cjhaTkhhSE0iLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTg4CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc3MS0wMTAxIOW+s+WztuecjOW+s+WztuW4guW3neWGheeUuuaXremHju+8k++8lu+8leKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wODQ2Mjc1LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNC42MDA3MTIyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMDg1OTYwMzc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjYwMjA1NTUyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjA4MzI2MDcyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC41OTkzNTU4NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmua/jgYLjgZ3jgbPjgbLjgo3jgbAg5bed5YaF5rip5rOJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDAzMiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAwMTA0NTkxNTA4MzM4ODQ3NTEyXCJcdTAwM2Vnb3JpZ29yaSB0b250b25cdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabDNhV04yYXRLcGduUnVmUWQ1UXJGLTVaRUFiR1JRcHJwb0tCNVNfT2FtckxTb2ZlbjhDdVN0dGNLVl9odGJQSEpIYzRlSlBWekhYd20zR0tOOGRES0lBMS1YeTJKcFYweDBHT1R0UTJ2Z25BcWlFX2M4QnpzRkw5LVNLa1V0VGM3SkpRUmlrdnU0OHlvU3NEMkxXaS1FekNsVjdYZUV0OWdkOU5BYUF1SGt3Z1JFIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpEUjA5b0Roc1V6VVIyZ0xOLUJ3XzhISSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjNKTTIrVjcg5b6z5bO25biC44CB5b6z5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZQM0pNMitWNyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjYsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpEUjA5b0Roc1V6VVIyZ0xOLUJ3XzhISSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxNTIKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzc5LTM2MDQg5b6z5bO255yM576O6aas5biC6ISH55S65aSn5a2X5YyX5bqE77yR77yQ77yX77yVIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0LjA3NjEwOSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuMTYzMjc0MgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjA3NzQ3MDMyOTg5MjczLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC4xNjQ2MjIzNzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wNzQ3NzA2NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuMTYxOTIyNzIwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5bKp55uk5rW0IOeIveW/q+axlyIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDE1MzYsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNTk4OTgzMDQ4OTgwMTI5Nzg2NFwiXHUwMDNl5bKp55uk5rW0IOeIveW/q+axl++8iOOBjOOCk+OBsOOCk+OCiOOBj+OBneOBhuOBi+OBhOOBi+OCk++8iVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptTklWSEYxSzRIc2c4YmtJYUcxdkFvdjN5Z0hPazN2UmZJWUVOU0NFdG5iUGJCRWN6QWlmYzliMmx5Tk9ydG5nc2N5djJMXzNYRFA3UkNmLTVJdmZXUjgzQVk1ZDBrSFhobUhIN0xpZWpXdmJ5dFhrT3BXNVJQaFRUUUZ4Z094N2Qtdng3NUhTd2hvT0ozNmNSZVNjeUtwc0x4U0lXcHpKV2wwT1FLLWNKbEY0U0UiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMjA0OAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSmF6cmdray0zVXpVUkNGbU00djYyeENRIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiMzVHNytDOCDnvo7ppqzluILjgIHlvrPls7bnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlAzNUc3K0M4IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSmF6cmdray0zVXpVUkNGbU00djYyeENRIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3NzAtMDkwNSDlvrPls7bnnIzlvrPls7bluILmnbHlpKflt6XnlLrvvJLkuIHnm67vvJLvvJjiiJLvvJIiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuMDY4NjA2OSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNTQ2Njc0NwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjA2OTk4NDIyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC41NDgxMzkyMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wNjcyODQ1NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNTQ1NDM5NTcwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5paw55S65rip5rOJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjI2OCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA5MTY2Mzg0NTMzODY3MjcwOTQ1XCJcdTAwM2VNQVNBVE8gVEFOSklcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabnpPQ0N6SEJyT1R4dXdkTWFZbERYT3haQjdoaWdnMDg0ZTlQTTBKUHNFc1RVLUJteldXYnZkWUpjUkNYZjVoaUg5NzZsbGRwVzJ0SGg5Q2lKTGIzc1hBTEVxa1MzalhKdVJqdDBSdG9uRndaekxoN2NDOXZ1RUhhZFRzcWJZSVZYSy1SZ2lOa18wSEJTSGY0RThHSnd6WGhmNXlPcEtUS0w2ZmVQa2ROOWFTeU5OIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpWUlBDdDZaeVV6VVJLalkwbld1d2NSZyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjNHOVcrQ00g5b6z5bO25biC44CB5b6z5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZQM0c5VytDTSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjQsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpWUlBDdDZaeVV6VVJLalkwbld1d2NSZyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDExNQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3NzAtMDg2MyDlvrPls7bnnIzlvrPls7bluILlronlroXvvJHkuIHnm67vvJbiiJLvvJPvvJgiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuMDcwMzI1NSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNTcwOTE4NAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjA3MTY0MDcyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC41NzIyNTc1Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wNjg5NDEwNzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNTY5NTU3ODcwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5a6J5a6F5rip5rOJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIyNTEsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNDEwMTAxMzIzNTYxMzkxNDA2M1wiXHUwMDNl55qE55Sw5b6z5qyhXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm43dWhkLWNvRG5lUWs4T3NxV1VCRF84OGM5U0gxa1V2QVg3c1BaeVZGdlFNMmdBY09MZFpjVmtXTGlxLWdkUjhwV0RLY25aZVlTNlgtc0VZc3ZWUkJIcDJHUVVTUEt0c0RrYThyVXIzVUJGUUdwYVpKajliOUJla3VYTVVVOTU3bDdzNG15YTdLTGpyMG01djN3blMxcDd5STVFVV82UXFmRGx3dnBVc0RXYV9BViIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzMDAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKcDdub2pCSnRVelVSbUtyb1JvaFgwVmciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICIzSENDKzQ5IOW+s+WztuW4guOAgeW+s+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2UDNIQ0MrNDkiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy4zLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKcDdub2pCSnRVelVSbUtyb1JvaFgwVmciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjYKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzcxLTE1MDcg5b6z5bO255yM6Zi/5rOi5biC5Zyf5oiQ55S65ZCJ55Sw5qKo5pyo5Y6f77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0LjEyMzg3LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNC4zNTM2OTgKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4xMjUwNzUxNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuMzU0OTU5NTI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMTIyMzc1NTIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjM1MjI1OTg3MDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWkqeeEtua4qeazieW+oeaJgOOBrumDtyIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIxNjAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNjk0MTgyNDAwNzUwNTU3MDYyNlwiXHUwMDNl44GV44Gs44GN44KC44KTXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmw5MkpicTVObTh3eE1WUTh4T0tyakVKbjZfZUNGNUFQaS1aY3FRcWVNTkppeTNrdHRVSm5JemFVcjJLVW1OYVBlU3BhcGJ4czJFTEJIQXhpYkU1YkNlcDB3RnU5ZkFucFVsUGQ3cEt6VVRDMmY5YXVSYXNmNUNzRUtJb0JTcXo0QnZEazhRbGdmeEdUNzNFX3pRaHNfM3JJVDN4NkpWWURwb243UEQ2V2xxWDA0aiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzODQwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKTFU4WHBiZWhVelVSaEtuel9ZTUxnSGciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI0OUYzK0dGIOmYv+azouW4guOAgeW+s+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2UDQ5RjMrR0YiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKTFU4WHBiZWhVelVSaEtuel9ZTUxnSGciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicmVzdGF1cmFudCIsCiAgICAgICAgICAgICJmb29kIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNjE1CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc3OS0wMTAxIOW+s+WztuecjOadv+mHjumDoeadv+mHjueUuuWkp+Wdguaki+acqOWOn++8k++8kOKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC4xNjcxNDksCiAgICAgICAgICAgICAgICJsbmciIDogMTM0LjQ1NzM5MwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjE2ODQ4NjYyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC40NTg1MTE1Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4xNjU3ODY5NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNDU1ODExOTIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44GC44Gb44Gz5rip5rOJIOOChOOBmeOCieOBjuOBrumDtyIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIyNjgsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExODQwMDg1NDA0MjgyMzczODIwNlwiXHUwMDNl5bGx55WR55u05LmLXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm5aUDZQUDhkTFNsNUdYcWFoWnoxaWZFVDBiakF2RXhBUVZkbENNd2FyZF9lZXNVci1QTGFtazBvOTRDcnFyVlFoQ29GSXFMMUN3SzcwVUpab1RudHZqczhoWHJlOHVSVl9xYXU3cWo1Ulo0VTJoZk8yeldJX0FUQXVpZmlSQ0R0U3dobVBMT3EtVXg2VmJ6bm95WXM0aHJRSFpyWkhkRkh4ekJsdmktYXlSdDA1ciIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKSi03OXd4OTBVelVSdWhGVVdwRVZ0SzAiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI1Rjg0K1ZYIOadv+mHjueUuuOAgeW+s+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2UDVGODQrVlgiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC4xLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKSi03OXd4OTBVelVSdWhGVVdwRVZ0SzAiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMzM5CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc3Mi0wMDMyIOW+s+WztuecjOmztOmWgOW4guWkp+a0peeUuuWQieawuO+8ke+8l++8luKIku+8ke+8kCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC4xNjk0MTQzLAogICAgICAgICAgICAgICAibG5nIiA6IDEzNC41OTcxNDI0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMTcwNzc1MTI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjU5ODUxMzk3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjE2ODA3NTQ3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC41OTU4MTQzMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjga/jgbTjga3jgZkiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpHX21kTFh0dlV6VVJfLV9TRUpPSXU5YyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjVIOVcrUVIg6bO06ZaA5biC44CB5b6z5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZQNUg5VytRUiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA1LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKR19tZExYdHZVelVSXy1fU0VKT0l1OWMiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDMKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Tue, 07 May 2024 10:16:55 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%BB%8B%E8%B3%80%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 07 May 2024 10:16:56 GMT
      Expires:
      - Tue, 07 May 2024 10:21:56 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42167'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=555
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 07 May 2024 10:16:56 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%A0%83%E6%9C%A8%E7%9C%8C%20%E8%A5%BF%E6%9D%8F%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 07 May 2024 10:37:25 GMT
      Expires:
      - Tue, 07 May 2024 10:42:25 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '4254'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=559
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjMyMC0wODI2IOagg+acqOecjOWuh+mDveWuruW4guilv+WOn+eUuu+8k++8le+8lO+8lOKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNi41NDIwMDc3LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS44ODUzNjk3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTQzNDEyNTc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg4NjYwMDc3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjU0MDcxMjkyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS44ODM5MDExMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgrnjg7zjg5Hjg7zpiq3mua/jgrPjg7zjg6sg5a6H6YO95a6u44Gu5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTgzNiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAyNjYyNjcwOTc1NzQ0MDY2Mjg1XCJcdTAwM2Xom63nlLDltIdcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabldYazVKNmVvR0hxVjlORWVXTVNLZWVvVkVEQjhmcUtubm1DY0x6TlJzSnRsRDlMcHFlUkYzMVZPUXBTRWpkMDF5X2s2S0ZuVjJLYXhnajhDMUhMWGdhRXVQVzY4Zlp4Q2stNjRkdlZDam1vaDBhOEhEVEt3VTNGUl8tLVctVmRsTnY1SHd3RkJQZmp2ejBaWFlCTWdqZjNMRThzOFJyMTA5S2JxUUFISURxcjVrIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMyNjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpJYk0wSG9abkgyQVJROUlrSmVtRlZFOCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkdWUlArUjQg5a6H6YO95a6u5biC44CB5qCD5pyo55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UThYR1ZSUCtSNCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjYsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpJYk0wSG9abkgyQVJROUlrSmVtRlZFOCIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNzIyCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjMyMS0wOTgzIOagg+acqOecjOWuh+mDveWuruW4guW+oeW5uOacrOeUuu+8lO+8mO+8mO+8kCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNi41ODEzNDU1LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS45MjQzNDc5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTgyNTEyNzI5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjkyNTQ3MTI3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjU3OTgxMzA3MDEwNzI5LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS45MjI3NzE2MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmpbXmpb3mua8g5a6H6YO95a6u5bqXIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzg2NCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAwNzM2MDYyMTQ3ODk4MjkzMzM4XCJcdTAwM2XmpbXmpb3mua/lrofpg73lrq7lupdcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabnBKdC1UWk9vMVRDcnQ3NVFhWGllaGVvZndyc21FdGM3VUE2MHBwOWJVdkFSN2lyLXFCWkVsWU9CeGZRV0htNU9iWmh5aHlNX1FhRnVJcmkxUGhCQllfZFJEVXJSenQtYkRmZk5CaE11N2t5OU5ETGhiVVdLNGFlMEpPazFHNEdMUzNXcW9qRzNJVXBlZzltSmpnb2daSXN4TjdZaTNHSFRFNnY5RnpEU3pfUVhvIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDUxNTIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUo3WjFIempwbkgyQVJleklEcGs0RHo5ZyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkhXSkYrR1Ag5a6H6YO95a6u5biC44CB5qCD5pyo55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UThYSFdKRitHUCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUo3WjFIempwbkgyQVJleklEcGs0RHo5ZyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTE5MAogICAgICB9CiAgIF0sCiAgICJzdGF0dXMiIDogIk9LIgp9
  recorded_at: Tue, 07 May 2024 10:37:26 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%9F%B3%E5%B7%9D%E7%9C%8C%20%E5%8D%97%E8%88%AA%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 07 May 2024 10:37:26 GMT
      Expires:
      - Tue, 07 May 2024 10:42:26 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41569'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=730
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 07 May 2024 10:37:26 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%B2%96%E7%B8%84%E7%9C%8C%20%E7%8E%B2%E5%A5%88%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 07 May 2024 10:37:27 GMT
      Expires:
      - Tue, 07 May 2024 10:42:27 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42590'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=376
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJuZXh0X3BhZ2VfdG9rZW4iIDogIkFVR0dmWm1TSHk4VS1JNXhWcmotZS1pZlhpZFFtMWtrYjVyZklBVzlFWW5VcXg1UFNWaDh1elNDQks1VmpVZUZ1ZENqbFJXbjJRb1RRVlo5RDE1R21aeTRqNF9DdFMtM25PTmpiTDRzN0tOQXl1N0RhTjl5S1gtOU9Ud1VqQU5jOE9feVZzb2lPYlZvUTJGbkoza29tSXJLam1xYm16SE94eGx3a012aUFZWWp5X0d6cG5RM0l2ZVAtcExSSHdsRk81TFVMU3BtYWZfS0VTdW91blgzak9OS2xHak1Ja2RuR2NmNWpQZkRpR19GWVBRdTFJNEFiampfeExqQ0RCcFM3NWhDWGp1d1VyNTVqbVh1Z1N2S2R4QnExZk9TcVFZbWFSbXVLa3hTLXUxampMT2FHLURwanl2Um5YWjl2cU5TZGprRVF0bzAxRk9nbFBOSktUdzFtb19xX0xBR2h1WUhNUE5rWGtSaG5LWTFVR04teHBfWTdrZ2RaMlQycDB4dVlNMW1Gc2NEZFlWTFVnclhYT1VOXzNuXy1nWGhRRExsa1ZNRiIsCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjkwNC0xMTExIOaylue4hOecjOOBhuOCi+OBvuW4guefs+W3neadseaBqee0je+8ke+8lu+8mO+8keKIku+8ke+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAyNi40MDk3MTEsCiAgICAgICAgICAgICAgICJsbmciIDogMTI3LjgzNDEzNAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI2LjQxMDk1MDcyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyNy44MzU0NTc2Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi40MDgyNTEwNzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuODMyNzU3OTcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5YGl5bq344K144Km44OK576O5Y6fIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAwMCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAzOTA0OTkyMDY2NDcyODg3MzcyXCJcdTAwM2XllpzkuIDph5Hln45cdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zaa1dOd2dsNzB0RFM0U19TS3N4WjgxTjRpU1ZxSlk4OWIzWXNQVE5Sdjl4Y2lGOUIwdWw0UTM4QjE5QlZjV1VYZ2lzZEpZMEtWa21CTGc1S0JFQzVIZGZVc3liOHpWaXV3cWtHZ3lKb1ljd0huNERZRktydktPLVhpekI4aHFEOFk4SUdYNkI2ZHNOVmEzQnFNME5XR0lFVjdrXzAtOEd4bXBxNmVqQlA5OWg2VmtvIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDUzMzMKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpLZG90T1pJUDVUUVJ6TGNZWWdRYnFWVSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkNSNU0rVk0g44GG44KL44G+5biC44CB5rKW57iE55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI3UVI5Q1I1TStWTSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjYsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpLZG90T1pJUDVUUVJ6TGNZWWdRYnFWVSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDQwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjkwNC0yMTUxIOaylue4hOecjOaylue4hOW4guadvuacrO+8me+8l++8keKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAyNi4zNTI0NTYzLAogICAgICAgICAgICAgICAibG5nIiA6IDEyNy44MTk5MDU2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuMzUzODU4NjI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI3LjgyMTI1NjM3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI2LjM1MTE1ODk3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyNy44MTg1NTY3MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlsqnnm6TmtbQm44K144Km44OKIFJlc29ydCBTcGEgTWFrYW5hIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTIzNSwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAyMDAyNDY1NDk0NDI0MDM0OTc2XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm1lN2dQNVRiSng4Vms2Y3VJWkZNWVh3MEtxQWR0U2VHYXZxQ2tWV3Y5NXByRWpHa2JlazN1ZFkzbHF0VXdyMEFta0hxRkZmdmxUbjN2eUREXzd4X2dWOXZsakVjcGJENG5KaWxIdjI1RGZ2djdnMjVSUmR6elJ5MW1kODhONkxJU01YN2d0NktVX2EyUm13TUFuOUotdmtQalZza2FiSEM2MmlhNk4wZHZYRlA0UCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxMTA5CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKaldXZGNaZ1A1VFFSZ0t5bnRzdmJBVjgiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI5UjI5K1hYIOaylue4hOW4guOAgeaylue4hOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiN1FSOTlSMjkrWFgiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKaldXZGNaZ1A1VFFSZ0t5bnRzdmJBVjgiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgImJlYXV0eV9zYWxvbiIsCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogOTUKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSOTA0LTIxNzQg5rKW57iE55yM5rKW57iE5biC5LiO5YSA77yT5LiB55uu77yR77yQ4oiS77yS77yQIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDI2LjMwODk3NjEsCiAgICAgICAgICAgICAgICJsbmciIDogMTI3LjgxNjg1NzMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi4zMTA1NjkxNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuODE4MDg5NzI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuMzA3ODY5NTIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI3LjgxNTM5MDA3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuaylue4hOWBpeW6t+OCteOCpuODiiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA1MzEsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNTg2OTk4Nzg2ODEwMjI5MjQ1OVwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptRDVwZXVCTVZRZUFtRVVUMExyMC13OWhTM01tdnkwb2Z5TU92bUd4VnBOejJ6TWN2RlhaOFZBblRxYV9VRy1qejdtSmtfa19Ucm5CQWpnTE1kc3U5MWNGZ0JxRFJWa3gySzNIUjhzbFEtQjhOUkN1dF9iUkxodl9uMldoUl9JMEQ5UTI1MXI1S0t4MVNHc0ExUnQ3blVXNEhmU2FFdHJQR0tmU09laHA4WVNKM0oiLAogICAgICAgICAgICAgICAid2lkdGgiIDogODAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKZFNFOU9FME41VFFSLUlVeE1YWWRwMWMiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI4UjU4K0hQIOaylue4hOW4guOAgeaylue4hOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiN1FSOThSNTgrSFAiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKZFNFOU9FME41VFFSLUlVeE1YWWRwMWMiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxNDIKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSOTA0LTA0MTYg5rKW57iE55yM5Zu96aCt6YOh5oGp57SN5p2R5bGx55Sw77yS77yY77yR77yWIOOCtOODvOODnyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAyNi40MzE4NDEyLAogICAgICAgICAgICAgICAibG5nIiA6IDEyNy43ODIyMTI0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuNDMzMjM1Mzc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI3Ljc4MzM2Njc3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI2LjQzMDUzNTcyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyNy43ODA2NjcxMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmspbnuITjgrXjgqbjg4pUSEUgWkVOIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDE0NzksCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMzczMTUxNzc5ODI3MTExOTM0MlwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptOW5UM3RRQjl2cnJsRF9wYXZqSV9NaUc3VjUxR3NnTEZ5ZE9XeVNKMW03T3VTZnduNnpDQnBjYVc2MnJzRWp4NTNhQnI2M1JORjI1Yk1PTmpjazl3dWs3SWtOQWVwcmtJMHlNLW90cjNpcXVURWk1cnNaX083YWhIVUZpZTJRbWpRWk5LQlRXNHREc2FjY0dNcUdUVUpBZzFWbHB4ak85cTh2YW1xV29pd3RmdHIiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMTEwOQogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSlFWeWZNWkFSNVRRUjRKTHNVVkdIN1JVIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiQ1FKSitQViDmganntI3mnZHjgIHmspbnuITnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjdRUjlDUUpKK1BWIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDUsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpRVnlmTVpBUjVUUVI0SkxzVVZHSDdSVSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDEKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSOTA1LTAyMjEg5rKW57iE55yM5Zu96aCt6YOh5pys6YOo55S65LyK6LGG5ZGz77yS77yV77yZ77yZIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDI2LjY0MTkxLAogICAgICAgICAgICAgICAibG5nIiA6IDEyNy45NTIwNzQ3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuNjQzNTc0MTc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI3Ljk1MzIyMzAyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI2LjY0MDg3NDUyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyNy45NTA1MjMzNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLkupznhrHluK/jgrXjgqbjg4oiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxNDc5LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDI2NjE1NzU1Njc0NDM4OTI0NDhcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabS1vUEhiZ20wNXl0WklROGJJa3BQUkFWRGloeE9NejNaamQ1b215UThEMlRrQjdaRnF6dXdnUUpldTBHTHUxLVUwRE1PTFdXeUpZQ0FXNUthaVFvZENzWTA3V1ZfSHU3OFIwa1hUUTFBN25fU3BVWldBcF9hMGpGTzFHWFRrZHNNV2xmd0FIc1V6WVd5VTFhTzQzbG5welFsY2pDeHRWR25EbU82VWs2VV9nZ1UtIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDExMDkKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpNd3JqMXZ2NTVEUVI5QnpBbnpPaGJuQSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkpYUjIrUVIg5pys6YOo55S644CB5rKW57iE55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI3UVI5SlhSMitRUiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjUsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpNd3JqMXZ2NTVEUVI5QnpBbnpPaGJuQSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDYzCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjkwNS0xMzAzIOaylue4hOecjOWkp+WunOWRs+adkeWWnOWmguWYie+8ku+8kO+8mO+8kyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAyNi43MDY0OTQ0LAogICAgICAgICAgICAgICAibG5nIiA6IDEyOC4xNTI4MjQyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuNzA4MTQ5MDc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI4LjE1Mzc0Njk3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI2LjcwNTQ0OTQyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyOC4xNTEwNDczMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJCVU5BIFNBVU5BIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQwMzIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMDYyODQ2NjY1Njg5Njk4ODA3N1wiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlprOEtaQXUyR1hxMms3X0REVXFPRnhjajNiWXpqSWYwa2hUTFlieFliQ1NCUzlPRHFjb1Jrbjh0bDlwUHJpMHJZclZ3ZjJHNkNCYWxENVhkRllUcEhaTXJXWC1ieVVLOGJHWmdxOVREOVJIUS1ydS02cnM1eGdZTE5WbTJXRzR6Rmk4SGR4c0hlSkNXMGlpakpUbVppQ2pVREZmaml5MHhWTW5ieFVwckJxcl9qSUgiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAyNAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSjU0TVY2RkJGNURRUk03anBIcVh3RzhrIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUDU0MytINCDlpKflrpzlkbPmnZHjgIHmspbnuITnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjdRUkNQNTQzK0g0IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDUsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUo1NE1WNkZCRjVEUVJNN2pwSHFYd0c4ayIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDMKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSOTAwLTAwMzMg5rKW57iE55yM6YKj6KaH5biC5LmF57Gz77yS5LiB55uu77yR77yR4oiS77yR77yYIDFGIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDI2LjIxNTg1OTcsCiAgICAgICAgICAgICAgICJsbmciIDogMTI3LjY3NTUzNjgKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi4yMTcyMjcxMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuNjc2OTIyNDI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuMjE0NTI3NDcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI3LjY3NDIyMjc3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIkxVWFVSWSBQUklWQVRFIFNBVU5BIEtBSU8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0NjcyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDA0NTAzOTk3MzE5MzEwNzE5MDdcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabmRtSnVTUk4xNEFCNjBHTy15a0FSU1JjaS1mRFpOZ2dwcHZGREdUUUZhYUIxSnoyUW5lOVI3Nmo4Q1JWY3EzVEdUSlJSSDliVnkzbTJoWWowYjY3Ynp0ckVNTUptSzlRRVVvU3k1WEs5TXRhMXRMMy1sN3Vvc184aWxEUGNxQzh4cXJ6Z1B6NVNrTEZCZnlxRl82XzloMVJqazlOdGJ3TmRzRl9TUUNPY1N3c3lHIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDcwMDgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUptUXMyRnNKcDVUUVJUcncxY1BReUY1cyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjZNOEcrODYg6YKj6KaH5biC44CB5rKW57iE55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI3UVI5Nk04Rys4NiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA1LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKbVFzMkZzSnA1VFFSVHJ3MWNQUXlGNXMiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA4CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjkwMC0wMDMzIOaylue4hOecjOmCo+imh+W4guS5heexs++8kuS4geebrjLnlarlnLAx5Y+3IiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDI2LjIxNDY3NTMsCiAgICAgICAgICAgICAgICJsbmciIDogMTI3LjY3NjU3MjkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi4yMTYxMDQ0Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuNjc3ODQzNzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuMjEzNDA0ODIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI3LjY3NTE0NDEyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuODl+ODreOCueOCv+OCpOODq+iyuOWIh+OCteOCpuODiumCo+imh+ecjOW6geWJje+8u1Byb3N0eWxlIFByaXZhdGUgU2F1bmEgTmFoYSBLZW5jaG9tYWUg5rKW57iEIOmCo+imhyDkuYXnsbMg44K144Km44OK77y9IiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzkwNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAxNjQ5NzQ4NDI3MjcyNjU5NDU4XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmtWMlJ1SUZ6ZGFzampSSFpIX21LQmdsLThIbHJfbUpiUGFya2dudFl4dWJSMnFkZDRzaXl1SzZVSGptbDU1YjRuaVlDLVd0bDd6WGFMeXBILXVCWWhrRWxPZ29aU25DV2psRUhQN1RIVUh1Y0Q0UUhqSUtTLVVuYkRIRHhic2Fpc1VhY3JEaXhqZnMtZHp6eEtCSVhDUTZ2UFcxVTFuOVB5aVV3ejd2ek1SWWhWMyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA1MDQ0CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKaDlNMGNKNXA1VFFSaTVpRERfbi1WUUUiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI2TTdHK1ZKIOmCo+imh+W4guOAgeaylue4hOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiN1FSOTZNN0crVkoiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKaDlNMGNKNXA1VFFSaTVpRERfbi1WUUUiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA1MAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5MDQtMDAzMyDmspbnuITnnIzmspbnuITluILlsbHph4zvvJLkuIHnm67vvJniiJLvvJYiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMjYuMzIyNjUzMywKICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuNzkxNjMwMgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI2LjMyNDAzMDc3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyNy43OTMwMTc3Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi4zMjEzMzExMjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuNzkwMzE4MDcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44Kw44Oq44O844Oz44K144Km44OKIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMDAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMzkwNDk5MjA2NjQ3Mjg4NzM3MlwiXHUwMDNl5Zac5LiA6YeR5Z+OXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm5heEN1eXpPemJZdGNOdDJ3VTRxTVJPZlYzR0RBdklNeXBpU2g4c09Vdkg2azdEZHVwT2tnclZkMzVBcWY2T1B4Q1dILUxxUzgzTUlEb1JCc0JjbFB3YjNFZmdPV1g4LUhXNFp1a0d5TUZrdkYwOWhIbEtLd0NuMHlaZDVmWWlHV0Fzd2xOdC1uOTducTAtSEhGWkQ2WmhVU1EzUTRFc1JjSXVRQWJpMENRNlpNeCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKRGU2TmFtWVM1VFFSQks1QUprVEhIeDAiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI4UUZSKzJKIOaylue4hOW4guOAgeaylue4hOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiN1FSOThRRlIrMkoiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC40LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKRGU2TmFtWVM1VFFSQks1QUprVEhIeDAiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxOAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5MDEtMTQwMSDmspbnuITnnIzljZfln47luILkvZDmlbfkvIrljp/vvJTvvJLvvJgiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMjYuMTc0MjA5MywKICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuODA4NTY4NwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI2LjE3NTU3NTg3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyNy44MDk5MjU2Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi4xNzI4NzYyMjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuODA3MjI1OTcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi556R5oOz44K144Km44OKLeWPpOawkeWutuOBp+ODquODqeODg+OCr+OCueOBqOeZkuOBl+OBruaZgumWkyIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDA1NDY3NTA1NjE5MjE1MDI4OTBcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabENZMXNvMHBMalpTNUgtNWNvNEdDTFZkV3hDZ1dldlFQN01lM3BxcWRLUWNPRUJSMDNZMFJoU2hPR1BVUF9jTG1pYkhyZmRheGhsdmVUcFhST1paX2ljUUViZjlCcGxYZWM5M25jZ195YXBUZ00zcy1VX1RxTWN2WmR4R2haV1dnbFFTQTM3cmluVWwwOFlLLUwzeGxFUi0tWm5oQ2U2NjZNT0xLWnMxb3pYZDNrIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpXYW1UUGxOdjVUUVJhLWNJdUEtZFU4ayIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjVSRjUrTUMg5Y2X5Z+O5biC44CB5rKW57iE55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI3UVI5NVJGNStNQyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA1LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKV2FtVFBsTnY1VFFSYS1jSXVBLWRVOGsiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA0CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjkwMC0wMDMzIOaylue4hOecjOmCo+imh+W4guS5heexs++8kuS4geebru+8k+KIku+8kiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAyNi4yMTUyOTE2LAogICAgICAgICAgICAgICAibG5nIiA6IDEyNy42NzcwNTM1CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuMjE2NjQzODI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI3LjY3ODQwMjA3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI2LjIxMzk0NDE3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyNy42NzU3MDI0MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjg5fjg63jgrnjgr/jgqTjg6vosrjliIfjgrXjgqbjg4rjg4bjg6njgrnjg4rjg4/vvLtQcm9zdHlsZSBQcml2YXRlIFN1bmEgVGVycmFjZSBOYWhh44O75rKW57iE6YKj6KaH55yM5bqB5YmN44K144Km44OK77y9IiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTgwMSwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEyMDEzNDk5ODg2MjU2Njk1OTgxXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmxCaWhIR254Z2ppSU1RbGdZcldIbVhzMV93ai1nYnF3TmZ6aGhUSFFSdnhGNWRmSk96VVBucDhwbkhHb0xwWUZPM1V6eWxUc1MyV0dmbG10d0Z4NXZUNWNlMHdOam5aNkx6VGRwOUVibVh1djF6M1U5b3cxT1lSaFJOZTVvUXBIYmZqdXRJbUc1X1RsUXZsd2RtbTNGRjU0OGZyRXIyNmxlRDRKR3Fwa2xFdEJlTCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyMzI3CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKV2YybDUtcHA1VFFSdzRmbjEtWEhrYTAiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI2TThHKzRSIOmCo+imh+W4guOAgeaylue4hOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiN1FSOTZNOEcrNFIiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC42LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKV2YybDUtcHA1VFFSdzRmbjEtWEhrYTAiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxNAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5MDAtMDAxMyDmspbnuITnnIzpgqPopofluILniaflv5fvvJLkuIHnm67vvJHvvJbiiJLvvJPvvJYiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMjYuMjE3ODE4MywKICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuNjg4NjE0NQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI2LjIxOTI1MjUyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyNy42ODk5Njk1Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi4yMTY1NTI4NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuNjg3MjY5OTIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44KK44Gj44GL44KK44Gj44GL5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEwNTIzNzU0ODExNjYxOTE1MjgwXCJcdTAwM2VZdSBNaWNrZXlcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zaa0k4ejg3bFlKRHlpSV90em9kRnZzaFk1ZVptczJVempFeGl0cVZOQkN0Y1hWdUF2M2tBd0pRRm05YXBqNWZrZTg5RHZkNXV3ajg0WFdzX3dPeEthSUxFakVKUkxlMDFGbEVROG5MUlJnYUFmNi1xNHBTcVRCZHIxM096cnM2am1GVkpLRUI2Rm1vMmk0QXJVLVJhQVdXZDd0UVRZcFFXZE9yUDdsOV8tU3lZR2thIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUo2NVJjcFh0cDVUUVJnTHBKb3UyR1dNYyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjZNOVErNUMg6YKj6KaH5biC44CB5rKW57iE55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI3UVI5Nk05USs1QyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjYsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUo2NVJjcFh0cDVUUVJnTHBKb3UyR1dNYyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicmVzdGF1cmFudCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJmb29kIiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNjY5CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjkwMC0wMDE1IOaylue4hOecjOmCo+imh+W4guS5heiMguWcsO+8k+S4geebru+8leKIku+8ke+8kyDjgrfjg4bjgqPjgrnjg5rjg7zjgrnjg5Pjg6sgM+majiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAyNi4yMTQ4NjQ1LAogICAgICAgICAgICAgICAibG5nIiA6IDEyNy42ODM0NTEyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuMjE2MjUwNTI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI3LjY4NTA1MjYyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI2LjIxMzU1MDg3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyNy42ODIzNTI5NzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLpgqPopofjg5fjg6njgqTjg5njg7zjg4jjgrXjgqbjg4ogVE9UT05PSSBMQUJPIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE0NjMxNDk1NTE1ODY1NjUwNzg0XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm1VNTZQVXdqSHZZWXVaWFBiM1VoS0p6VTNCUzdyT1pMU1RmazZHZ0REX1ZZNW5XSWxKSWR3U1BrX3hZUWRzSzYtM2VNUDdkLTNBZVF6cUlJWk1DV3Y4S0tueDJuWENQZlh5MTAyUWtnYkV2WWhvSUQ0Rnk4YlNzcHF4UkE4QWthZzVnV2NTa0d2YUJibEtPblBlX2NSZHp1MUN5U0RFR3l1M3RZc0ZRRlVsLUM3XyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKZXlZOVI1bHA1VFFSaTNUR2FFcGlzNjAiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI2TTdNK1c5IOmCo+imh+W4guOAgeaylue4hOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiN1FSOTZNN00rVzkiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC42LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKZXlZOVI1bHA1VFFSaTNUR2FFcGlzNjAiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxMTMKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSOTAxLTIyMjMg5rKW57iE55yM5a6c6YeO5rm+5biC5aSn5bGx77yT5LiB55uu77yT4oiS77yWIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDI2LjI4NDA3NzUsCiAgICAgICAgICAgICAgICJsbmciIDogMTI3Ljc1MzcwMzcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi4yODUzOTQ1Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuNzU1MTUyNDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuMjgyNjk0ODcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI3Ljc1MjQ1MjgyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWkp+WxseOCteOCpuODiiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQwODAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNzY5MjM2Nzk4ODkxOTA2MzU2M1wiXHUwMDNlbmFvdG8geWFtYXNoaXRhXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm1FNTExQjdJY29XclF5LUgxZTNzcFZpbzV3SV9NVlMxWmpKYWduRGlIb2J6bEVqT0lwUmpIYUo3S0ZIYTZHUUdnT2FNcFczcmtLYXdqSW9lRF9mNkNPWHdkdzJkZkZYTlJDM3BGQ3pJdFAxMTRjZkkwOHQwR0ZucXVjMGNRdzJaaXlhQWZiYWFNTml5RzFjbXBTaG1MZTA4RkdfQjZvbF8wTHJkVXFqeDRndmxGeiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzMDcyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKQVdSalBjMXM1VFFSNWhFWi1pSUtZU0EiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI3UU0zK0pGIOWunOmHjua5vuW4guOAgeaylue4hOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiN1FSOTdRTTMrSkYiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC4yLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKQVdSalBjMXM1VFFSNWhFWi1pSUtZU0EiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJzdG9yZSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA0MwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5MDUtMDQxMiDmspbnuITnnIzlm73poK3pg6Hku4rluLDku4HmnZHmuaflt53vvJbvvJnvvJkiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMjYuNjU5NzYwMiwKICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuOTg3Mjk1NgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI2LjY2MTExMTgyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyNy45ODg2NjkwMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi42NTg0MTIxNzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuOTg1OTY5MzcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44K144Km44OKIOajruOBruW3o+eusSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDAwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDQxNTcxNjQzMDUwNTQ3NDA4MDVcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabFNiUDR0YW5VMmpMOVZRbDBORzMzbWRua2tJYklVSERZRWthVVRYQ1RFRkwxbF90TVBPUzBlSzZ3UHZ5bXFfQVdWOURLMkhSNDRmNnFVRTI4QUJ6NXVoZEJ2TXJLM2pIWld0cEp4X0MwTlcxQ0hpTkh5M3ZnSWpGV0VxUlk3Q2FUZ1A0WTBjZ05hbG1UMlNiZC1GbGRwV29Sd1FuRlFvdmNoN3JPTGtHV3Y1cFRlIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDIwMDEKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUphX3FzRmp4WDVEUVJQUEdUS3lhdHE3dyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIk1YNVArV1cg5LuK5biw5LuB5p2R44CB5rKW57iE55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI3UVI5TVg1UCtXVyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUphX3FzRmp4WDVEUVJQUEdUS3lhdHE3dyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDgKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSOTA1LTE0MTIg5rKW57iE55yM5Zu96aCt6YOh5Zu96aCt5p2R5aWl6ZaT77yZ77yR77yTIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDI2LjczNTU5ODcsCiAgICAgICAgICAgICAgICJsbmciIDogMTI4LjE1OTQyNTUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi43MzY5ODQ1Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjguMTYwODU0Nzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuNzM0Mjg0OTIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI4LjE1ODE1NTEyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCt+ODvOOCteOCpOODieOCteOCpuODiiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwODQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwOTQ5ODgxMDg0OTE5NzI2MTQwNlwiXHUwMDNl5L2Q6Jek6auY5aSnXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmsyazZROC1qb0s1RHZoalhfbXFhclBFR3ljQXh1NnJEWmwzTGRLaEJHYWpxam1nNWRjSDNBb0hqSXh0ZTdSODFUeUV1ZDQwajhMRFE1SHV0YTdjWjRIaTZZWnN6eVpGaWVHWS0tMm4zLW1BbnpCejAzcDB4YURPOUpkVDloa3FrNVc1UzFCaFhqcmhhVDNxZVVYRjY4S0t1TzhwVVdNTno4bjVheTBrUXBRQXFNMyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA1NDgwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKTld2TUMwWkQ1RFFSWERqZ2JrRGlMenciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJQNVA1KzZQIOWbvemgreadkeOAgeaylue4hOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiN1FSQ1A1UDUrNlAiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy42LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKTld2TUMwWkQ1RFFSWERqZ2JrRGlMenciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjMKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSOTAwLTAwMzMg5rKW57iE55yM6YKj6KaH5biC5LmF57Gz77yS5LiB55uu77yR4oiS77yVIOaylue4hOODiuODj+ODiuODu+ODm+ODhuODq++8huOCueODkSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAyNi4yMTQzNjUyLAogICAgICAgICAgICAgICAibG5nIiA6IDEyNy42NzYyNDEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi4yMTU2MzAwNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuNjc3NjM4OTI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuMjEyOTMwNDIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI3LjY3NDkzOTI3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIktPVE9SQU4gU1BBIiwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjI1NSwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE0NzE3MDgwMDAzOTcyNjA5NDM0XCJcdTAwM2VLYXRzdW5vcmkgWWFuYWthXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmtjaWJ1R2J2LXdheVNYZm5XQUVpbnRFT0t5c2NxVzExWW5xT3E0RmJ0ejlRdlIzVWpURjBWTmhOSzZ4dDJRVVFoeDZfQzJTaThkSXNzdzEtZHh2bllVbXd6Q3c0NFJ5ejRGYkRrc0V6ZGNubXRHWE45bGo4M3JpMi1qRUhsYkh2TjY0czVuSkgxZGF2VjUxVUo4ZjdaaFJQMFN2WG9mc2E3M2RqNEhLc25XWHVjNyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MTYwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKWmN4a3JxMXA1VFFSazN1Wkh3eUhGaFkiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI2TTdHK1FGIOmCo+imh+W4guOAgeaylue4hOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiN1FSOTZNN0crUUYiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSlpjeGtycTFwNVRRUmszdVpId3lIRmhZIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjkwMS0wMjMzIOaylue4hOecjOixiuimi+WfjuW4gueArOmVt++8ke+8l++8lOKIku+8lSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAyNi4xNzY1NzEsCiAgICAgICAgICAgICAgICJsbmciIDogMTI3LjY0MTA0NgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI2LjE3Nzc2NDkyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyNy42NDI3ODE3Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi4xNzUwNjUyNzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuNjQwMDgyMDcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi55CJ55CD5rip5rOJIOm+jeelnuOBrua5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDEyODAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNDc3NDk1MDY3ODIwNzgyMTMxM1wiXHUwMDNl55CJ55CD5rip5rOJIOm+jeelnuOBrua5r1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpuWDRWM1dMMW1JOE92S1lrSHFIMUd6X1ltdmt1eFJKQ0pXWmdzeUxJbS1XWmlnd3lSLWs4RFJ1dnE5MmtJOG03ZDk0TnFFTVZCQWZZLW5sZ0tBOVhxc3p2bXYzMjVlNUtRODB3dE5pVDl3Qng0c0dGYkxXUGQ3YW9veXFSNkg2aDRyS3Roa3JYN0xGUzA1WU5GT1h5SmtpeWRlUGx6Z0plQjdEYWVhWXF5UVNnYnEiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMTkyMAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkpSQzAtQjVvNVRRUmxjbUE5U0JCenRjIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiNUpHUitKQyDosYropovln47luILjgIHmspbnuITnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjdRUjk1SkdSK0pDIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkpSQzAtQjVvNVRRUmxjbUE5U0JCenRjIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA5NTkKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSOTAwLTAyMzMg5rKW57iE55yM54Cs6ZW377yR77yX77yU4oiS77yVIOm+jeelnuOBrua5r+ODleODreODs+ODiOaoquODnOODh+OCo+OCseOCouODq+ODvOODoCAx6ZqOIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDI2LjE3NjU4NDksCiAgICAgICAgICAgICAgICJsbmciIDogMTI3LjY0MTA3MDIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNi4xNzgwMTY2Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjcuNjQyNTM5MzI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMjYuMTc1MzE3MDIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTI3LjYzOTgzOTY3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIueQieeQg+a4qeazieeArOmVt+WztuODm+ODhuODqyDjg5zjg4fjgqPjgrHjgqLvvIbjgqjjgrnjg4bjg4bjgqPjg4Pjgq8o44Oc44OH44Kj44Kx44Ki44O744GC44GL44GZ44KK44O744Ko44K544OGKSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIwNDgsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNTE3Nzc2NzMwMzEyNzAwODQ3N1wiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpuWmZldnd4eGdSYTdqaEVDQmlWNVEwNXhrb19ob1lyRDJOelRxT0oyN2lQNGNEOW9pOTA0YWtod19EYnA0YTJBalo1a0E3UV9PUDNzTTZaMndJSVBVY2FzMGJiV0NjS05fNG1Sc3FVdlJnTUFOYUFtX0lIUUw1bVFEd0laVmFOa014MlNLQTB5VVUxLVRGVGRsY0ZLS0M5YlRWSmpKbElubFZ4dDExaDE2Q09JRXMiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMTQ0NwogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSi1UNDZHM1pwNVRRUmtVWF9DSks4ejhVIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiNUpHUitKQyDosYropovln47luILjgIHmspbnuITnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjdRUjk1SkdSK0pDIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSi1UNDZHM1pwNVRRUmtVWF9DSks4ejhVIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJiZWF1dHlfc2Fsb24iLAogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogOQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5MDctMDQ1MSDmspbnuITnnIznn7PlnqPluILmobTmtbfvvJLvvJfvvJMiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMjQuNDcxMzA3NSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMjQuMjI0NDE2MQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDI0LjQ3MjY1Njk3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEyNC4yMjU3NzgzMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAyNC40Njk5NTczMjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMjQuMjIzMDc4NjcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi576O44KJ5rW344K144Km44OKIiwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjA1NywKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE2NTQwNzEzMDA1MDA5MDExNjQ5XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmtsMEt4bm15NDBvX1kyT2xtWUxsTTFoOHBhc0I0Z1dmWHJTM0wzQ0J3Q3R1YTFWZmNOOGgtbkpOY0M1bmRfYUdRTl9HQkFTNXlHcXkzTGJZU1lYcElFR1NqYXJRcmZNbVBmV2lvYlFKc2N6c0Jmamp3czNNcldLTFFEWi0zZ2hWdk5DZ2Y0TFZXWEQ4dGVWQ3JXZTBwWDRjNDhrbmFOeGR4MEdZQldVRENsUDVWYyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxMTU3CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKQ1FnekVKem5YelFSemVsRlpLRXhpczQiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJGNkNGK0dRIOefs+Weo+W4guOAgeaylue4hOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiN1FQNkY2Q0YrR1EiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkNRZ3pFSnpuWHpRUnplbEZaS0V4aXM0IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDI5CiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0=
  recorded_at: Tue, 07 May 2024 10:37:27 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%AB%98%E7%9F%A5%E7%9C%8C%20%E5%8D%97%E7%9F%B3%E7%94%B0%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 07 May 2024 10:37:28 GMT
      Expires:
      - Tue, 07 May 2024 10:42:28 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '40773'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=388
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 07 May 2024 10:37:28 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B7%A5%E8%97%A4%E5%8C%BA%20%E6%96%B0%E9%99%BD%E5%A4%AA%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 08:46:53 GMT
      Expires:
      - Wed, 08 May 2024 08:51:53 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41937'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=701
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 08:46:49 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%9D%B1%E4%B8%AD%E6%9D%91%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 08:46:54 GMT
      Expires:
      - Wed, 08 May 2024 08:51:54 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '40962'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=800
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 08:46:50 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%9B%B4%E6%A8%B9%E5%B8%82%20%E4%B8%AD%E9%9F%BF%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 08:49:38 GMT
      Expires:
      - Wed, 08 May 2024 08:54:38 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42294'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=579
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 08:49:34 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E4%B8%AD%E5%A4%A7%E6%A8%B9%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 08:49:39 GMT
      Expires:
      - Wed, 08 May 2024 08:54:39 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '22344'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=342
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 08:49:35 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E4%B8%AD%E9%87%8E%E5%8F%A3%E9%83%A1%20%E7%9F%B3%E5%B7%9D%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:04:10 GMT
      Expires:
      - Wed, 08 May 2024 09:09:10 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2158'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=567
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjkyMS04ODQ4IOefs+W3neecjOmHjuOAheW4guW4guafs+eUujQ2MOeVquWcsCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNi41MjYwNDU5LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNi41ODEwNjA4CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTI3MTY1MDI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM2LjU4MjM5ODIyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjUyNDQ2NTM3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNi41Nzk2OTg1NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmuoDlpKnjga7mua8g55m95bGx44Kk44Oz44K/44O85bqXIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAwMCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEwODc0NjMxNDU0NzI3NjYxNDU1XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm5NSGZ5SWgtbGRUYlBxYy0zOU8yZmJKdTdmQzZLVVJoanp5M1hDTHhfTndZYVVsUGl5RllYWlpsOUlZQjJ2enZnZXQ3VTh2VFFuV3NyOXV1eVp3NFR5ZmhsUHRfSnR5eGdrVFJVRG1Ccnh6MnFmRlJPcFVvcVZzR1JSYlBBTlZ6N2NNMlRxS3pWc2xCVDNNZ0lfOXV3aVcweTZWRXNGV1BENGloSVZWSm0wSTdZIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDUzMzMKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpiZlg5NllFMS1GOFJPTjJvYzc2QkhpQSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkdIR0orQ0Mg6YeO44CF5biC5biC44CB55+z5bed55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UThSR0hHSitDQyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjEsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpiZlg5NllFMS1GOFJPTjJvYzc2QkhpQSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAibG9kZ2luZyIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDExMTUKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Wed, 08 May 2024 09:04:10 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%BF%91%E8%97%A4%E7%94%BA%20%E6%9D%BE%E6%9C%AC%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:04:11 GMT
      Expires:
      - Wed, 08 May 2024 09:09:11 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '35357'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=516
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 09:04:11 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E5%9C%B0%E9%83%A1%20%E5%A4%A7%E5%A1%9A%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:04:12 GMT
      Expires:
      - Wed, 08 May 2024 09:09:12 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '8318'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=303
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 09:04:12 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%B0%E9%81%A5%E5%B8%82%20%E6%96%B0%E9%99%BD%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:04:13 GMT
      Expires:
      - Wed, 08 May 2024 09:09:13 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=590
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Wed, 08 May 2024 09:04:13 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E7%B5%90%E8%A1%A3%E6%9D%91%20%E5%AE%89%E8%97%A4%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:09:39 GMT
      Expires:
      - Wed, 08 May 2024 09:14:39 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41720'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=399
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 09:09:39 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8E%9F%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:09:40 GMT
      Expires:
      - Wed, 08 May 2024 09:14:40 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '4265'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=816
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjk3NS0wMDA4IOemj+WztuecjOWNl+ebuOmmrOW4guWOn+eUuuWMuuacrOeUuu+8k+S4geebru+8ku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNy42NDM1MzQyLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC45NTg1NzkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy42NDQ4ODU2Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuOTU5NzYwMDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuNjQyMTg2MDIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjk1NzA2MDQyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCteOCpuODiueZuumBlCIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNDk3NTYzNjA2NDE2OTU5ODM2OVwiXHUwMDNl44K/44Oe44Gh44KD44KTXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmtNOThZaWpmMjJHVG1DQjNwMkI0TEM0blZiZHc1LW5rTlpWaE9kVlktUGtId1l0VmtHNGcyaVRnWThNWDJZa2YydUNjUldfSE5SNk5DRWd6TnMwR28yVWhoU1hjZWVwR1FnRnhaNTBxNXJXZUFQSld2Nmhoa2R3NGlUVy1rQ2h3MFhuaWczVDJyR19QTlV0OXJvSENWRE5RZVlvNU04d21sejBWbFYxVFJkaTFnIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpiOE55QzktWElHQVJEa2hSN2ZVandEayIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkpYVjUrQ0Mg5Y2X55u46aas5biC44CB56aP5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UjkySlhWNStDQyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA1LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKYjhOeUM5LVhJR0FSRGtoUjdmVWp3RGsiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxOQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5NzUtMDA3MSDnpo/ls7bnnIzljZfnm7jppqzluILljp/nlLrljLrmt7Hph47ojZLmiLjmsqLvvJHvvJUiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzcuNjY3MDkwMSwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuOTE2MTg2NQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3LjY2ODI1OTcyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC45MTc1ODA2Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy42NjU1NjAwNzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuOTE0ODgwOTcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5paw55Sw5bed5rip5rOJ44Gv44KJ44G+44Gh44Om44OD44K1IiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjI2OCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA3MDA1NTUzMzk2NDUwMjM3MjMzXCJcdTAwM2XlsI/nrKDljp/lpKfku4tcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabU13M1J0QWpabTNlWlI4X3N3S3k1Z2puZDRmUzAtMEU2cWdadnhoclhwMC1QWHpDV2RlVnY3QWx5XzlfNk1JS3lGLXlMY3hqaGdqU1RZSXJsb2tOMkl2UUNHY3NNTkE5cEt4RGR1eV9lQy1nQ1lJX2F4NF84eFZLemNWQ0RySEQtV2hicTJIbWlGb0NNTUl4X3A3c3k0QkRFel9SSm83YTdieE1fckprTGFXQW5VIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpkY0tCR0tXUUlHQVJjWVc2X1N6NVczSSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIk1XODgrUkYg5Y2X55u46aas5biC44CB56aP5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UjkyTVc4OCtSRiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpkY0tCR0tXUUlHQVJjWVc2X1N6NVczSSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMzQ4CiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0=
  recorded_at: Wed, 08 May 2024 09:09:40 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8C%97%E4%BA%AE%E7%94%BA%20%E9%88%B4%E6%9C%A8%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:17:36 GMT
      Expires:
      - Wed, 08 May 2024 09:22:36 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '40748'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=420
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 09:17:36 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%9D%92%E6%9C%A8%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:17:37 GMT
      Expires:
      - Wed, 08 May 2024 09:22:37 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42363'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=539
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 09:17:37 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%95%B7%E8%B0%B7%E5%B7%9D%E9%83%A1%20%E6%96%B0%E6%9C%AA%E6%9D%A5%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:17:39 GMT
      Expires:
      - Wed, 08 May 2024 09:22:39 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2182'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=710
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjg2MS0yMjAyIOeGiuacrOecjOS4iuebiuWfjumDoeebiuWfjueUuueUsOWOn++8ku+8kO+8l++8keKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzMi44MjM3NDIzLAogICAgICAgICAgICAgICAibG5nIiA6IDEzMC44NDY5MjUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMi44MjUwMjUzMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzAuODQ4MTE2OTI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzIuODIyMzI1NjcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMwLjg0NTQxNzI3MDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCqOODn+ODiuODvOOCuSDmuKnms4kg5LiD56aP44Gu5rmvKCDjgrXjgqbjg4og5bKp55uk5rW0IOWutuaXj+a5ryApIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNjY3LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTYzMjY0OTYzMjY4NDMzMjAxMTVcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabTl1M0J6SzBsRjAxbVZRX19oVmVvcFFUb1NEc0xQT0d2X183dnFqeGZqWHROOFFiM05OTnhBNmFCYTEtb25rZ3pmcmlIR0M0cUJTMGFIY0htci1tdlJNNGRqVDFxOFk3Ny1qUndHdWRjNzFxNU13blBQZFNzY1ZYZlkzMHlCVXpDYmJHbjFBQUVGbTdlR0xna1pHUU1iUGVlNmw2NFpyanhvcmFJYXkxcEhOWnlYIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDEwMDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUotVXhnMnFmdlFEVVJVRHc5cllJTzVVYyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlJSRlcrRlEg55uK5Z+O55S644CB54aK5pys55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTRHUlJGVytGUSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUotVXhnMnFmdlFEVVJVRHc5cllJTzVVYyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxNjAKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Wed, 08 May 2024 09:17:39 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E6%82%A0%E5%A4%AA%E7%94%BA%20%E8%A5%BF%E5%B9%B3%E9%87%8E%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:17:40 GMT
      Expires:
      - Wed, 08 May 2024 09:22:40 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42049'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=445
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 09:17:40 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%A5%BF%E8%8F%85%E5%8E%9F%E9%83%A1%20%E5%A4%A7%E8%BC%94%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:17:42 GMT
      Expires:
      - Wed, 08 May 2024 09:22:42 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41455'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=427
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 09:17:42 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%9D%92%E6%9C%A8%E7%94%BA%20%E4%B8%AD%E9%87%8E%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:17:43 GMT
      Expires:
      - Wed, 08 May 2024 09:22:43 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '6284'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=335
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 09:17:42 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%B0%E7%9B%B4%E6%A8%B9%E5%B8%82%20%E8%BC%9D%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:39:55 GMT
      Expires:
      - Wed, 08 May 2024 09:44:55 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42511'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=499
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 09:39:56 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E9%AB%98%E6%A9%8B%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:39:56 GMT
      Expires:
      - Wed, 08 May 2024 09:44:56 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42028'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=382
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 09:39:56 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B0%8F%E5%B7%9D%E5%8C%BA%20%E9%81%A5%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:39:58 GMT
      Expires:
      - Wed, 08 May 2024 09:44:58 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41639'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=370
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 09:39:58 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%BE%8E%E6%A1%9C%E9%83%A1%20%E8%A5%BF%E5%A4%A7%E5%92%8C%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:39:59 GMT
      Expires:
      - Wed, 08 May 2024 09:44:59 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '5590'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=329
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiQ0xPU0VEX1RFTVBPUkFSSUxZIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI2MzktMDIxOCDlpYjoia/nnIzljJfokZvln47pg6HkuIrniafnlLrjgZXjgZXjgobjgorlj7DvvJPkuIHnm67vvJHiiJLvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNTY2MzYwMSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzE3NTkxMwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjU2NzgwMTcyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS43MTg5OTExMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC41NjUxMDIwNzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzE2MjkxNDcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi6Jm544Gu5rmvIOilv+Wkp+WSjOW6lyIsCiAgICAgICAgICJwZXJtYW5lbnRseV9jbG9zZWQiIDogdHJ1ZSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEzNTUwNzYwMzI3MDY1NjkwNTYyXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmtiTms0YzA1RE9GbFd5ZHUzMUZCYU8wNk5rR3IxS3QwOU05Q1RnOTRTSXNCaFNWZWNmX19lLWRZOXBRSU4wMGt2OU5xSm5RMFlRalAyRnZoZWh1cVNHUEJOTmxMcl9PQWxNMkd2VmhralpyTERsRVN6eWtLN3M2dC1GZ3E5OTV0ZzFKLUhPRGNwMG82UlN2Y0VtWkFRTXNwOWg5Zkdhckhaby1kdUFPUTJpRWVtaCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKNlNNV1ExUXVBV0FSSjB6aWRtNk1XTWciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJIUDg4K0pYIOS4iueJp+eUuuOAgeWliOiJr+ecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2UUhQODgrSlgiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKNlNNV1ExUXVBV0FSSjB6aWRtNk1XTWciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogOTUzCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiQ0xPU0VEX1BFUk1BTkVOVExZIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI2MzYtMDA1NSDlpYjoia/nnIzljJfokZvln47pg6HmsrPlkIjnlLrnqbTpl4fvvJHvvJPvvJXiiJLvvJIiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNTg2MTk3NiwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzM3NTA1MgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjU4NzUyNTEyOTg5MjczLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS43Mzg4MDYwNzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC41ODQ4MjU0NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzM2MTA2NDIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi6KW/56m06ZeH5YWx5ZCM5rW05aC0IiwKICAgICAgICAgInBlcm1hbmVudGx5X2Nsb3NlZCIgOiB0cnVlLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp3eGdYV1ZVdkFXQVJrZjFKbHBRSGNOZyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkhQUFArRlgg5rKz5ZCI55S644CB5aWI6Imv55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZRSFBQUCtGWCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAxLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKd3hnWFdWVXZBV0FSa2YxSmxwUUhjTmciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMgogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIkNMT1NFRF9QRVJNQU5FTlRMWSIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNjM2LTAwMDMg5aWI6Imv55yM5YyX6JGb5Z+O6YOh546L5a+655S65LmF5bqm77yT5LiB55uu77yR77yQ4oiS77yZIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0LjU5ODQ5NTEsCiAgICAgICAgICAgICAgICJsbmciIDogMTM1LjcwMDI4MDEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC41OTk3OTYzMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzAxNjI5OTc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNTk3MDk2NjcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM1LjY5ODkzMDMyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOBleOBj+OCiea5ryIsCiAgICAgICAgICJwZXJtYW5lbnRseV9jbG9zZWQiIDogdHJ1ZSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTIwMCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE3MDcwMzQ5NTY2MTU4NjQ4ODUzXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmt4XzR1Zjh1T2VCUmxNOWNHdk90NHdxV0J3Q3c3UkRNdUl5V0RsbGg2UjBrd3U3UkRtaWFBQkNERzZnQ01oeF9nWWx6UzVKOG5VSlM0UGwyTk5MM25zanNCVG16alBhOXBBUlVDWE9wR0cxS0FmbXNmRjAtR1RZY0RFcjBHLVZXbVZHVjFuUjgwOURKUWJFVE1kMExWUDY2V3NzVGR2YzBkMXAyN3ByUHdDVmJfNCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxNjAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKUFZMOEpvb2xBV0FSanB5UTRJM185TG8iLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJIUFgyKzk0IOeOi+WvuueUuuOAgeWliOiJr+ecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2UUhQWDIrOTQiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMi45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKUFZMOEpvb2xBV0FSanB5UTRJM185TG8iLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjIKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Wed, 08 May 2024 09:39:59 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%A5%BF%E6%B2%B3%E9%87%8E%E6%9D%91%20%E8%A5%BF%E8%97%A4%E5%8E%9F%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:40:00 GMT
      Expires:
      - Wed, 08 May 2024 09:45:00 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '31316'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=343
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 09:40:00 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8D%97%E6%A8%AA%E5%B1%B1%E7%94%BA%20%E4%B8%AD%E5%86%85%E7%94%B0%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 08 May 2024 09:40:01 GMT
      Expires:
      - Wed, 08 May 2024 09:45:01 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2125'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=329
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjU5NC0wMDA1IOWkp+mYquW6nOWSjOazieW4guW5uO+8kuS4geebru+8mOKIku+8ku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC41MDE1OTY0LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNS40MzkwNAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjUwMjkxODIyOTg5MjcxLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS40NDA0MTk5Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC41MDAyMTg1NzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNDM3NzIwMjcwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5ZKM5rOJ5biC56uL5bCP5qCX44Gu5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzI2NCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEwMzQ2NzI1MjMxMjU2NTU5MzQyXCJcdTAwM2Xnhorph47lj6TpgZNcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabnhIVi1TOEpUM2JKc0RBNTBlMzZrTG9MQWNpMGdQVWlSLTBaWlB0dTlBajFlVTlfT24tbDlYU3lubl9KVkI5RFg4bkd3U0pJanE2aTdaMHVXM2JYeXFSTVB1SnFNc0dMUUJJcG1DSm5BcUhfbE5YOUlMZjFlZGVMVFNheWdqQU5DUW9IblFsblVsT3Z2N3MzX0lEa2FONGtwTVpXZ2tkUDlpRk1OcDFxbS0tallpIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDI0NDgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp4NW1pWERyRkFHQVJnRU5yandGVjI1USIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkdDMlErSkgg5ZKM5rOJ5biC44CB5aSn6Ziq5bqcIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZRR0MyUStKSCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUp4NW1pWERyRkFHQVJnRU5yandGVjI1USIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxMTUKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Wed, 08 May 2024 09:40:01 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8D%97%E4%BA%AE%E5%B8%82%20%E6%96%B0%E4%BB%8A%E4%BA%95%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 07:21:11 GMT
      Expires:
      - Mon, 20 May 2024 07:26:11 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '10590'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=334
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 07:21:11 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%B6%BE%E4%B9%83%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 07:21:11 GMT
      Expires:
      - Mon, 20 May 2024 07:26:11 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '4224'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=376
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE3My0wMDEyIOadseS6rOmDveadv+api+WMuuWkp+WSjOeUuu+8lO+8luKIku+8lyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS43NTY1OTcsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcwMzk2MwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1Ljc1Nzg5MjA3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MDUyMzk2Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS43NTUxOTI0MjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzAyNTQwMDIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5oSb5p+T5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogOTYwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDQwMjQzNjk0ODk4OTg1MzMzMjVcIlx1MDAzZeOBquOBquOBl+OBruOBlOOCk+OBueOBhFx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptYzI0N2ZMNXZtVVVJcEZHOTlHdmt5aGdaSjF5TWwzazFkWlBKalN6ZUVadmkwd2xHeTIyenBYZkFZN3VnYXM1SkhlYjFnY2NNekdNX0VQZkZYam5kdDNYLW43UkEzcHBSRzdlOHRQa3VvYWFlSUw1di1uVy1ORVJtX3FnN2gtSzd3Q3hKLU5vRng3NkJ6Yl93cVNjdDR2M3pSUE9naG5ZdklpNlR4OFpvMnlzOHgiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMTI4MAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSmd5THFpY2FTR0dBUkYwaVlIcGdrWEZBIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUVA0MytKSCDmnb/mqYvljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hRUDQzK0pIIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSmd5THFpY2FTR0dBUkYwaVlIcGdrWEZBIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE1NgogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIxMDctMDA1MiDmnbHkuqzpg73muK/ljLrotaTlnYLvvJPkuIHnm67vvJHvvJniiJLvvJMg77yR77ymIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjY3NTgyNDEsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjczNjI4OTMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NzcxNDU1Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzM3ODEwMTI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjc0NDQ1OTIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjczNTExMDQ3MDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCteOCpuODiuODquOCvuODvOODiCDjgqrjg6rjgqjjg7Pjgr/jg6siLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxNTM2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTMyNTM5ODU1ODM2MTEyMTg0MTRcIlx1MDAzZUhBTkFLSU5cdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabGRPNVVEcWdVYVI3M1hWTURDenJVMDJHRENXRklQdmE2WnFhTFVuZ0dzRW9kUXUxRG16YjZoTmg2TDl0Rm5Gclc1dl81V0kwVERXMEpSNUdnVTg0ZU1KSkd2YmtWV2VpcXRnZWc3SEZ6LUdRMndHZ2xUb3NKdmVlbFUzdjR0NlYxaWJyb01lZmY0eXZ2bXFtSldQMlVfMlRkNGZaU2pIMzhTVnBuQVRaYWswVGlMIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDIwNDgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUplNmE3SkgtTUdHQVJzcmVRcVBsX29VdyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIk1QR1ArOEcg5riv5Yy644CB5p2x5Lqs6YO9IiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYTVBHUCs4RyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUplNmE3SkgtTUdHQVJzcmVRcVBsX29VdyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDM5OAogICAgICB9CiAgIF0sCiAgICJzdGF0dXMiIDogIk9LIgp9
  recorded_at: Mon, 20 May 2024 07:21:11 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=Tokyo%20Tower&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 07:21:12 GMT
      Expires:
      - Mon, 20 May 2024 07:26:12 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2229'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=430
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjEwNS0wMDExIOadseS6rOmDvea4r+WMuuiKneWFrOWcku+8lOS4geebru+8kuKIku+8mCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NTg1ODA1LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS43NDU0MzI5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjYwMzE2Mzc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljc0Njk3MTUyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjY1NzYxNjcyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43NDQyNzE4NzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmnbHkuqzjgr/jg6/jg7wiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDAwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDcxMjE2MDgwNzEwMTM4MjI3MDVcIlx1MDAzZWNoaWUgTWlub3pcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zaa0l0Snptem51Y0FNV1EyQVMtWGFGVGNYSm9zcjRBNm56WGY4VENBbTVhZ21tUkpnYkhjdWJ6YnYwSjc5VG5fWGxaUUdJUXNhNDVBS09NeUhUbWZDU1NBa2ZuaWpxQ0F2d0xZWmQyOHI3Tkl2c3pweHRwdjJoUmJaX2d0UUNvUXJLN3lISUFsVzl1UTc0WFg1VXdLSGdrc2k2XzhONHJ4UjVsd2FlcE1rY0ZDVFozIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDE4NjgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpDZXdKa0wyTEdHQVIzUW1rMHZDVEdrZyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIk1QNVcrQzUg5riv5Yy644CB5p2x5Lqs6YO9IiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYTVA1VytDNSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjUsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpDZXdKa0wyTEdHQVIzUW1rMHZDVEdrZyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic2hvcHBpbmdfbWFsbCIsCiAgICAgICAgICAgICJ0b3VyaXN0X2F0dHJhY3Rpb24iLAogICAgICAgICAgICAiYXJ0X2dhbGxlcnkiLAogICAgICAgICAgICAibGFuZG1hcmsiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA3MzE0NgogICAgICB9CiAgIF0sCiAgICJzdGF0dXMiIDogIk9LIgp9
  recorded_at: Mon, 20 May 2024 07:21:12 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%AE%AE%E5%B4%8E%E5%B8%82%20%E5%A5%8F%E5%A4%AA%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 08:24:11 GMT
      Expires:
      - Mon, 20 May 2024 08:29:11 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '37731'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=425
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 08:24:11 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%B0%E9%87%91%E5%AD%90%E9%83%A1%20%E5%A4%A7%E8%88%9E%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 08:24:11 GMT
      Expires:
      - Mon, 20 May 2024 08:29:11 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '14832'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=309
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 08:24:11 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%84%AA%E9%83%A1%20%E5%A4%A7%E5%B2%A1%E6%9C%AC%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 08:24:13 GMT
      Expires:
      - Mon, 20 May 2024 08:29:13 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41638'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=596
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 08:24:13 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%9D%B1%E6%9D%91%E7%94%B0%E5%8C%BA%20%E4%BD%90%E8%97%A4%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 08:24:13 GMT
      Expires:
      - Mon, 20 May 2024 08:29:13 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=208
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Mon, 20 May 2024 08:24:13 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%AB%98%E6%A9%8B%E7%94%BA%20%E5%8C%97%E5%B1%B1%E5%8F%A3%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 08:25:21 GMT
      Expires:
      - Mon, 20 May 2024 08:30:21 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2159'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=346
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc1NS0wMDM4IOWxseWPo+ecjOWuh+mDqOW4gua1t+WNl+eUuu+8ke+8lu+8l++8lSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzMy45NTg0MjgyLAogICAgICAgICAgICAgICAibG5nIiA6IDEzMS4yNjE1NjQxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuOTU5OTQ2OTc5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMxLjI2Mjg2Nzc3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjk1NzI0NzMyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMS4yNjAxNjgxMjAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgqvjg4Pjgr/jga7mua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDAwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTUyMzk3MzgwODcyMDY3NTQ4MzRcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zaa0FlVWUyMTRBT1VHVGVFVVZ6anMtLUZJZ3BMeTNjQXA1QzNLbnlpN0dRQjlQQlBzOUhBYU9HLWZwbFM2czFvdUtvdEl2NDdGa1Y5UWpDSWhoNzRWdDZjZ1BSaHVOTTRWX1FuQ0c3X190WTNDSXZzYmExWXdQdEIzUkZvSmNzUC10OFV5N2hKYnBaUVB1blZqcWp2bFA1bUtMWnVLcHhKdzIySE42M2ZLSUFrSnMxIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpUNUJ0Y0wtQVF6VVI2d3V0T1RpS0FtSSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlg3NTYrOUog5a6H6YOo5biC44CB5bGx5Y+j55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTVIWDc1Nis5SiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpUNUJ0Y0wtQVF6VVI2d3V0T1RpS0FtSSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImxvZGdpbmciLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxMDkxCiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0=
  recorded_at: Mon, 20 May 2024 08:25:21 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E5%A1%9A%E5%B8%82%20%E5%A4%AA%E4%B8%80%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 08:25:22 GMT
      Expires:
      - Mon, 20 May 2024 08:30:22 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '10417'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=488
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 08:25:22 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%AA%E4%B8%80%E6%9D%91%20%E4%BA%AE%E5%A4%AA%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 08:25:23 GMT
      Expires:
      - Mon, 20 May 2024 08:30:23 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '33766'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=316
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 08:25:23 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A2%97%E7%94%B0%E5%B8%82%20%E6%82%A0%E7%9C%9F%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 08:25:24 GMT
      Expires:
      - Mon, 20 May 2024 08:30:24 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '3657'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=282
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjEzMC0wMDEzIOadseS6rOmDveWiqOeUsOWMuumMpuezuO+8kuS4geebru+8luKIku+8kyDnrKwx6I2S5pyo44OT44OrIDFGIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjY5ODE5MjgsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjgxMTk3NzUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42OTk1MTIxNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODEzMjg1Nzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjk2ODEyNTIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjgxMDU4NjEyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCteOCpuODiumMpuezuOeUuiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQwMzIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMDc5NDQxMzgxMDMwMDUwMjM0N1wiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptYzRiRjduUWgwMU5iZmk4YTVuNlo0b2F3NDV5blFKR1JsX1FfSUVzRDdCVkUwUXh5SXp4WkxUUmU4djRXUEIxaVFFRkpXb1dua2plZmpJN3prZTVYUThoY1BPeWtETDdRSVZRTV92VktmWDBjRWtNbHExS3ltSHRJNVZiMEM3bF9YSXZXWXJsbnNSNEF0SlZma1dvcnpxM29RWUR4dVdvQ09IbGs4UDVMLWt1UjgiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAyNAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSng4ZXJ1eW1KR0dBUkptdzBGeTVVRFc4IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiTVJYNis3USDloqjnlLDljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hNUlg2KzdRIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuMiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSng4ZXJ1eW1KR0dBUkptdzBGeTVVRFc4IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMzQwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiQ0xPU0VEX1BFUk1BTkVOVExZIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIwMTktMDcwNSDnp4vnlLDnnIzmqKrmiYvluILlopfnlLDnlLrni5nljYrlhoXlj6TlrrbmsqLlj6PvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzkuMTIzNzU5OSwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNjQ2OTQzMgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM5LjEyNTIwMzIyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC42NDgyNDg1Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzOS4xMjI1MDM1NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNjQ1NTQ4OTIwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5pel5biw44KK5rip5rOJ44CM44KG772e44KJ44GP44CNIiwKICAgICAgICAgInBlcm1hbmVudGx5X2Nsb3NlZCIgOiB0cnVlLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpEX04yY3ZnaGoxOFJwRnprSm5sQlZFayIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjRKRlcrR1Eg5qiq5omL5biC44CB56eL55Sw55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkYyNEpGVytHUSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAwLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKRF9OMmN2Z2hqMThScEZ6a0pubEJWRWsiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMAogICAgICB9CiAgIF0sCiAgICJzdGF0dXMiIDogIk9LIgp9
  recorded_at: Mon, 20 May 2024 08:25:24 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%A3%AE%E7%94%B0%E9%83%A1%20%E8%91%B5%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 08:26:53 GMT
      Expires:
      - Mon, 20 May 2024 08:31:53 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '35947'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=357
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 08:26:53 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8C%97%E5%B2%A1%E7%94%B0%E6%9D%91%20%E4%BA%AE%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 08:26:53 GMT
      Expires:
      - Mon, 20 May 2024 08:31:53 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '16889'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=327
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 08:26:54 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%AB%92%E5%B8%82%20%E8%A5%BF%E5%84%AA%E8%8A%B1%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 08:26:54 GMT
      Expires:
      - Mon, 20 May 2024 08:31:54 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '25026'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=328
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 08:26:54 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%A5%BF%E5%B7%A5%E8%97%A4%E5%8C%BA%20%E3%81%95%E3%81%8F%E3%82%89%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 08:26:55 GMT
      Expires:
      - Mon, 20 May 2024 08:31:55 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41876'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=405
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 08:26:55 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%B5%90%E8%8F%9C%E5%8C%BA%20%E8%A5%BF%E5%AE%AE%E5%B4%8E%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 10:33:39 GMT
      Expires:
      - Mon, 20 May 2024 10:38:39 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '25300'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=394
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 10:33:39 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%A5%BF%E9%9F%BF%E7%94%BA%20%E6%9F%B4%E7%94%B0%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 10:33:40 GMT
      Expires:
      - Mon, 20 May 2024 10:38:40 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '27129'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=375
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 10:33:40 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%A5%BF%E7%A6%8F%E7%94%B0%E6%9D%91%20%E5%84%AA%E8%8F%9C%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 10:33:41 GMT
      Expires:
      - Mon, 20 May 2024 10:38:41 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '20821'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=356
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 May 2024 10:33:41 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%99%B8%E5%8C%BA%20%E4%B8%83%E6%B5%B7%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 20 May 2024 10:33:42 GMT
      Expires:
      - Mon, 20 May 2024 10:38:42 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42724'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=362
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJuZXh0X3BhZ2VfdG9rZW4iIDogIkFVR0dmWm1JcFdBbDJRb0xYOWJuQnZHYjlXV2tQNGhiaW5NajhjOTlla2o2SXdQa0FHaENpTXNRZ2djLW9uRGlrbkw2ZE9aU19sS3JXeDBEOFVpTUhoWlplX2pYNjlFNmtFbnhtR05iV3BIX0k4TEJ3Q3AtNmV5R0VLX0FOb3FXdGdZakF5ZjI2U1NVODZHWGlvYS1fdEtremU0Nk10cTlKcm9OREx4RE9TV0p0ZlFLM1VOejgxSTJsNnEwVG80U3ZnSVJ6MklZSVp0ZkdrMHhmNGh6TUdlYkppNS1Zdl9RWHhWV1Y4LUJSMU5RSmpfLUJSWHh5aFFKaHRaX1ZJOUk3dUMydzU2dWlRdUpETkV2NS1VdGRWclJmVExySHJoUmhJaXBqQXlyck05ZXpmejZEOXg4RmUya08xUjY2OFpKZ1h4Mmdsb05KZ0dPZ1gxT2lOeERBdkowZUFyWUx4TklRWmR6bFgzTThxNjB6QmxuYktJQzFrNUZEbEZ4ZFkzU3dRVUFNbk1IZWE5RzZpMjNZYjFvQmxGSUxRajZPRjljIiwKICAgInJlc3VsdHMiIDogCiAgIFsKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMTY2LTAwMDIg5p2x5Lqs6YO95p2J5Lim5Yy66auY5YaG5a+65YyX77yT5LiB55uu77yS77yZ4oiS77ySIOS4puS5g+a5ryIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MDgzOTEsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY0NjE0MjIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MDk3NDI0Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjQ3NDc0Mzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzA3MDQyODIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY0NDc3NDcyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOBquOBv+OBruOChiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNzQ0NjM4MDk3NzE5ODg0MjI1NlwiXHUwMDNldGVydSBrb2JhXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm5Kb0dIZ1ZTSTBkd2NXa2dWRXgyTVdDeTFDQURKV3FaMTBlMzhnWkpoUFMwWldfQ0ZUcUVZTFpmMTZjSVhYVlB0NHlhbi01Z1ZNeUozdmMtNk1aUlBMdHh1NEhCVnQybllSTDZyUk5yWGFfd0FpajZaM3F4SWF1ZWkyRkV5OThlM2M2b2J3T1NUTjk0Ry1wU1RUY20xV2dlYktlaUk5X1g2TURnLWw4RWRqWUtXZiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKTlM4SzIzN3lHR0FSZlpBdTF2NWp2NDgiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJQSjVXKzlGIOadieS4puWMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WFBKNVcrOUYiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKTlM4SzIzN3lHR0FSZlpBdTF2NWp2NDgiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgImxhdW5kcnkiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxNTkKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMTY2LTAwMDMg5p2x5Lqs6YO95p2J5Lim5Yy66auY5YaG5a+65Y2X77yU5LiB55uu77yT77yZ4oiS77yR77yXIOODk+ODrOODg+OCuOOCu+ODs+OCvyAyRiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MDQ5OTg0LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS42NTQ0Njc3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzA2Mjg1OTc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY1NTkyNDkyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjcwMzU4NjMyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS42NTMyMjUyNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgrXjgqbjg4rjgrXjg7Pjg4fjg4Pjgq0iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyMTg0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDIwNDkwNTgxMjI2OTQ0NTM1MzNcIlx1MDAzZeWwj+WAieWuh+aAnVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpuWTlPWVlkYi03Q1hwSVlCeHNxZVF3TlJhUEhrOGFyMndid2Z0ZEtEMk1ETzVCRGgwOGFtc1JURmkyc1J3Z3Vsc2VjeGxVS09Senp0VWhUWTBFOXNzMjVpVzFHZ29xNHM5RmhZRjEtU1NIVk9HRFdCQTNMYUZDakppVXpuUnFDT2dGS05vNVVtS1E1bktPcUNxVDRBN0I1QjJJT09wWDRKQU82dzNsb2Zua0lWVHYiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDYwOAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkJ5U2pvNGp5R0dBUk1sMTVZd0FsZVU0IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUE0zMytYUSDmnYnkuKbljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hQTTMzK1hRIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuOCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkJ5U2pvNGp5R0dBUk1sMTVZd0FsZVU0IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTE2CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjMzMC0wMDYyIOWfvOeOieecjOOBleOBhOOBn+OBvuW4gua1puWSjOWMuuS7sueUuu+8kuS4geebru+8leKIku+8kSDjg63jgqTjg6Tjg6vjg5HjgqTjg7Pjgrrjg5vjg4bjg6vmtablkowgQjFGIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1Ljg2MDcyODAwMDAwMDAxLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS42NTI2MTQ2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuODYyMTMxNDI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY1NDIxNjQ3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1Ljg1OTQzMTc3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS42NTE1MTY4MjAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJVVVNJTiBieSBORVhUIFNBVU5BIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDAzMiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEzMTk4MjQ3NDY1MTU1NjQ5MDQxXCJcdTAwM2Vrb3VubyBuYW9raVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpsSmdEcmQwNlJxbHR2NURRODE0X003SWUtMFNROFh5eC1jWV95M0VaVVhJQ2JSZldfRU4yVHJoa0prZHYwMTl6bGJ6QlM0UTZjaHRTMlptWHlZZEJsMUtpTjNUdnRxbUhIcHE3emdTa1p1YTltSmd1Q0lDSlliZVYxdER5SUZ0bGtDVk4wa3dKd3F2dmNFcTc5bDlHeDlGR3lKY2h1Y3VHMmZjY3ZoUWg5SVp0Z2YiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAyNAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSi13YjEyU3pCR0dBUi1EZW4tZ2syZnRrIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiVk02Mys3MiDjgZXjgYTjgZ/jgb7luILjgIHln7znjonnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hWTTYzKzcyIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuOSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSi13YjEyU3pCR0dBUi1EZW4tZ2syZnRrIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjM5CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE1MC0wMDM0IOadseS6rOmDvea4i+iwt+WMuuS7o+WumOWxseeUuu+8ke+8k+KIku+8liIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NTAxNDA5LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MDQ1MzE2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjUxNDk1Mzc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcwNTg3Mzc3OTg5MjgKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjY0ODc5NTcyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MDMxNzQxMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJQcnVzIFNhdW5hIOS7o+WumOWxsSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDE0MDYsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNzgwMTk5MzI2MDA2NTUxOTkyOFwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlprMWlKNXFvOXg4WjBWSXVXWlpoTG1pTEpQOUxlVFlsdGdFaE12MGwtYUxJMzh6bTVxcktlUzFMVEJlaEtqaGozR2hTcWFxU3BxSlZDaTVIRTlQdzNDa2xSX2hONGFBY1gtVHNxX3ZfbjRlVjZoRHBtYnhYSGdzLWhHSDd4c1hJQzRFWUhyejNpZUo3UE11NmhNeXJmZTR1dFBjdGY1SldXVTQ0OE02RG1RdldfdyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyNTAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKeFhUS09BQ0xHR0FSYmVTb29Pck96dkUiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJNUDIzKzNSIOa4i+iwt+WMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WE1QMjMrM1IiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKeFhUS09BQ0xHR0FSYmVTb29Pck96dkUiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA0NwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIxNTAtMDAyMiDmnbHkuqzpg73muIvosLfljLrmgbXmr5Tlr7/ljZfvvJLkuIHnm67vvJfiiJLvvJgg44Or44K444Kn44Oz44OG5oG15q+U5a+/IDHpmo4iLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjQzODg3MiwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzA4MzQyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjQ1MjI5NTc5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcwOTY4NDQ3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjY0MjUyOTkyMDEwNzI5LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MDY5ODQ4MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgbLjgajjgorjgrXjgqbjg4rjg5fjg6njgrnjgJDmgbXmr5Tlr7/jgJEvUHJpdmF0ZSBTYXVuYSBFYmlzdSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDEwNDYsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMzY1OTQ0Mjk3NjkyMDAzNTU1OFwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptR1J0cl8wZzd4dzdYb0c5NldwbnhTZHFUSnY2aUlYUEl2eS1XVUxUV2N1RVJITU5qa2hmZ3MyOWw0TThhNW5rR1NLUlYtT0RFZHlXMmg0cWhCNzh3OVFiZ1gwUFZ6VTByMzF2ejhLREpLbnFwOFRna0tZeVZzazduWUFxRTVzQ0x1MWtBZEtoTC1YYWdxTzVVODVKcjk3dEpWLUQ2U0VweldRTUg2VVgweUlKMEYiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMTU2NgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSnQ4eU5ZV21MR0dBUlNrdUFKcHJuTk8wIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSlBWNStIOCDmuIvosLfljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hKUFY1K0g4IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuNywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSnQ4eU5ZV21MR0dBUlNrdUFKcHJuTk8wIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNzEKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMTUwLTAwMjEg5p2x5Lqs6YO95riL6LC35Yy65oG15q+U5a+/6KW/77yS5LiB55uu77yY4oiS77yR77yRIOOCsOODqeODs+ODmeODq+aBteavlOWvv+KFoyAx6ZqOIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjY0OTU1NjIsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcwNzYzMzIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NTA5MjA1Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzA5MDIwNTI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjQ4MjIwODcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcwNjMyMDg3MDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuS8muWToeWItlByaXZhdGXjgrXjgqbjg4rnpoUiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDMyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTQ2Nzk1NzgxNDc1MzgyMjUzNDJcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zaa1lxUS1iZ3JPSlJTejdfQ21zcTNfalVwOTJGYlpBcTBlUDJiNldDeC1pNXVhLXlGSm00Y3d0YWlQQTlLRERYUWV1SHVLRXJRallJa2FKeHc2OVZYTHB0cmlUdlNtVUZrRlFsMjRyZjR2eWZzYVN6T3Rkb2NQMS0wYkNOYk9kdTUtUkdtQUt3UjhfcVBTVW1jU0ZfM1RnMVdhUUlTWlI4cWNuZGhVWGJTdVV1Qnd1IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpNWEtrLW9XTEdHQVJRNmpQbWl2M0tuQSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkpQWDUrUjMg5riL6LC35Yy644CB5p2x5Lqs6YO9IiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYSlBYNStSMyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjMsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpNWEtrLW9XTEdHQVJRNmpQbWl2M0tuQSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDIwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE1MC0wMDMxIOadseS6rOmDvea4i+iwt+WMuuahnOS4mOeUuu+8ke+8mOKIku+8mSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NTYwNzkxLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MDA4NjI3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjU3NDI3ODc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcwMjIxMTgyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjY1NDcyODIyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS42OTk1MTIxNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmuIvosLdTQVVOQVMiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTMyNTM5ODU1ODM2MTEyMTg0MTRcIlx1MDAzZeiKseeUsOismeS4gFx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpuWTlxQXpBNDh2aGVlV09IV3FITl9xSk5odmdzTHZFVjdZcExPd2dWRDA5QWJteVNGdVY3SGZWcjBIdkZadXhVNXNYRVNSTDBvU0hjdFdRN2NrYkQtTkF3eVk4QUpvZWh5RjQtRUJNMW9UZ1RZR0k4UEZfdnRVNkdGRmN3ZXZucVFtYkJfWS05ZjU4SjJKVFVDSUM4eEVKbzdNLUdLZ04wRmdweGZXMkxGTzhmZzEiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSnB6amZNc3lMR0dBUllPMVgxcWJzQW5VIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiTVA0MitDOCDmuIvosLfljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hNUDQyK0M4IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSnB6amZNc3lMR0dBUllPMVgxcWJzQW5VIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNDU3CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE1My0wMDUxIOadseS6rOmDveebrum7kuWMuuS4iuebrum7ku+8keS4geebru+8luKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NDU2MzMsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcwMDMxODQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NDY5NzM2Mjk4OTI3MSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzAxNzE1OTI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjQ0MjczOTcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY5OTAxNjI3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWFieaYjuaziSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDM4NDAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNTA2OTc1NDA5ODgyNTQ5MzE4OVwiXHUwMDNl5YWJ5piO5rOJXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm00c1Q1Qm9xYTRLTVVMS29MRnl5T2FvUWRmWktuWVEyaU01Y0YtWV9YSWdMTEZfMy16d29zTFA4Vnp6elhWVGR4Tk8yNjJNRmlHUWRvVmNmRXd0bWE4bWdmSFNVWXR3aThwYkEzckVkMlp3bXVZY013MkduNW5wN3AtYlFrX3FwRURwNVBDSi1nWVZJM3lSaDl5aXlEXzc4ZWJyWlMyYjhocUFrZnZYbUE1TWxXUiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA1NzYwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKTndnMHRFaUxHR0FSR0pIcHRUNXUzTVUiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJKUFcyKzc0IOebrum7kuWMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WEpQVzIrNzQiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy43LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKTndnMHRFaUxHR0FSR0pIcHRUNXUzTVUiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNjM4CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjIyMi0wMDMzIOelnuWliOW3neecjOaoqua1nOW4gua4r+WMl+WMuuaWsOaoqua1nO+8kuS4geebru+8leKIku+8ku+8lCDmlrDmqKrmtZzjg5fjg6rjg7PjgrnkvJrppKgg77yS6ZqO77yT6ZqOIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjUwOTA0OTEsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjYxNTM0NzEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS41MTAzMTE4Mjk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjE2Nzk2Nzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNTA3NjEyMTcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjYxNDA5NzEyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIlNBVU5BVkkiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxNDc3LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDkyMjQ2NDMzMzY4MDg2MjMzOTRcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zabk5FZlBxQkhZNXRqQmNiVnN5aEZUWDI5SHRMLTZFSzdqTnh5VWFDVVFvU0NtRWl0V0ZuZHViNEQ2cGxCcHcyNS1GNjNYN09qeFZFODJrQXhlZGJsRlZKcUN5c0xMZWlBZk9lRUVXTkcwMUhNZ0lzUHcxYzVlbXlqQzU1TThOOTJaOGVZaDFTWVE4S2h6WFNnY0lfSWp6TVBBcW9UUHJYdDc5bGpvNU9vZ0ktR2JoIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDExMDgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp0NV9BUWVWZEdHQVI1Q1JiT2NfX21idyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkdKNTgrSjQg5qiq5rWc5biC44CB56We5aWI5bed55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYR0o1OCtKNCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAyLjUsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUp0NV9BUWVWZEdHQVI1Q1JiT2NfX21idyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDEzCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjExMS0wMDUzIOadseS6rOmDveWPsOadseWMuua1heiNieapi++8keS4geebru+8ku+8kOKIku+8lCDjg6Djg7zjg7Pjg5Pjg6sgMkYiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjk3ODE4NywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzg1MjU1MgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjY5OTE3NzMyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43ODY2MDYxMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42OTY0Nzc2NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzgzOTA2NDcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL3Jlc3RhdXJhbnQtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiI0ZGOUU2NyIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvcmVzdGF1cmFudF9waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5bGF6YWS5bGLIOS4g+a1tyIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDE3MDcsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMTYzNTA1MjM4ODAzMjIwODMxNFwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpsVjdXX3hzTU1xc3lZd1MzWmRFeXM5LWpuVVdUaWRsdUlUMVVlVmhhQ1ZmaDh0QzFWVFhGMmMyU3JRcVotc0lOeU11cll1MjN6UGdnSm1qMGNlR3Jlb01yaXdoQWxqLThsNm5KdWdMWUZFSXJRNU9vQmhxS0tQQUh1V1k2RXlQTW9hWk9MRnhsaGNHVVlEY1Awd1RtZlFsaURfU0JGQlB3NVk2dlp0djV0TF96X0kiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMTI4MAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSl8xbzAtdnVQR0dBUnpsZWVaMWdOVVhrIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiTVFYUCs0NCDlj7DmnbHljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hNUVhQKzQ0IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSl8xbzAtdnVQR0dBUnpsZWVaMWdOVVhrIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJyZXN0YXVyYW50IiwKICAgICAgICAgICAgImZvb2QiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyMQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIxMDUtMDAxMyDmnbHkuqzpg73muK/ljLrmtZzmnb7nlLrvvJHkuIHnm67vvJLvvJHiiJLvvJQg5bSH5Z+O5aSn5a2m5Lya6aSoIDVGIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjY1NzgwNDUsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljc1NzUwMTMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NTkxOTUyMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzU4ODU3Mzc5ODkyOAogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjU2NDk1NTcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljc1NjE1NzcyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuS4gOiIrOekvuWbo+azleS6uuaXpeacrOOCteOCpuODiuWtpuS8miIsCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNzcxOTMwMzQ1NTEwMDY5NjY2MVwiXHUwMDNl5YyX5p2h5b2wXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmtHMERVRHAwT3FEMXdhbEM1MXI3UVRiV0pPUWlya0MxMzZjdUlQakNwUEZhWnFWS3JOekVPNGJrN1F6WGl5QmduTTZ3a0taamxmTEdCcDBUMWZrT25vdC1xNVZOa1VkcW5ncEtwN0huNGpWSGZzV05ibnJidmxwVHRXSFRvVnc5Vy1jYjBtS0d2S3lNMVI5RGVrTnM0VmZOWktjcW9Wc2dEakoyU2hkdkJlWnJ1MSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKRFFQSWkyV0xHR0FSTjVGcndoQUlzYzgiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJNUTU1KzQyIOa4r+WMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WE1RNTUrNDIiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkRRUElpMldMR0dBUk41RnJ3aEFJc2M4IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDAKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMjI2LTAwMjQg56We5aWI5bed55yM5qiq5rWc5biC57eR5Yy66KW/5YWr5pyU55S677yR77yS77yQ77yR4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjUzMzA5OCwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNTI5NDg2NwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjUzNDA3NTU3OTg5MjcxLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS41MzA5OTkzMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS41MzEzNzU5MjAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNTI4Mjk5NjcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44Oo44Kz44Ok44Oe44Om44O844Op44Oz44OJ57eRIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTA4MCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAyMDM1ODQ1NzQ5NjAyNzA2Nzk2XCJcdTAwM2VEZW5pcyBNaWxsZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabFpZS2kxckRLY0tFVktwcVBUaUg4dHJDVXU5YlMwQlJNQW1hNWpnMmpOZUhwZ0htU09CdzhWRVZxRlZlb1B6dHpoN2pYTWt2V20wbXNkR2Z1U0NqY2pnWkFsNklITXFOTlRuS3d4RlJuRDYwS2pEYWFOVFkzaTM2THNfTms3VkdfX2xpNWxpMGhKcUhGWkoxeVpBSy1rQWFsYlBla2ZMRmEyVGJhM1pCRHFfVjJNIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDE5MjAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp3MWlEb2ZYM0dHQVJ2eU1PX2RtUV8tYyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkdHTUgrNlEg5qiq5rWc5biC44CB56We5aWI5bed55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYR0dNSCs2USIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUp3MWlEb2ZYM0dHQVJ2eU1PX2RtUV8tYyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA3NTQKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMjMxLTAwMjMg56We5aWI5bed55yM5qiq5rWc5biC5Lit5Yy65bGx5LiL55S677yR77yW77yR4oiS77yR77yW77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjQ0MDA1OCwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjQ1MzM4CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNDQxMzc3NjI5ODkyNzEsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY0NjU3OTMyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjQzODY3Nzk3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS42NDM4Nzk2NzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmgbXjgbPjgZkiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzNjQ4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDY4ODk2ODAyNTgzNTkzNTUyNTBcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabmxLNjByOFFBMWJIMGI3aEVnU0xuTFBLcHF2UjMydjA0WWd0WWFlUGZNdjN6N3JWdnRRSlM1dm9FbjV4WElTcTI1NWFsVmY5RHBvb3lveW9pTXYtZEh6UWJqZzNrQzM5RG9fRTNTZHd0WmVjUUs2cEdvZHBVUkVfTVB4UUhOTXJuMDBjZVJhWFBLYTdzZEtOTDlLNm1UeGJydVppSk5rLWRnZG5QbDJDdk1uMkVYIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDU0NzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp3MjZBVmVGY0dHQVJGSjVEWVVGbmozYyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkNKUlcrMjQg5qiq5rWc5biC44CB56We5aWI5bed55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYQ0pSVysyNCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUp3MjZBVmVGY0dHQVJGSjVEWVVGbmozYyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA1MTYKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNDA5LTM4MDMg5bGx5qKo55yM5Lit5aSu5biC6Iul5a6u77yT77yT4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjYxMTgyNDUsCiAgICAgICAgICAgICAgICJsbmciIDogMTM4LjU0MDEwMzUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42MTMyMDE2Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzguNTQxNjA3MzI5ODkyOAogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjEwNTAxOTcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM4LjUzODkwNzY3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIua5r+auv+mkqCIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNjc2OTIzMzk1MjIxMzc2NDk4N1wiXHUwMDNl5p2J5bGx6IGWXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmxsTEpUUmNxVEp0RTdvaUMybE9hVEtjV3hmOGJUN0FGQzRKaWhfSm1LNm1KalRPVFBXMW9sT2NPaklQaFJSYW9USExGVmxnbFdEaFR5Sl82QlBxU2hjQXA0cFh0R1FUSHBWUi0xcF9VWDFGRDlxZkJNa2gyT042VGhETkJSejhTbHRxZjRvMGNDRVA0M3NqOFFnQ3ZmOUt0NXJ2ZUFVUWItay1lc0FyOGxhMTFTaiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKRmR0OWFyandHMkFSLWJGTkp0OF9hNjAiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJKRzZSK1AyIOS4reWkruW4guOAgeWxseaiqOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3V0pHNlIrUDIiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkZkdDlhcmp3RzJBUi1iRk5KdDhfYTYwIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDI4NwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIyNjEtMDAyMSDljYPokYnnnIzljYPokYnluILnvo7mtZzljLrjgbLjgbPph47vvJLkuIHnm67vvJMg44Ki44OR44Ob44OG44Or77yG44Oq44K+44O844OI44CI5p2x5Lqs44OZ44Kk5bmV5by144CJ5Zyw5LiLMemajiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NDQxMTEzLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC4wMzcxNTI4CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjQ1NDgyNjc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjAzODUyMjc3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjY0Mjc4MzAyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC4wMzU4MjMxMjAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvcmVzdGF1cmFudC03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjRkY5RTY3IiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9yZXN0YXVyYW50X3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLpiYTmnb/nhLwg5LiD5rW3IOOCouODkeODm+ODhuODq++8huODquOCvuODvOODiOOAiOadseS6rOODmeOCpOW5leW8teOAiSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNDY1NTYyMjk5ODk4Njg0OTY3NlwiXHUwMDNlU3NsdXY0dVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpuQkU5SDBVVWFIX3BZWVZ0bTRxQ01xRkhvNFNFSEJ0YnFnQ0c3N0JDZWRRQnFjbzNuRXVoamwxemFMNGo3dmR1cGJkRXBmaU9Qc0dvRndzTk9rSW1qLVV4TXVtQml2a0tLbTNLZ0FkODZrZnB5cVdfckVkaUkwWnh0M1RvYUFwVmJpNmhJMkNQZmhBZU1EOHB4OVA2MlRJV2Q3RkxDMjByV05DZ0hWX1JiTmk5Q3UiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSm5jdHJ5TlNNR0dBUlNXZm04cEttNjlRIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSjJWUCtKViDljYPokYnluILjgIHljYPokYnnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSNzJKMlZQK0pWIgogICAgICAgICB9LAogICAgICAgICAicHJpY2VfbGV2ZWwiIDogMywKICAgICAgICAgInJhdGluZyIgOiA0LjIsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpuY3RyeU5TTUdHQVJTV2ZtOHBLbTY5USIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicmVzdGF1cmFudCIsCiAgICAgICAgICAgICJmb29kIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjMzCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE1Ni0wMDUzIOadseS6rOmDveS4lueUsOiwt+WMuuahnO+8k+S4geebru+8mOKIku+8ke+8kyDjg5Hjg6zjgrnppqzkuovlhazoi5Eg77yR77yQ77yR5Y+3IiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjYzOTkwMDEsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjYzNjYwNjMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NDEyNTU4Nzk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjM3OTU5Nzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjM4NTU2MjIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjYzNTI2MDEyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9yZXN0YXVyYW50LTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiNGRjlFNjciLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL3Jlc3RhdXJhbnRfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCieODvOOCgeOCk+mZuCIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxNTM2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDU4ODI2MTk3OTgxNTM0NTUzNDZcIlx1MDAzZeODnuOCteODpOOCpuOCqOODgFx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlprcW13ZEtJM3NQNFpxR3Z2cDFiSFp1RnJReTBEVzR6MHNoWTFSSktyMEZMMzJ1aFdJcHZwMHo4VEJFVkpBZmZ5ZXRiMmJFaUpBTHdPd2gtcC12NVJ2OFJWRk1Cb181OGpsMHByc3dRVExjWE1PNS05QlNlUUFpUUNvMElhaWpsdXA4X3dZaUtsVUdnNzJmYnN5SGFKVG4xLTlHNGExRE1DTDN0XzRxX0tZcERHNlkiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMjA0OAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSjlaQ0E2WTd6R0dBUktuTjFwcGUwb0ZnIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSkpRUCtXTSDkuJbnlLDosLfljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hKSlFQK1dNIgogICAgICAgICB9LAogICAgICAgICAicHJpY2VfbGV2ZWwiIDogMiwKICAgICAgICAgInJhdGluZyIgOiA0LjIsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUo5WkNBNlk3ekdHQVJLbk4xcHBlMG9GZyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicmVzdGF1cmFudCIsCiAgICAgICAgICAgICJmb29kIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNzU1CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjIyMC0wMDA1IOelnuWliOW3neecjOaoqua1nOW4guilv+WMuuWNl+W5uO+8kuS4geebru+8luKIku+8kiDjg6vjg5/jg47jgrnmqKrmtZzjg5Pjg6sgQjJGIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjQ2MzgxNDgsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjYxODQ5NzUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS40NjUxOTA3Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjE5ODM2NTI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNDYyNDkxMTIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjYxNzEzNjg3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9yZXN0YXVyYW50LTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiNGRjlFNjciLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL3Jlc3RhdXJhbnRfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIumuqCDkuIPmtbciLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyNDQ4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTU5OTk5MTg2OTkwNTcwMDkwNDZcIlx1MDAzZeOBsuOCjeOBvuOCgVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpuX2hPc2NISjA4ajYzZ1ZJdC05R2pSVGR6a1dadjY5NUVib2xWQ0FQTlNIMVB2UVdFcVlCWDZIV1lYaXVFdnhtSktqc3dxZDdiOGlkc2RoVzlMaVExdTdzaEdQTHcwdG5wQ052cUVPSXJYYm5pZm1UVDdUZkpsUGJHcXdZM0ktZnFTVDFqS0I1VTZISXpxUWpIMUJ6LTJYa0hLSkFzVnpTamdSbE9nXzNuMXFZSjgiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMjQ0OAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSjZ4Y3RBVGhkR0dBUmQyZDYzQVN2M0s0IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiRko3OStHOSDmqKrmtZzluILjgIHnpZ7lpYjlt53nnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hGSjc5K0c5IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSjZ4Y3RBVGhkR0dBUmQyZDYzQVN2M0s0IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJtZWFsX3Rha2Vhd2F5IiwKICAgICAgICAgICAgInJlc3RhdXJhbnQiLAogICAgICAgICAgICAiZm9vZCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE3OQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIxNTgtMDA5MiDmnbHkuqzpg73kuJbnlLDosLfljLrph47mr5vvvJPkuIHnm67vvJHiiJLvvJHvvJMiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjA3MjExNiwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjQwMzI3MQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjYwODU2NDU3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS42NDE3NDE3Nzk4OTI4CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42MDU4NjQ5MjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjM5MDQyMTIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL3Jlc3RhdXJhbnQtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiI0ZGOUU2NyIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvcmVzdGF1cmFudF9waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44Gq44GL44KA44KJ5bGLIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjMzNiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA1MTI2NDM3NTI3NDc2OTY0NjkxXCJcdTAwM2Xpg73lv5fooYzjgY1cdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabHRoZjBjNjRxRXVhc0dMd1dtb3U2cGRMd3M4cnVYOEx3LURiQVpCZnQ1ekcwMDEzNERSbzdXWTgzMDZaZFh5ZnJ0TVAzWmFaUm9fbXB0QllzQlF6TkF0MWxyWTRPWEd3T3NXQlZKOERsc1NNSDFWSWtBNS03bFV3TEczTE1Bc1liZGhjank4dllFRmc1QXlnVUVDYkhCbkhvWDgxeFdod1BuYW5XMDVsaUk2MWJVIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDM1MDQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpvVkZYSEZEMEdHQVIyM2NYMjhxenA5TSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkpKNFIrVjQg5LiW55Sw6LC35Yy644CB5p2x5Lqs6YO9IiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYSko0UitWNCIKICAgICAgICAgfSwKICAgICAgICAgInByaWNlX2xldmVsIiA6IDIsCiAgICAgICAgICJyYXRpbmciIDogNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSm9WRlhIRkQwR0dBUjIzY1gyOHF6cDlNIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJyZXN0YXVyYW50IiwKICAgICAgICAgICAgImZvb2QiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA2OTUKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNDIyLTgwMzYg6Z2Z5bKh55yM6Z2Z5bKh5biC6ae/5rKz5Yy65pW35Zyw77yS5LiB55uu77yS77yV4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk1MDczMzYsCiAgICAgICAgICAgICAgICJsbmciIDogMTM4LjQxMzkzNQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk1MjAzNTQyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOC40MTUyMTkzNzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC45NDkzMzU3NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzguNDEyNTE5NzIwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44K144Km44OK44GX44GN44GYIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEwNjgzMzEyODc4MTA5MjQ3MDQ5XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmwyUmtEbnlsZHlidnN4a3RpX2QwSnpHeDlZdDlJWFZfVGVhb3Vqdlk2WWkwMF9nY0trMXVzb2ZDNUo4OUYxczlrMER4N2wxQXN0U0RFci1IdW9DWE5LWElYTkw2UldzY3RRN2p1MWhUX3FvSnF2ZnQtSGtoWjM3LW9JdW9DNW15bWdIaXFLMS1FT1prUmJvVHFrVjdSM2RqTFM4REYtSDllV20zWWxNLTgycm04IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpiVE5YcGpRMkdtQVI4aThmZER0cFp1dyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlhDMjcrOEgg6ae/5rKz5Yy644CB6Z2Z5bKh55yM6Z2Z5bKh5biCIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZXWEMyNys4SCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjQsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpiVE5YcGpRMkdtQVI4aThmZER0cFp1dyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDIwNjQKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMjUxLTAwMjYg56We5aWI5bed55yM6Jek5rKi5biC6bWg5rK85p2x77yS4oiS77yT4oiS77yR77yQ77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjMzNTAzMjksCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjQ5MDY0NTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS4zMzY1MDk2Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNDkxNDg3Nzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuMzMzODEwMDIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjQ4ODc4ODEyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCu+ODs+ODiOODqeODq+ODleOCo+ODg+ODiOODjeOCueOCr+ODqeODljI0IOiXpOayoiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDEyODYsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMjQyNDkwNTMwMjQ0NzUwNjE1M1wiXHUwMDNl44K744Oz44OI44Op44Or44OV44Kj44OD44OI44ON44K544Kv44Op44OW6Jek5rKiXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmtkOWxEQ3dPd1lOYV8zbHQ0Mm1ta1FZY0tpVjNLZTA2a2FpQVJERjNwaEJyX0FNM1M3OVNYbDRYc212QmdtbTM4OEF6ZzRXS0t6VFJtd1BjUzJMSnlaQ2VwZXZYN0NwQWxRSllvOXpKdDBtYlFHbV9uUGl6TW1ucWZSVjI3dDVvYzZyVUo2MUU0RTVKUk0yTTl1TG1neWY2clA4blZ4X0FPWFppY3VDN3Rwb3hiYSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxOTI5CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKVHdlcnZiVlBHR0FSOWo2UDRDODJVOHciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI4RlBSKzI3IOiXpOayouW4guOAgeelnuWliOW3neecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WDhGUFIrMjciCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy41LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKVHdlcnZiVlBHR0FSOWo2UDRDODJVOHciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgImd5bSIsCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNTEKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Mon, 20 May 2024 10:33:42 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E6%81%B5%E5%8C%BA%20%E4%B8%AD%E5%BD%A9%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:30:18 GMT
      Expires:
      - Fri, 24 May 2024 12:35:18 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=271
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Fri, 24 May 2024 12:30:18 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E9%87%8E%E5%B8%82%20%E5%B0%8F%E6%A8%AA%E5%B1%B1%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:30:19 GMT
      Expires:
      - Fri, 24 May 2024 12:35:19 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '31058'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=409
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 12:30:19 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E7%B6%BE%E4%B9%83%E5%8C%BA%20%E6%A5%93%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:30:20 GMT
      Expires:
      - Fri, 24 May 2024 12:35:20 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=522
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Fri, 24 May 2024 12:30:20 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8C%97%E5%BE%8C%E8%97%A4%E9%83%A1%20%E4%BB%81%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:30:21 GMT
      Expires:
      - Fri, 24 May 2024 12:35:21 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2183'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=338
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjYwMS0wMjcxIOS6rOmDveW6nOS6rOmDveW4guWPs+S6rOWMuuS6rOWMl+eGiueUsOeUuuadvuOCseS4izE355Wq5Zyw44GuMiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS4xNzI1ODIyOTk5OTk5OSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNjE3NzQ3OAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjE3MzgzNDQyOTg5MjcxLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS42MTkxMDgwNzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS4xNzExMzQ3NzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNjE2NDA4NDIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAiRUFSVEggU0FVTkEiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogZmFsc2UKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTQ3OCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE3MjU1NDg1NDY0NTI1NzMwNDQ2XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm5nRjRlX2J2S3N6TENPZFcyM054R1FYSG1vZDJZaEhOX2x1RkpNZEdlZVZaWGxTTENLOGhHM2o5a0trOTlJODZ3V0wxTHZZY2t2QjhxNUNHbEx1WDJJQUVOUkxLcHlsV3FhLTlyM29RU1JVV0lGX0s1M2ZGb2lRbE5LanJzVnI5OTlndFVubk8xR1otV0FwRWNPYW42eEd4STRyMHZXTnVFRDBmUTlvdjVYbGtENyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxMTA4CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKT19JWWpaT3pBV0FSX3k1OWdObkhaMGciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI1SkY5KzIzIOS6rOmDveW4guOAgeS6rOmDveW6nCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3UTVKRjkrMjMiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC42LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKT19JWWpaT3pBV0FSX3k1OWdObkhaMGciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA5CiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0=
  recorded_at: Fri, 24 May 2024 12:30:21 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8C%97%E7%9C%9F%E5%A4%AE%E5%B8%82%20%E4%BA%95%E4%B8%8A%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:34:26 GMT
      Expires:
      - Fri, 24 May 2024 12:39:26 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42087'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=440
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 12:34:26 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E4%B8%AD%E5%B3%B6%E7%94%BA%20%E5%A4%A7%E5%A2%97%E7%94%B0%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:34:27 GMT
      Expires:
      - Fri, 24 May 2024 12:39:27 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '11500'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=557
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 12:34:27 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%89%E8%97%A4%E9%83%A1%20%E4%BA%95%E4%B8%8A%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:34:28 GMT
      Expires:
      - Fri, 24 May 2024 12:39:28 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41374'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=391
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 12:34:28 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E4%B8%AD%E5%B1%B1%E5%8C%BA%20%E6%96%B0%E7%B5%90%E8%8F%9C%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:34:29 GMT
      Expires:
      - Fri, 24 May 2024 12:39:29 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=222
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Fri, 24 May 2024 12:34:29 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%8F%8A%E5%9C%B0%E6%9D%91%20%E8%A5%BF%E9%A2%AF%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:55:59 GMT
      Expires:
      - Fri, 24 May 2024 13:00:59 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2162'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=327
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjg2MS0xMzYyIOeGiuacrOecjOiPiuaxoOW4guS4g+WfjueUuuWxseW0ju+8le+8mO+8mSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzMi45OTAyMDQ0LAogICAgICAgICAgICAgICAibG5nIiA6IDEzMC43ODgyOTU4CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzIuOTkxNTIxODc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMwLjc4OTQxNjE3OTg5MjgKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMyLjk4ODgyMjIyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMC43ODY3MTY1MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjg4jjg4jjg47jgqbjg5DjgqQiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDMyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDg0MzU0Nzg5MDc3NzA1MDM4MTRcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zabkh6TXhMbUctMjdsRHdNUEFHUk5KQlpsUUZiMVU0NGh6Vm9yaVQxZTAwT2tqLXRNbHpPME43YzZ2VW8wZW9PSjNqa0pqalZ2UDgtQXFyZGVYZUtpNE1mSnNnWmZzZmpiTHY1UThvTXlJTW41MzlQU0E1dnU0SFFvdGh0Zk1UR3NLNF83bU02MUZuMlNXSDJoaENDQjFlYVNiVmVSd3pnZVZzMmJQYjItSlNGa1g1IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpkY1BQdWVIOVFEVVJ0M2Y2SXREcDRoZyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlhRUlErMzgg6I+K5rGg5biC44CB54aK5pys55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTRHWFFSUSszOCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjMsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpkY1BQdWVIOVFEVVJ0M2Y2SXREcDRoZyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE1CiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0=
  recorded_at: Fri, 24 May 2024 12:55:59 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%A6%8F%E7%94%B0%E7%94%BA%20%E8%91%B5%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:56:00 GMT
      Expires:
      - Fri, 24 May 2024 13:01:00 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '27475'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=417
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 12:56:00 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%94%B0%E4%B8%AD%E5%8C%BA%20%E6%96%B0%E8%A5%BF%E6%9D%91%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:56:01 GMT
      Expires:
      - Fri, 24 May 2024 13:01:01 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '4285'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=513
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjMwNy0wMDAxIOiMqOWfjuecjOe1kOWfjuW4gue1kOWfju+8ke+8mO+8kyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNi4zMDI1OTkxLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS44NzQ2NTE3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuMzAzOTU1MjI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg3NTkwNDA3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjMwMTI1NTU3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS44NzMyMDQ0MjAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJLVVJBOlNBVU5BIElCQVJBS0kgKOiUteOCteOCpuODiikiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogZmFsc2UKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzQxNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA4NjM1MTg0ODk1MzYyNTA1NDY1XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmwxM3Vlel8zckltRGQ3MmtnWjFrLWNZWTNOYTFyYW84UXZZN1ZyYlo0U0pqeEQtRmw1VU4xcGdBOGFvTWNRMW1XQy1wX0NnNVpvNUNtQ0E3LWN3X2hnV2J4R1FaMjhMeDlHX29aRTh0MEVRVUZpUk41dkJ4RUtoblBYaFVuOVlpbS1PV3Zqb29oUTF2QkFtU3V2WExPX0lQMVZVNTlNWVpwRmlhZmJrUzFsMHhJMiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA1MTIxCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKaXp5TjZYMVRIMkFSU0pKbV9PVkdxMTQiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI4VjNGKzJWIOe1kOWfjuW4guOAgeiMqOWfjuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE4WDhWM0YrMlYiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKaXp5TjZYMVRIMkFSU0pKbV9PVkdxMTQiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAzMjAKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzIwLTAwMzUg5qCD5pyo55yM5a6H6YO95a6u5biC5Lyd6aas55S677yS4oiS77yWIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM2LjU2MDk2MzQsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg3OTIwNDIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi41NjIyMzc4Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODgwNTE0OTI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTU5NTM4MTcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg3NzgxNTI3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIktVUkEgU0FVTkEgVVRTVU5PTUlZQSAo6JS144K144Km44OK5a6H6YO95a6uKSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDMyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDc2NDA0NzIyMjg3NDUxNDQwMzlcIlx1MDAzZemHkeWtkOOBleOBiuOCilx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptaC0tUzJBaW5mNHBEMkhzaG5PX2Eyc0JKS1dfMmExa01qeTJxNnQ2NXpYSTVVak9zdGdhT0g4WTMxTWM3a1M2WHUtWmtpNFMzMEQ4V1FzVXhnX3NLdl84SUJNeV9FcU00bmc1cmwtNk5UN3h4V21iRjVTSXcwbkdVdTZ4eGRtSDQzbGx5RV9BRnhndFlYVnNKSXdKVFJENzVaWHQ2cHVteU5RQVQxWDBuYS1zbXQiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAyNAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkpTT3BvU3RuSDJBUklKTHd0UHM5R1cwIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSFY2SCs5TSDlrofpg73lrq7luILjgIHmoIPmnKjnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhROFhIVjZIKzlNIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuNywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkpTT3BvU3RuSDJBUklKTHd0UHM5R1cwIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjEKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Fri, 24 May 2024 12:56:01 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%BF%BC%E5%B8%82%20%E5%8C%97%E5%BD%A9%E4%B9%83%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:56:01 GMT
      Expires:
      - Fri, 24 May 2024 13:01:01 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '25412'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=373
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 12:56:01 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%84%AA%E5%8C%BA%20%E5%90%89%E7%94%B0%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:57:07 GMT
      Expires:
      - Fri, 24 May 2024 13:02:07 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '30635'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=422
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 12:57:07 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8D%97%E4%B8%AD%E9%87%8E%E5%8C%BA%20%E5%A4%A7%E4%B8%AD%E5%B1%B1%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:57:08 GMT
      Expires:
      - Fri, 24 May 2024 13:02:08 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=255
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Fri, 24 May 2024 12:57:08 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E7%9F%B3%E4%BA%95%E7%94%BA%20%E6%96%B0%E7%BE%8E%E6%9C%88%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:57:09 GMT
      Expires:
      - Fri, 24 May 2024 13:02:09 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '10325'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=325
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 12:57:09 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%B0%E5%84%AA%E5%A5%88%E7%94%BA%20%E5%8C%97%E6%9D%8F%E5%A5%88%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:57:10 GMT
      Expires:
      - Fri, 24 May 2024 13:02:10 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41019'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=470
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 12:57:10 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8C%97%E5%B2%A1%E7%94%B0%E5%B8%82%20%E6%9D%B1%E9%9F%BF%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:58:55 GMT
      Expires:
      - Fri, 24 May 2024 13:03:55 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=213
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Fri, 24 May 2024 12:58:55 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%84%9B%E7%BE%8E%E5%B8%82%20%E6%9D%8F%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:58:56 GMT
      Expires:
      - Fri, 24 May 2024 13:03:56 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '18032'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=385
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 12:58:56 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B0%8F%E5%A2%97%E7%94%B0%E7%94%BA%20%E7%BE%8E%E5%92%B2%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:58:57 GMT
      Expires:
      - Fri, 24 May 2024 13:03:57 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '18243'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=360
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjAxMy0wMDQzIOeni+eUsOecjOaoquaJi+W4guWuieeUsOWgsOerr++8le+8kuKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzOS4zMDgzOTksCiAgICAgICAgICAgICAgICJsbmciIDogMTQwLjU1NTcxODYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzOS4zMDk4NTM4Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNTU3MTA4NjI5ODkyOAogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzkuMzA3MTU0MjIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjU1NDQwODk3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuaXpeW4sOOCiuWFpea1tCDjgYvjgb7jgY/jgonlnovjgrXjgqbjg4og44Oq44OV44Os44OD44K344Ol44O744K544OR44Kv44Kp44O844OJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzc0NCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEwMTgxNDAzNzMxOTIwMDE5Nzk2XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWms0ekJLa3RGMkdDQU44MDdmTUVwOWY4NmhNWGlCYl9xLU1TSHZzcF9rWkN1ZzlYSThaalEwamZhdzl6eDdxOFpiRjFsMmJXQlV0d0s5R0tlMzRValFyOXRScWxTWHhoMTVJdm5mSXp6MkxULWt0dE00RklRa0N2OXpVTGVZaHZJcnlMNzZRLXhUQUFoampoVmh1MVg2TXlJZU5JZ3duZ3did3lvYkdfZjBnTnZmcCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA1NjE2CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKNHlUa1ZGUUZqMThSX0I3azM2bnk4aU0iLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI4SDU0Kzk3IOaoquaJi+W4guOAgeeni+eUsOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFJGMjhINTQrOTciCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKNHlUa1ZGUUZqMThSX0I3azM2bnk4aU0iLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgImxvZGdpbmciLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxMTcKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMDE5LTA1Mjcg56eL55Sw55yM5qiq5omL5biC5Y2B5paH5a2X55S65aSn6YGT5p2xIDg4LTEtMiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzOS4yMjEyMDUxLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC41MjI5NjIzCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzkuMjIyNTU4NDI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjUyNDI5OTYyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM5LjIxOTg1ODc3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC41MjE1OTk5NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJNVVNJUk8gU0FVTkEo44Og44K344Ot44K144Km44OKKSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyNDAwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDAxMzY2MDY1NjAwMDM0NTM3NDZcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabWlpbU1RNEt3OWRVZ193aGFwLXR0anR5UHpWZDhDbXM1RjlvSnV0ck9qTnd0T2ttMzE3Qloxb2dtWXhkRTc2VUkyNGdiSDVXV2Z2SVVhdnBCb1RqT05icU9naWIzaHgyQUk3RmRxZ3NnYzVvOEVzZ09PcExjUGZxMHo1aTRLd0RTOEp0MmVqeTh5dGtrMDBqcG4zbmh0LS1HQXZlcHEyYVUwUFI4NXhyNXhiaVgtIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDM2MDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpPMklXeEw0ZGoxOFJqemhaODBiYXhtYyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjZHQ0YrRjUg5qiq5omL5biC44CB56eL55Sw55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkYyNkdDRitGNSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA1LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKTzJJV3hMNGRqMThSanpoWjgwYmF4bWMiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJsb2RnaW5nIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDMKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMDE5LTA3MTQg56eL55Sw55yM5qiq5omL5biC5aKX55Sw55S65oi45rOi5ZCJ44Kx5rKi5Y+j77yZ4oiS77yTIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM5LjE4MTE3OSwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNTQwNjAwNwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM5LjE4MjY2NjUyOTg5MjczLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC41NDE4ODA5Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzOS4xNzk5NjY4NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNTM5MTgxMzIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5oi45rOi6Ymx5rOJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMTU1MjEwMzY2NTMyNzcyOTA2M1wiXHUwMDNlVGFrdXJvXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmt6VUt3bGtpQXc5Yk5OWFZRUzVKcjFzaVdUVGRlb3J2ZzR3VmpsTTdCWUFOM3JvV09SV3F0bmRHVE5ST1N5YnBzTG8wblNHT2pBT3VvSm5uTktDMEViVko2WnhrT3QyNGR6aUh1cURkUmlMSDlsLWxtTUFZSk5WZ0dMRVRVT19oVVR3anB1VW1fNlRIRWFYSXB0Zm9YNkJZMzZEbHBGdE9rMmxmZ1RoNEctTjIxRiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKQjhpTUJLNGZqMThSS1IyODBxTjliZ2ciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI1R0pSK0Y2IOaoquaJi+W4guOAgeeni+eUsOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFJGMjVHSlIrRjYiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC40LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKQjhpTUJLNGZqMThSS1IyODBxTjliZ2ciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE0MQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIwMTMtMDEwMiDnp4vnlLDnnIzmqKrmiYvluILlubPpub/nlLrpho3phpDmsqLlj6PvvJHvvJbvvJYiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzkuMjMzMDk4OCwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNTY0NTkzOQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM5LjIzNDQ4Mzg3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC41NjYwOTg0Nzk4OTI4CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzOS4yMzE3ODQyMjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNTYzMzk4ODIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2xvZGdpbmctNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzkwOUNFMSIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvaG90ZWxfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOBqOOBjeOCgeOBjeS6pOa1geOCu+ODs+OCv+ODvCDjgobjgaPjgbfjgosiLAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDgxMzIwOTA1MDEyOTY4OTkzMzJcIlx1MDAzZeODpuOCv+ODpuODqVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpsQzBWek9yemFPNVNtRWdEbTFUM19kODdteG85VGxCUEY0YkRNUzAtMkRMb2FtdWFTZlZBcTZKNV9Vc2IzZzh3R3JWbEVWTHBXazd6Y1FQVEZiWDN3cm1sVWtFYlJKVlZaYkx6NS1LcW9yLXJncGNNT1FCRE5UNDRqMHcxbXhzV0E1b2xHb2dhUm1aUlg2RWhnaFJRWkQ0a1lnWG93U3V0dllVUzRMdnZ2dVhEejYiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSnhWSGpmdUliajE4UmtENk9yRGo3Wml3IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiNkhNNys2UiDmqKrmiYvluILjgIHnp4vnlLDnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSRjI2SE03KzZSIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuOSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSnhWSGpmdUliajE4UmtENk9yRGo3Wml3IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJsb2RnaW5nIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNDg0CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjAxOS0wODAxIOeni+eUsOecjOmbhOWLnemDoeadseaIkOeArOadkeeUsOWtkOWGhe+8k++8kCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzOS4xODk0NDU2LAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC42NDM0OTczCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzkuMTkwOTg1NjI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjY0NDg4NDYyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM5LjE4ODI4NTk3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC42NDIxODQ5NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLkupXmiLjnq6/jgrXjgqbjg4oiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogZmFsc2UKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTY4OCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA1MDEzMzQ5NzExNzg0NjU1NjU2XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm56bUZfbDNiUG84RVFpVGRrT3h5MTZxQ1RNckFGbWYzU2swNnRsWS1wdmp6cnlwQUw2ak0xT0FBcmhYN0c5cjAwM1podXMyVHlSbk8zRTJlOXA5MmVVeUt5ZWx1RGVnZ29RbXQ1SlZIOUE5NHBfdHlpQzk4elZJY29LX05xVkM5bDNCUVdob1VnTVRLTE93cXg2N01wd3owc1RqWHBoV0kyZVNUNTdMQ0dNU1diRiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzMDAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKX2ItSmlnMFpqMThSRDVXUkxhdGdVQjAiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI1SlFWK1E5IOadseaIkOeArOadkeOAgeeni+eUsOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFJGMjVKUVYrUTkiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSl9iLUppZzBaajE4UkQ1V1JMYXRnVUIwIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3MDctMDA0NSDlsqHlsbHnnIznvo7kvZzluILlt6jli6LvvJLvvJTvvJXvvJHiiJLvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTYzNzQxOSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuMTMzNzQ2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTY1MDg0NzI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjEzNTE0NDUyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk2MjM4NTA3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC4xMzI0NDQ4NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJrb2JhdG9pc2EgY2FmZSZzYXVuYSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNTg5MzI4OTM1Mzg1OTAwMTkyMVwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpsNkI0S2h4NElXYnlySkVOZmV0WnZuMGk3S3RpTDNlTVJUVE9iWktuOEd2VUNtWkE0Snh1XzRBUnI3ZVVSY2VHd1llZ0RBNmh1d3RLY3pwZzJaRDVOQ3dKT21taWE4eU9pX2NPczFkQk9SdmFORmZuTG8zekd5cElyUDh3VmUxQms4alNnSkNRWXFLbmI4cGhUeWg1VkdsS0U1VVE5S2cwX0lKSEZhNVlsS3JDRkoiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSlVXbHlNTWxKVkRVUjV3YmJxT0dzc0UwIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiWDQ3TStGRiDnvo7kvZzluILjgIHlsqHlsbHnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlBYNDdNK0ZGIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuOCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSlVXbHlNTWxKVkRVUjV3YmJxT0dzc0UwIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJjYWZlIiwKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJmb29kIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDgKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMDE5LTE0MDMg56eL55Sw55yM5LuZ5YyX6YOh576O6YO355S65YWt6YO35p2x5qC5IOWtl+S4i+mmrOi7ojEyMCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzOS40MDk0NTYxLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC42MTMwNzEyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzkuNDEwNjk4Njc5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjYxNDQwMjA3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM5LjQwNzk5OTAyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC42MTE3MDI0MjAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjg6Tjg57jg47jgrXjgqbjg4oiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDE2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDA5ODk2OTU4MDE5ODk5MDc4MDdcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zaa0pkb0ZaYmp0MFNFN0hfVm5QZkZ3M2F6NzM0akhCWi1oNnV2OGlBMUZpUEt6ZlJvRERQbk1QYWxvc1BhMnVQMDYxRFBuR0tOUU1UUUFoVTI2QW9lTGRNbDdVR2xHY2Iza0phRWxNVk1tSUxXTXIxNGxwMDdlR3JmMnViNlpveWN5cXd0bHdYV3RZYUJZWWRHU0x1dGFnd3F6WVhTYjRtTHdtd01lZXJLT2ZCMm9uIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDYwMTYKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUoyU0NmMDBNTGoxOFJtMkRmMGJwMDUzYyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkNKNTcrUTYg576O6YO355S644CB56eL55Sw55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkYyQ0o1NytRNiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA1LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKMlNDZjAwTUxqMThSbTJEZjBicDA1M2MiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjAxMy0wMDM2IOeni+eUsOecjOaoquaJi+W4gumnheWJjeeUuu+8l+KIku+8lyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzOS4zMDkwMTQ0LAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC41NjE2ODUyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzkuMzEwNDU1MjI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjU2MzEwNjIyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM5LjMwNzc1NTU3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC41NjA0MDY1NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmqKrmiYvpp4XliY3muKnms4kg44KG44GG44KG44GG44OX44Op44K2IiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA3MTY0ODc4NjQ4MzA2MzkyMzU3XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm1EM1czU0gzdTVhQUdiTWloMzhuZFZxQ2w3QTZiTzJJSUNLVHRPRV9vbjcwVlU1Sm5CR3dfUDFvbWFlUlI4Y1BhYzBZMTlkblgwVHVfcXJYWXpQRHZTUkxuSENaR1RKc2MteXpvUkFJZEljY3kteTJGTHgwUEJMYnNhaTlpNUpMWHJXUVVPaHVGSVJveGdYaHZmZDNERnd0Zm5kUWlPaXpiZWlUZkJlNVdORE5TYSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKT1ZtMHJfOFBqMThSa3piRDlRUEh5dDgiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI4SDU2K0pNIOaoquaJi+W4guOAgeeni+eUsOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFJGMjhINTYrSk0iCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKT1ZtMHJfOFBqMThSa3piRDlRUEh5dDgiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjMxCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiQ0xPU0VEX1BFUk1BTkVOVExZIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIwMTktMDcwNSDnp4vnlLDnnIzmqKrmiYvluILlopfnlLDnlLrni5nljYrlhoXlj6TlrrbmsqLlj6PvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzkuMTIzNzU5OSwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNjQ2OTQzMgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM5LjEyNTIwMzIyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC42NDgyNDg1Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzOS4xMjI1MDM1NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNjQ1NTQ4OTIwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5pel5biw44KK5rip5rOJ44CM44KG772e44KJ44GP44CNIiwKICAgICAgICAgInBlcm1hbmVudGx5X2Nsb3NlZCIgOiB0cnVlLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpEX04yY3ZnaGoxOFJwRnprSm5sQlZFayIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjRKRlcrR1Eg5qiq5omL5biC44CB56eL55Sw55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkYyNEpGVytHUSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAwLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKRF9OMmN2Z2hqMThScEZ6a0pubEJWRWsiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMAogICAgICB9CiAgIF0sCiAgICJzdGF0dXMiIDogIk9LIgp9
  recorded_at: Fri, 24 May 2024 12:58:57 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8D%97%E3%81%95%E3%81%8F%E3%82%89%E5%B8%82%20%E5%B0%8F%E6%AD%A6%E7%94%B0%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 12:58:58 GMT
      Expires:
      - Fri, 24 May 2024 13:03:58 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '6383'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=323
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjMyOS0xNDEyIOagg+acqOecjOOBleOBj+OCieW4guWWnOmAo+W3ne+8lO+8ke+8lO+8leKIku+8ke+8kCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNi43MTU0MjYwOTk5OTk5OSwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMDMyNzA2OQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjcxNjk1OTAyOTg5MjcxLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC4wMzM4MjkwNzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi43MTQyNTkzNzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMDMxMTI5NDIwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi6YGT44Gu6aeF44GN44Gk44KM44GM44KPIOa4qeaziSbjgq/jgqLjg4/jgqbjgrkiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogZmFsc2UKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzI0MCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA0NzUxMTkwOTk1NTI3MjI5OTY0XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm10N2c3bDZBNXpLcFdlbU5EamVzeXNWdVhncm1xbm5kRkNobG5TX3F6ank0WkxPcGlWcS1sMWRIaldlal8wVEVJNTlKdkJJVGdaMEktLXJHSWFldmZrRDFDdmZVZGwySGd5OEFjbUh2a1ZUSFYzd2x4YkczS0czSGxiV2d2YlljcHl3NzRaSXVCcEFTcUlPZm91TlJmVm0wMGFWc3NfR0dUMHRDWklxODN2bUpHRCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0ODYwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKczNqRTF3SFpJV0FSQklMRzQ0bUh6UDgiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJQMjhNKzUzIOOBleOBj+OCieW4guOAgeagg+acqOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI4MlAyOE0rNTMiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSnMzakUxd0haSVdBUkJJTEc0NG1IelA4IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyNDUKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzIxLTA5MDQg5qCD5pyo55yM5a6H6YO95a6u5biC6Zm95p2x77yW5LiB55uu77yV4oiS77yT77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM2LjU1NjE5MDgsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjkzMzQxMjkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi41NTcyOTgzNzk4OTI3MSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuOTM0NzAyNDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTU0NTk4NzIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjkzMjAwMjgyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWuh+mDveWuruWkqeeEtua4qeaziSDjg5njg6vjgZXjgY/jgonjga7mua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDU1NTE3NzQ5NTQ2NjMzNDQ5MzlcIlx1MDAzZW5hdHN1a2kga2F3YW11cmFcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabmVwZUFLSDZVSW9WOVpiYWVidDBnT1pxX1VoYmlxY2tKc1U2blJsTTFjZnRMbk5iX1ZsNlBGalIxSEhTVzFFLWVlRTQ1bTBxNXVzWDhoZnBwa1U1VUJ0LVpxMnAwcWZVR1JKRXl6a2IxV3RGQ000eDZ1VnRkYU8tQmdDbkhmNWtvZkhFTXgwS2R4YlJZSHdKNmlfdTd5NHBlM3pVLW1PTTlmN1cwVFk2aEgxTlJFIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUo0N2xLRVA5ZEgyQVJ6eExzTHI0VXU0USIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkhXNE0rRjkg5a6H6YO95a6u5biC44CB5qCD5pyo55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UThYSFc0TStGOSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKNDdsS0VQOWRIMkFSenhMc0xyNFV1NFEiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE1MzUKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzI5LTE0MTIg5qCD5pyo55yM44GV44GP44KJ5biC5Zac6YCj5bed77yY77yX77yR4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM2LjcyMzY0MDYsCiAgICAgICAgICAgICAgICJsbmciIDogMTQwLjAzMTM0NjQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi43MjQ5OTU4Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMDMyNjkxMjc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNzIyMjk2MjIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjAyOTk5MTYyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuW4guWWtumcsuWkqemiqOWRgu+8iOesrO+8kua4qeaziea1tOWgtO+8iSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMTA0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDA4NzM5MDc5MTI3NjYxODM5NDBcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabUN1NVpQbWRTVlIzbnNYRV8wRmpmYTAyRDhrZDVCQjZCRWFyVFpYbkFaTldYYmZwNGFQOWlFcE1VMHZnd2pvVXBUTDlTem13bnRQU3V6N284MHVSTUVMMXdsQ1lxcGQ2eDBqeWZ3RC1telRzQ1lNVkE2Y0paZXl1c2RJSGdZZFgzUWg5WTBUS1E5el94a3pTRlRuVzFoTXNyRG5wYm95RjBkYjN2bGlzaDA2VHFwIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDU1MjAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpRN0w0MzJ6WUlXQVJZM2tJbWhWR003TSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlAyRkorQ0gg44GV44GP44KJ5biC44CB5qCD5pyo55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UjgyUDJGSitDSCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpRN0w0MzJ6WUlXQVJZM2tJbWhWR003TSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMzQzCiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0=
  recorded_at: Fri, 24 May 2024 12:58:58 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E9%87%8E%E9%83%A1%20%E4%B8%AD%E4%BA%95%E4%B8%8A%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:02:04 GMT
      Expires:
      - Fri, 24 May 2024 13:07:04 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '8324'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=420
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:02:04 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%AA%E9%83%8E%E5%8C%BA%20%E9%99%BD%E8%8F%9C%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:02:05 GMT
      Expires:
      - Fri, 24 May 2024 13:07:05 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '18313'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=362
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:02:05 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E8%A3%95%E5%AD%90%E6%9D%91%20%E8%A5%BF%E6%9D%BE%E5%B0%BE%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:02:06 GMT
      Expires:
      - Fri, 24 May 2024 13:07:06 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2197'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=483
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjEwNy0wMDYyIOadseS6rOmDvea4r+WMuuWNl+mdkuWxse+8k+S4geebru+8ke+8kuKIku+8kyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NjYwODAzLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MTQwMzg5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjY3NDU2ODI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcxNTMzNzMyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjY2NDc1NzE3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MTI2Mzc2NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLljZfpnZLlsbEg5riF5rC05rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIxNjAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMTE3MzgzNjk2NDkyMTUxODI0NlwiXHUwMDNl6YeR5Z+O576O6LK0XHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm1Bd3Njc21qUEs5bG1nbU9tdHdaZUI3MktGdkoweXkwNFhUcFRrMGhDbExWQ2VYeW16RkhEenZ1SG55ZzBjemZiaDVUNG1qcHNTcC03SlFFNFpaVDhveEluVFVVMTJqZmJtTGJEZThEa05DYU50VnZhazZOZklJUldsRDJkb0ZHWFlKUTV3eVN0ZC1QQ2JlY0VhRjlCNmhlaFFJb0hLX3ZUSHdHUTcxa1ZiclpCYyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzODQwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKNGRwLXpKLU1HR0FSZkJsWUtDNXRIeGMiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJNUDg3K0NKIOa4r+WMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WE1QODcrQ0oiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSjRkcC16Si1NR0dBUmZCbFlLQzV0SHhjIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJ0b3VyaXN0X2F0dHJhY3Rpb24iLAogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE0NTMKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Fri, 24 May 2024 13:02:06 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B0%8F%E6%9D%91%E4%B8%8A%E9%83%A1%20%E5%86%85%E7%94%B0%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:02:07 GMT
      Expires:
      - Fri, 24 May 2024 13:07:07 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '19472'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=349
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:02:07 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E4%B8%AD%E5%A4%A7%E7%BF%94%E9%83%A1%20%E5%B9%B3%E9%87%8E%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:02:37 GMT
      Expires:
      - Fri, 24 May 2024 13:07:37 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '28306'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=345
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:02:37 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B0%8F%E8%BC%9D%E5%8C%BA%20%E5%A4%A7%E6%B5%B7%E6%96%97%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:02:38 GMT
      Expires:
      - Fri, 24 May 2024 13:07:38 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=216
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Fri, 24 May 2024 13:02:38 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%84%AA%E7%94%BA%20%E5%B0%8F%E6%9F%B4%E7%94%B0%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:02:38 GMT
      Expires:
      - Fri, 24 May 2024 13:07:38 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=245
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Fri, 24 May 2024 13:02:38 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8C%97%E5%BD%A9%E8%8A%B1%E5%B8%82%20%E8%A3%95%E5%AD%90%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:02:39 GMT
      Expires:
      - Fri, 24 May 2024 13:07:39 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '34989'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=378
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:02:39 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%9D%BE%E4%BA%95%E9%83%A1%20%E5%8D%97%E5%89%8D%E7%94%B0%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:04:18 GMT
      Expires:
      - Fri, 24 May 2024 13:09:18 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '25340'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=366
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:04:18 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%A5%BF%E6%9D%91%E5%B8%82%20%E6%9D%B1%E6%9E%97%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:04:19 GMT
      Expires:
      - Fri, 24 May 2024 13:09:19 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '16484'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=299
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:04:19 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E4%B8%80%E8%BC%9D%E5%B8%82%20%E9%AB%98%E6%A9%8B%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:04:20 GMT
      Expires:
      - Fri, 24 May 2024 13:09:20 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '24264'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=343
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:04:20 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%A5%BF%E9%81%BC%E9%83%A1%20%E5%A4%A7%E8%8E%89%E5%AD%90%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:04:21 GMT
      Expires:
      - Fri, 24 May 2024 13:09:21 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=441
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Fri, 24 May 2024 13:04:21 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%B0%E5%AE%AE%E6%9C%AC%E5%B8%82%20%E7%9F%B3%E7%94%B0%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:07:12 GMT
      Expires:
      - Fri, 24 May 2024 13:12:12 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '25461'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=338
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:07:12 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%B0%E7%BE%8E%E7%A9%82%E7%94%BA%20%E5%B0%8F%E5%8D%83%E5%B0%8B%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:07:13 GMT
      Expires:
      - Fri, 24 May 2024 13:12:13 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42402'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=481
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:07:13 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E4%B8%AD%E4%BD%90%E3%80%85%E6%9C%A8%E6%9D%91%20%E8%A5%BF%E6%9C%A8%E4%B8%8B%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:07:14 GMT
      Expires:
      - Fri, 24 May 2024 13:12:14 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2165'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=308
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE3Ni0wMDAyIOadseS6rOmDvee3tOmmrOWMuuahnOWPsO+8lOS4geebru+8k++8kuKIku+8ke+8lSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS43NDEzODM4LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS42NjE2MDQ2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzQyNzM1MTc5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY2MzExMzg3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1Ljc0MDAzNTUyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS42NjA0MTQyMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlpKnnhLbmuKnms4kg5LmF5p2+5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDg4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDYxNjE1Mzg1MjgxODEyMzQ3NTVcIlx1MDAzZeWkluWckuWwhuS4gOmDjlx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlprcXpIMlFNVGhIS1ljRmw2akFRZFUxYjE5aWtoZzdtMGdlZE94dmlUVERWaXBwNWxtRzVoYTFSczA4dEVlNTBOSVZtaTU2dTQxdjU2eXNGTkczcWtvM1F0SnF6anFBekw1WGJnZkxyZEkxdzFvYUpQN3o1Rmg3dk1yOVhEd1BMdkRLUXlhdnNBN3JqQzZmRG9DZkllSW8xeGZJMHEydlJBZ21iQzQyM3ZOaFZnVXYiLAogICAgICAgICAgICAgICAid2lkdGgiIDogODgwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKWTJKWDdCSHRHR0FSYk9IeG9ZRnNtZFEiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJQTVI2K0hKIOe3tOmmrOWMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WFBNUjYrSEoiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSlkySlg3Qkh0R0dBUmJPSHhvWUZzbWRRIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJ0b3VyaXN0X2F0dHJhY3Rpb24iLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxODY5CiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0=
  recorded_at: Fri, 24 May 2024 13:07:14 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E4%B8%AD%E4%BB%8A%E4%BA%95%E7%94%BA%20%E7%9B%B4%E6%A8%B9%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:07:15 GMT
      Expires:
      - Fri, 24 May 2024 13:12:15 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '3583'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=286
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjYzNC0wMDYzIOWliOiJr+ecjOapv+WOn+W4guS5heexs+eUuu+8mO+8ku+8liIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC40ODUzMDcyLAogICAgICAgICAgICAgICAibG5nIiA6IDEzNS43OTMzMjIxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNDg2NjI4MjI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM1Ljc5NDY3MDUyOTg5MjgKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjQ4MzkyODU3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS43OTE5NzA4NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmoITmuKnms4kiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzNDU2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDAyNTM0OTQzMDAxODY5ODY2NTFcIlx1MDAzZVNoZW5nIEd1b1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlprZVRuS2Q1cTd6Mkl6MERPNm9tR0RjdUFoa1dJUUVkLUt0WDhLMmFCSnhjT0NpeEx5NXZjUDRHbDR0bHNhYzVENmZWZ21oU3ExUUk3NnFfamsweEpDS1JETC16alAwY2Jvci1rOEljbldEbk9YUjNnbnVFVFZ2V05MVXFfNUdQNUVuMEdkUFFQN2o4RGc3QVZrcHdyUjY2QTZqYmNmX0hlcFpTS2hUVDdwdG9lUFMiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDYwOAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSmZWNGZDdG5NQm1BUjV2ZkllY0s3NFowIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiRlFQVis0OCDmqb/ljp/luILjgIHlpYjoia/nnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlFGUVBWKzQ4IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSmZWNGZDdG5NQm1BUjV2ZkllY0s3NFowIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJ0b3VyaXN0X2F0dHJhY3Rpb24iLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxMjUKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJDTE9TRURfUEVSTUFORU5UTFkiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjYzNC0wODEyIOWliOiJr+ecjOapv+WOn+W4guS7iuS6leeUuu+8keS4geebru+8lOKIku+8ke+8kiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC41MDY4NTgyLAogICAgICAgICAgICAgICAibG5nIiA6IDEzNS43ODk1MTEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC41MDgyMDc5Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzkwODYxMjc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNTA1NTA4MzIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM1Ljc4ODE2MTYyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuiYh+atpua5ryIsCiAgICAgICAgICJwZXJtYW5lbnRseV9jbG9zZWQiIDogdHJ1ZSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKc3g2cGtOZ3lBV0FSenBvZ1hGeGYyNlUiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJHUTRRK1BRIOapv+WOn+W4guOAgeWliOiJr+ecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2UUdRNFErUFEiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSnN4NnBrTmd5QVdBUnpwb2dYRnhmMjZVIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDAKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Fri, 24 May 2024 13:07:15 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%86%85%E7%94%B0%E5%8C%BA%20%E5%8D%97%E4%BA%95%E4%B8%8A%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:09:37 GMT
      Expires:
      - Fri, 24 May 2024 13:14:37 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42142'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=431
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJuZXh0X3BhZ2VfdG9rZW4iIDogIkFVR0dmWm0tcWhkY0NySHl1OVlKRHhqVU93NVJ5QnlwN3RDUjNfTTcydWRSU1Nnd0VsNkFrM0pXT1hwLXRwU1d2YlptMHhtdTEzd0lJSXFkOVQ5bkJZSUFfYVRNXzlZNTIwRXN3ckZBMUxEV3JFMDlvZENqZXI3LVYyZ1BFR0psRVNtdlg1QjVoSWNhT0dMSHl6YnZITHFTc1pvQjQyQUliMmpTTGx2Q2tfNFlXVjV1ZWU1d2l3R1E0ZDVwSDZsNnlPSEg1ZlM3WnNlZUYtcHU5blhLdFE4SG8tTEE0T3VFdndVR0k5RGp5OGpScUN0TTZPOU00Y0o5aXVRMFBMVDY0S2dEVWFLV1N3eDBaZ3JfTk1zZUN6V1Bfb0paYTF1SEZqMTA1QXNFbjdJdjByTUlkeDBPa2d6cXk5NW9VV2p2dmxhM1U3MkFQNF9NTm9fMmhWb0d2Z0ZybVhtUy1QY0h5c0wtdnEzMHVCM28wVTg5NFA5YndpdVdreXRuaEswZnJfclBtTnNjN0V5T3NiOWxpY09qWS00SDI2cGFqdDM2UWFEMHQ0d2giLAogICAicmVzdWx0cyIgOiAKICAgWwogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIxMzAtMDAyNiDmnbHkuqzpg73loqjnlLDljLrkuKHlm73vvJTkuIHnm67vvJPvvJDiiJLvvJUg77yR6ZqOIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjY5NDMyMTIsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljc5Njc4MzkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42OTU3NDUzMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzk4MTI4NjI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjkzMDQ1NjcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljc5NTQyODk3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIlNBVU5BIOmcp+WumSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQwMzIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMDY2NzQ5OTE3NTQ2MzMzNzAzM1wiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlprc2J5QU1PZFZWdWFZVlVqN3dRaFJHWFRielo4V3JBWlJKclpsY0JxREROeW5NcE9wVlR1UFNPckY3NzNwaEZjSmVFYXpmODA2blplQzFteDFCVXFzZDE4WEEzd3pMdWtuWU5wbW9XcVFrdlNxRnlhRlRJN0JHSzdQb1I3bGJ6SWFERl9WUlE4c2tacDkzUG5LNHZPZWNmT0l2dmFKWWN1TFNoNU5VOU1wUl9Vc2YiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAyNAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSjY2RHhoVnlKR0dBUmw2LXZJSTJvVkhJIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiTVFWVytQUCDloqjnlLDljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hNUVZXK1BQIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuOSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSjY2RHhoVnlKR0dBUmw2LXZJSTJvVkhJIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTI3CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjEzMC0wMDEzIOadseS6rOmDveWiqOeUsOWMuumMpuezuO+8kuS4geebru+8luKIku+8kyDnrKwx6I2S5pyo44OT44OrIDFGIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjY5ODE5MjgsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjgxMTk3NzUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42OTk1MTIxNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODEzMjg1Nzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjk2ODEyNTIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjgxMDU4NjEyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCteOCpuODiumMpuezuOeUuiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQwMzIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMDc5NDQxMzgxMDMwMDUwMjM0N1wiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlprR2U4bC1EaU15YldQclc4dVBPZHd3RHhPUWhfcHdSOHVMSlpuUGVBbDFES2lTTHZ4MWcwRll2dkhjRVo4SGlEVHlGZk5SM1ViM2JfUkRyV2wzbDNxMnpVc284SlVVaG1Jb0JHa3ZvMGNscUt4WlBJNlZxZEJnY1paS3hkaFRjblFMY2JFMXY5SlJWZG9fSEpISkdVNlRrTGF2bGFRcThOS00zNDNIY0pSeFlVR1oiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAyNAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSng4ZXJ1eW1KR0dBUkptdzBGeTVVRFc4IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiTVJYNis3USDloqjnlLDljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hNUlg2KzdRIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuMiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSng4ZXJ1eW1KR0dBUkptdzBGeTVVRFc4IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMzQxCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjIwNi0wODEyIOadseS6rOmDveeosuWfjuW4guefoumHjuWPo++8lO+8kO+8ke+8leKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS42MjgyMTUzOTk5OTk5OSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNTE4MDkzOQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjYyOTgwMTcyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS41MTkwODY5Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42MjcxMDIwNzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNTE2Mzg3MzIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi6Iqx5pmv44Gu5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE2MjQ3NzAwNTYyNzIwNTc5MjkxXCJcdTAwM2Vhb2l1bWk3Mzc3XHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm5tNVZhVFduNFB2NDl4R2doVmE0Y0ZGQnAzLVNiME9YVFRrQ1MtQm5neTlGVGF4dTBRVWN0TWRFN2dOVVpnZVNrb0h5OHVxVkhrekJrWHp5SURIMDR4cFp6cE51ZGxvX1JyckJLTEdJWC1SeG1zMF9QOUVWOFphemdNUndTV3Y2c2k1dE9HQ2dKb0lNUkRlNFBvaEFkRXJUdU8xNHpZdURCVUpKVE9GTlMtMXdmViIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKdFEwRUFBRDdHR0FSRHZHMjdqZ0hRSWMiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJKR0g5Kzk4IOeosuWfjuW4guOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WEpHSDkrOTgiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy43LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKdFEwRUFBRDdHR0FSRHZHMjdqZ0hRSWMiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTk0CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjI3My0wMDA1IOWNg+iRieecjOiIueapi+W4guacrOeUuu+8keS4geebru+8l+KIku+8liDjg4njg6rjg7zjg6DoiLnmqYvjg5Pjg6sgN0YiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjk4OTc3NCwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuOTg1ODEyNAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjcwMDMwNDEyOTg5MjcxLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS45ODcyNzAyNzk4OTI4CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42OTc2MDQ0NzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuOTg0NTcwNjIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAiUmU6IFBSSVZBVEUgU0FVTkEiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDMyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTI0OTQ4NjE4MTg0ODA1NDk5NzlcIlx1MDAzZU5hb2hpdG8gVWV5YW1hXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmtsVVFtVnpqWDhVang0eGpjQ0lhYVpORGFMVC1xNDl2SUpZQm50VTVBNGNDTjFsdlgyS043RVM0UjYwamd1amxRT1hUWUM3VmRTcWoxNWZsZHNNVzdGQ3hCYjRENnE4VnRjWk1nTms3WEt3eU9YV3pNODhFMXcxbXpQUF92d3ZmVmw4bm9jTkE4bmtvbGNycWdnNEQ5QTE4U25pSnlmYW1oZ18tR2RJWkRxUWpWOCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzMDI0CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKQldXTGFZNV9HR0FSRGlsNXh6MDh5Z2ciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJNWFhQK0g4IOiIueapi+W4guOAgeWNg+iRieecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WE1YWFArSDgiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC42LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKQldXTGFZNV9HR0FSRGlsNXh6MDh5Z2ciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAzNwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI0NzAtMDM0MyDmhJvnn6XnnIzosYrnlLDluILmtYTmsLTnlLrmtYTmsLTnlLrkvIrkv53ljp/vvJPvvJfvvJYiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuMTIyNDY3LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNy4xMzYyMTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS4xMjM3MTA5Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMTM3NTQ1NDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuMTIxMDExMzIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM3LjEzNDg0NTgyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuernOazieWvuuOBrua5ryDosYrnlLDmtYTmsLTlupciLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA2MDAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMTc0NDgwNDI3MTYzMzkxNzY5MlwiXHUwMDNl56uc5rOJ5a+644Gu5rmv6LGK55Sw5rWE5rC05bqXXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmtEem5pNzlQUTItelVETlhGNkRsQTM0aG9wMW4ySXBweVQ5dkkwTEN5ZFJ0UnRoYmJZYjNxVHZFSHZsZm4wLTZpN29lZDJ6RjlKbHdUZ0JDZml5UktkRld5Nk9IYlhHZS1GYk9BUW1IZXFFNVYyV0VSZHNpVlpBd1VueWN0N19kNGxlYkZONnV6STdlZU81QkhEZUM2Vmc2NUJQRDM3VUZYRTdzTEQ4WjJMYzRvQiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA5MDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUowMFVBNHRkZkEyQVJwZkE2SVpydkZmayIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjQ0Q1ArWEYg6LGK55Sw5biC44CB5oSb55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdWNDRDUCtYRiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUowMFVBNHRkZkEyQVJwZkE2SVpydkZmayIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjE1NQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI2MDEtODQ1MyDkuqzpg73lupzkuqzpg73luILljZfljLrllJDmqYvnvoXln47ploDnlLrvvJLvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTc4MjUsCiAgICAgICAgICAgICAgICJsbmciIDogMTM1Ljc0MDUxOAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk3OTUzMTEyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS43NDE4ODAxMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC45NzY4MzE0NzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzM5MTgwNDcwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi4pGg5pet5rmvKOWNl+WMuikiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA1NDIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNTk3Mjc0MDUwNTk0MTQzODQ4OVwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpsb1JlUFE3eFhmWGxuR0dSSVRJYmtXeXMzVmc4TnZ1SXY5aGg1aUR2Qk9JN0NUdENvUXVzalZEc3VuaF9hQThjWk5YOXVfdE5ualhndF9CbUZLZ0lVaXVMcDV4bVdNVHRfY3gtR0dfWHE2VlhIWlJiWTFmckdITHZhNVdBM3ViSlVBOWJTVUVLYWNUeTdnZklWOVBBUFNLLVgySlV5WWVQa2ZSR2l3NTA1TkVLUUQiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDA1CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKOVM1ckFROEdBV0FSMVdPN3ViblFaWDAiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJYUEhSKzg2IOS6rOmDveW4guOAgeS6rOmDveW6nCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2UVhQSFIrODYiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKOVM1ckFROEdBV0FSMVdPN3ViblFaWDAiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxODgKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMjk5LTE5MDEg5Y2D6JGJ55yM5a6J5oi/6YOh6Yu45Y2X55S65YWD5ZCN77yU77yT77yVIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjE0ODE1OCwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODMxMjc0OQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjE0OTUzMDI3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS44MzI2NzYyMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS4xNDY4MzA2MjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODI5OTc2NTcwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44KG44GG44G/IFNhdW5hIENhZmUiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogZmFsc2UKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDAzMiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA2MzYxMzc5NjkyMzA0NDU2OTEzXCJcdTAwM2VUYWt1IE5ha2FuZVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpsakRrM2hTQTRXb1Zwc1MtYkhnVU9ZckhtN1Y2bm1PUGhKX2VqM3FNY1R0cGxNRlJXQVBGOF9kQ3FBU2o0SzVvS2w3TEZQc00wc2J6Uy1nV0J5MzFqOWoteGc2Z1pqYU85TWNBRXZhenNuSGVqNHdHQ2todjFjcGh5WmszNkJzSi11VG53YldfZE0yZVFxSFk5UEp4ZEhyU0FzeEh1WlNnWGpORkp5aXFYRmNod3ciLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAyNAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSlphSHdSdDhiR0dBUkRxLTR0T0RRbVNFIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiNFJYSis3RyDpi7jljZfnlLrjgIHljYPokYnnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1g0UlhKKzdHIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSlphSHdSdDhiR0dBUkRxLTR0T0RRbVNFIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogODgKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNjAxLTgwMzMg5Lqs6YO95bqc5Lqs6YO95biC5Y2X5Yy65p2x5Lmd5p2h5Y2X55+z55Sw55S677yT77yVIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk3MjYwODYsCiAgICAgICAgICAgICAgICJsbmciIDogMTM1Ljc2MDU3ODUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC45NzM5NjA4Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzYxOTMzOTc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTcxMjYxMjIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM1Ljc1OTIzNDMyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuefs+eUsOa5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQyMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwODE2MTg1OTczNzgwMjU4MzUyMVwiXHUwMDNl44Gq44GL44GY44G+44Gy44KN44GXXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWms4c2dfSmNPMVJVMUxJa0VTOHNmNmdyZjRBS0pQU2ttSEUyM3Z0eHZ3S3ViU0l5Q2dRMTVxc1gxUFFvVlItLWpEZU5YblJXdUZpbGs3MlNIV20yNFZyeXFEMUdtNzRVZWtROFg5SFdoWHNmQWdacjNIZ3Vra3h1Z0FzbEhGeXNXV2U0N29PLXFhZGZIT1I4M3NSM1FZNmVETGt2RUFFVUtpR0I3RDZxSk5jN2VzIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDU2MzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpBUUI4RFZBUEFXQVJNaXFTd2h4LVFzNCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlhRRjYrMjYg5Lqs6YO95biC44CB5Lqs6YO95bqcIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZRWFFGNisyNiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjEsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpBUUI4RFZBUEFXQVJNaXFTd2h4LVFzNCIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA0MAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI2MTItODEyMiDkuqzpg73lupzkuqzpg73luILkvI/opovljLrlkJHls7bluprnlLPnlLrvvJHvvJLvvJHiiJLvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTIyNzM2MywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzczMTE3OAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjkyNDE2NTM3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS43NzQ0NjQ1Mjk4OTI4CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC45MjE0NjU3MjAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzcxNzY0ODcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAiVEFOQUtBLlNBVU5BIiwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTUzNiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE2ODUzMTUxNDkxNzM1MzM5OTA1XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmx1bWlZdEkzNG9DSGxhR2V3aHhSajZsLVk2N3FPV2ZnNWxpVWFwaUhIdFM2enhyUVVwdk44eU1MVDRObFZxU1hWcTQxUlRCR3FxOVlSd3NrckdocEhkeFQ3bDBFT3htOURCQmVWZXhxclhCWGc1YzQwcVNDbTdpZkVlYndNV185aEFSSklObk5rVnlPSnhFN0Q3c3Q0b28tNnIwUDM5WU5FcWt6dzJ0Q01oM3dObiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyMDQ4CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKZ1ZGdUpERVBBV0FSLW5OOFlMUm9jNE0iLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJXUUZGKzM2IOS6rOmDveW4guOAgeS6rOmDveW6nCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2UVdRRkYrMzYiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSmdWRnVKREVQQVdBUi1uTjhZTFJvYzRNIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiYmVhdXR5X3NhbG9uIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJmb29kIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIyNDMtMDEyMSDnpZ7lpYjlt53nnIzljprmnKjluILkuIPmsqLvvJLvvJfvvJXvvJgiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuNDQ3NjM3NywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuMjg4MDcwNgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjQ0ODk0MjkyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS4yODk0Mjc0Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS40NDYyNDMyNzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuMjg2NzI3NzcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAiU2F1bmEga290YSBMRVBPIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDE3OTksCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMDMyMTg0MzY4MzU3MTExMzQ0NlwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpsV1d5SmhGcTlncHdObGl6d1oxYV9vOGdjMU54cUM5UUNDN2o1QVgwOGhHclBuYUZvWUdiNXNYaFVrUGNtS1dRWlJTTHp5ZTFESjhseVZSSlhyY2d0VmFlT0xlLTcxOHZsYkh0Z2RudkFqRVhsb0lmSVU4VjhXdXVFMHZJZV81ZUk2cUZBVlZjLVhGVWVzQkI0V09zSG8teXpJMEZ6bGp6UVRHbk5LcFJVVC0wUWciLAogICAgICAgICAgICAgICAid2lkdGgiIDogMTQ0MAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSmxiUXJXdVlCR1dBUjBxZ0dXQWdPY1lzIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiQzdYUSszNiDljprmnKjluILjgIHnpZ7lpYjlt53nnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hDN1hRKzM2IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSmxiUXJXdVlCR1dBUjBxZ0dXQWdPY1lzIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMzkKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNjEyLTg0MjYg5Lqs6YO95bqc5Lqs6YO95biC5LyP6KaL5Yy656u555Sw6Z2S5rGg55S677yR77yT77yQIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk1NzIzNSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzUxMzE4NgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk1ODQzNTQ3OTg5MjcxLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS43NTI2MjE4Nzk4OTI4CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC45NTU3MzU4MjAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzQ5OTIyMjIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5LyP6KaL5Yqb44Gu5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzc5MiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE0MzA4NDEyNTc2MTY5ODg2MTQ4XCJcdTAwM2XkvI/opovlipvjga7mua9cdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabU5hY0l2S25BLW81ZkIyZUFqV29MRkx1b213TlIyQXNEYXdETFFDTFR4TXp3R21IVTI1dDluaG8zU2htV3Z4UUVxNF9fZXJOU0pwVzRVNE4xM1gxOG9Bb2Q4VGl0TWxBazZ5NU8wVkNDS0NxdURmRHBEckNmZ0psNUJ3cE1zcmtoNDE1WmdXQUJtejZ6bEVtQTIwenVHOENnd1ZoOEZMMUdQUWQ1eUZIX212Yi0wIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDUwNTYKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpaWmliam9vRkFXQVJTREk1NF9saW9qTSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlhRNDIrVkcg5Lqs6YO95biC44CB5Lqs6YO95bqcIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZRWFE0MitWRyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjUsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpaWmliam9vRkFXQVJTREk1NF9saW9qTSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAiaGFpcl9jYXJlIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJyZXN0YXVyYW50IiwKICAgICAgICAgICAgImZvb2QiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxNDMxCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjYxMi0wMDI3IOS6rOmDveW6nOS6rOmDveW4guS8j+imi+WMuua3seiNiealtealveeUuu+8l++8l++8leKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC45NTUzMTY4LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNS43NzEwMTk5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTU2NjY5MzI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM1Ljc3MjQzNzUyOTg5MjgKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk1Mzk2OTY3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS43Njk3Mzc4NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLou43kurrmua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDMyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDY1MzA0NTAxMDcyMjQ2MDI0NTRcIlx1MDAzZeWkp+e+veWwhuijlVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptb200LXpVcGJNUWJLM1J1cE5SX04wS0ZaemdqSHdUNlVkd0lUbjhQZjN6cHN0WjcxekthcVFHYmhHZ1BjZWhNZ0RjSU9vZE1iTW5JN1lZSWJGU2RHMTROakE3THRVSmJ1TzNZWVRZdHlJYXFNVzVBajQtUFdoNFM5ZExTb0p0dnp2SDBJdFBvcEtxVG8wX3pOSFhkemxFRnZxZ1U1LV9ickJqcWx3Zl9HV2FTTDUiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAyNAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSi1aVHdUSE1QQVdBUl9yRkhwMVNteVgwIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiWFE0Qys0OSDkuqzpg73luILjgIHkuqzpg73lupwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlFYUTRDKzQ5IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuMiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSi1aVHdUSE1QQVdBUl9yRkhwMVNteVgwIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDYwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjYwMS04MDQ0IOS6rOmDveW6nOS6rOmDveW4guWNl+WMuuadseS5neadoeaYjueUsOeUuu+8ke+8kCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC45NzY0MDI5LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNS43NTk0NzMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC45Nzc3MjgwNzk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzYwNzkzNjc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTc1MDI4NDIwMTA3MjksCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM1Ljc1ODA5NDAyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuaYjueUsOa5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTA3MTUzNjU2MjQ1ODYwNTIxNzFcIlx1MDAzZVdpbmcgS1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptSFRRdGMyVEYwTDVJRi13aWtLemRFeXZzdnRGRS1MajdfRzI2STJmR29uWkR4ekVXZGRfLWRyVzM1Z1k0bkdpa0xGRFlBRE00RXAtZ21vNl9fNmdUQ2R5M3BaTEN5UHVmX1NvS3BUZktoU3U3U1ZjT2xpNDZpRllQaWhqaFBONkxYTkRPYlppUk1BellDTko2SlEybWpDRklaUEVKdlVLNVE2UjJUQTdDRTVmYmMiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSm54aGVMRklQQVdBUm1hWTVfdXdtd0pzIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiWFFHNStIUCDkuqzpg73luILjgIHkuqzpg73lupwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlFYUUc1K0hQIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSm54aGVMRklQQVdBUm1hWTVfdXdtd0pzIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDgzCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjYwMi04MzE5IOS6rOmDveW6nOS6rOmDveW4guS4iuS6rOWMuua6neWJjeeUuu+8mO+8kyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS4wMzA4MjI3LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNS43NDAxMzk0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuMDMyMTczMjI5ODkyNzEsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM1Ljc0MTQ3OTMyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjAyOTQ3MzU3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS43Mzg3Nzk2NzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJzYXlva2EiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDMyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTUzMTQwNjY2NzUzOTY1MzQ3NjZcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabWc4SEdfNDFIME9CMmhpdi1hVTNtQ1JvRmtCVXJDZmh5VTZTZkplbFlaTkxkSWFGRkZkYm84X0psVnB6T0h0MC1EZ1pzaEN1UXRGa25hbjNDczJiQWxNbXpyWC1ITVFKa2o5RVlSM1ZFNW03dkFBcklPaHJvSFRJLTh1endqWHlqLUZrVVBQVlVJUlVkaVliMTc5a1hGcnFHWVA3dHJYQTl3ZUVIN19FaTY3LUcyIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpTWm1IQXI4SEFXQVJVVmdQT2thNE1zZyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjJQSlIrODMg5Lqs6YO95biC44CB5Lqs6YO95bqcIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdRMlBKUis4MyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA1LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKU1ptSEFyOEhBV0FSVVZnUE9rYTRNc2ciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxNTYKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNjEyLTgzMDcg5Lqs6YO95bqc5Lqs6YO95biC5LyP6KaL5Yy65pmv5Yud55S677yT77yT4oiS77yVIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk0MzY3NjIsCiAgICAgICAgICAgICAgICJsbmciIDogMTM1Ljc1NzY0MDQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC45NDUwMTEzMjk4OTI3MSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzU5MDA0MDI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTQyMzExNjcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM1Ljc1NjMwNDM3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIum2tOOBrua5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDIwOTQ2MDUzNTc5OTYzNjAwNDNcIlx1MDAzZVdhdGFydSBOYWdhdGFcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabFdHUGtaWWpheDZGXzhwNHdHc3RtN213UXpNOUl5eEZxSThtRzA5SnlDVGdid0ZLdF9DQmFrWThScDF5dDVkOVllcE9sZXl2dGh1WXpST2ZMUHRjRGlRR3NkTENkN2l5U29nWHBtYkU1ajRnOUt0NHNKTlNzXzZldlgxMzdseU1aQWhXZXZHajlOQVNxbFhsVkR1Q09MM0dXVnh6ekpHX1FKRFd6MUNSVURLMWI1IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp2elRoRG9JUEFXQVIyOEpSWTBzOVJkbyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIldRVjUrRjIg5Lqs6YO95biC44CB5Lqs6YO95bqcIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZRV1FWNStGMiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjUsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUp2elRoRG9JUEFXQVIyOEpSWTBzOVJkbyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxMTcKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNjAwLTgyNjIg5Lqs6YO95bqc5Lqs6YO95biC5LiL5Lqs5Yy65LiD5p2h6YCa5aCA5bed6KW/5YWl5YWr55m+5bGL55S677yRIOODnuODs+ODh+ODvOOCouODkeODq+ODiOODl+ODrOODn+OCouODoOS6rOmDveWggOW3neS4g+adoSBCMUYiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTg4OTczNSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzUyMTc1NgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk5MDM5NjUyOTg5MjczLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS43NTM1NDg1Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC45ODc2OTY4NzAxMDcyOSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzUwODQ4ODcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAiTGl2aW5nIHNhdW5hIGJ5IE1PTmRheSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIwMDAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNjMwOTMwNjY2NjU4MDUzNjM1OVwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptdlJJNWxxVVo2M0Z0MmJLRjhTNUpLY0NPcDNzeFEtRC1YblU3aTlGU2ZpOE9CYjdTWGRtTWViM0EyTFB1ZGgwRWJSdnBLMnp2RnZiODNxQWNBZnVfNVdoM0lnVWhCbGp4U3gxcHl1elNFZGpoZ1pwcnFBQXM2ZFNTMUpqc1Q2Vmc3UkpPS1VCLUFCUzZZTkRkZ2dtQkd3Q2Z0RmczSzluQmR2UzM5akRCaGgySWwiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAwMAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSnMxUWxXdFFKQVdBUlJFNmJzZzlEUDF3IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiWFFRMitIVyDkuqzpg73luILjgIHkuqzpg73lupwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlFYUVEyK0hXIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuOCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSnMxUWxXdFFKQVdBUlJFNmJzZzlEUDF3IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNDEKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNjA3LTgxNTMg5Lqs6YO95bqc5Lqs6YO95biC5bGx56eR5Yy65p2x6YeO55m+5ouN5a2Q55S677yS77yX4oiS77yTIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk3ODIwNzIsCiAgICAgICAgICAgICAgICJsbmciIDogMTM1LjgxNDc5MjIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC45Nzk1NDg5Nzk4OTI3MSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuODE2MTAwMTc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTc2ODQ5MzIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM1LjgxMzQwMDUyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuadsemHjua5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzNDU2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDM1MDA4NTA0OTc0MDY5MTA5MDVcIlx1MDAzZee+juS9nOOBleOBj+OBqFx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlprbDB0STFHeXY5cFpNb0lIT2ZMa0tCNWhmZXNNRUo3anlYVUhlcFhXb1dYc2RkenJXejdtaXpjcTRhM3U5SmwyU01DTmRITWRORkJURzNBbTV6enk3cWVfMGw1c1ZVS1JEN2lGdlFDN01mUHhoeDVSanNwUTZCTUtWYVkyT0FJWjJWeVNMN0tKN2JSOVFwUXJVNjBaOWhFQjczTDRmVFBZbF9mZTQ5LVBQSGlFdnUiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDYwOAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSl9fLVBGWTRPQVdBUmFQSGkzX3F1SUQwIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiWFJINys3VyDkuqzpg73luILjgIHkuqzpg73lupwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlFYUkg3KzdXIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuMywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSl9fLVBGWTRPQVdBUmFQSGkzX3F1SUQwIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDUwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjYwNS0wMDkyIOS6rOmDveW6nOS6rOmDveW4guadseWxseWMuumemOeUuuS4gOS4geebru+8k++8me+8luKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC45OTUwOTQyLAogICAgICAgICAgICAgICAibG5nIiA6IDEzNS43NjkzNjMxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTk2NDUwMzI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM1Ljc3MDY1MzEyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk5Mzc1MDY3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS43Njc5NTM0NzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgrXjgrXjgqbjg4ogU0FTQVVOQSBTYWt1cmEgU2F1bmEgJiBTcGEgS3lvdG8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogZmFsc2UKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjI2MSwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA4MDQyOTE1MDgwNzA4ODE1MjA1XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm1LeTZlWWpHbHduY0xpM08ybGszblI4ZjlWc1VFcVkwdU5ZOGJnNy1XZzUway1EbzlfODcwSTRjRldMcG9ldVE3VWE2S3VOTmFZMVJPbTdLbUt5VktUMXFHZnRrOE9IcjdUbFcxYWRQd2VQTVBTdDN6SHRHeWI4cVU0aHl4allzQWo0UHd2MWRoUnFydENicExpTmhKQ3ZjLV9ZZ1RWcm9kcDlNUnZhYXcxMWswcCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzMDAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKYVVwZll3NEpBV0FSQ2R5MWw4X0E2aTQiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJYUVc5KzJQIOS6rOmDveW4guOAgeS6rOmDveW6nCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2UVhRVzkrMlAiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKYVVwZll3NEpBV0FSQ2R5MWw4X0E2aTQiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA5MQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI2MDUtMDA2NSDkuqzpg73lupzkuqzpg73luILmnbHlsbHljLrlj6Topb/nlLrvvJPvvJHvvJYiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuMDA2OTkwMywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzc2NjcwNAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjAwODMxNTgyOTg5MjczLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS43NzgwMTM2Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS4wMDU2MTYxNzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNzc1MzEzOTcwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5paw44K35rmv77yI44GC44Gf44KJ44GX44KG77yJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIxNjAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNzE0ODExMjU0MzU1MTgzMDQyMFwiXHUwMDNlTiBTdWd1cnVcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabjFZMXVEX0Z4N0RSOENzaTNrMmc2aklGQkxKMUpoWS1wWWk1T2p2b3NNaDFOMTlsNTk5UUU1OTJmUmp0WFpWbmFNTEpqN2N5Zk9RTmQ2S0tyb216YkctRHA1cXF2NlI2VkZiRlpTRG40Y3kwOEtZTkl2aE45VTR0cFMzYW5FR3FBVEwwSHBnOHpiWG9TTEphZG1WZVBRU01DQWExcG9lS2xZS1lFQlVLdUlMdFJoIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDIxNjAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUo4MUpXNi1rSUFXQVJEelNSSkQ1bVpxSSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjJRNEcrUU0g5Lqs6YO95biC44CB5Lqs6YO95bqcIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdRMlE0RytRTSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUo4MUpXNi1rSUFXQVJEelNSSkQ1bVpxSSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA5NwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI1MjAtMDgwMiDmu4vos4DnnIzlpKfmtKXluILppqzloLTvvJPkuIHnm67vvJHvvJLiiJLvvJLvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTk4MzkxNSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuODgzNzE1NwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk5OTcyMDkyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNS44ODUwODA3Mjk4OTI4CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC45OTcwMjEyNzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuODgyMzgxMDcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi6YO95rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTA4MCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAxMzA2Mjk3MzE3OTM1NzQxNDU4XCJcdTAwM2VUYWthbWFzYSBNaXp1bm9cdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zabk80NHRoeERKUldSZHdNcjhKd3JSLWR5Z2drZlE2Nmsyc1V2anpseVN0d1hrbHdMTmNadGR1OS1UVVZYNDZYU2IzbUNnQ19FbFlwUER6OFppUS1YS19mazdzT2d2SU1iZGljRTdvYjdjZ2pnMERaVU94MnNWQkpSTHdPUTZsaTZxZmd3QXFvekhQeFI2MC0tbU1jSEppSEVVMW04S2xleFJGOGFnV3B1NnNLc0ZwIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDE2MTYKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpZUWdvYXg4TkFXQVI5SE5KNExidkt4QSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlhWWE0rOUYg5aSn5rSl5biC44CB5ruL6LOA55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZRWFZYTSs5RiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpZUWdvYXg4TkFXQVI5SE5KNExidkt4QSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxODQKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Fri, 24 May 2024 13:09:37 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8D%97%E6%9D%89%E5%B1%B1%E5%B8%82%20%E5%8A%A0%E8%97%A4%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:09:38 GMT
      Expires:
      - Fri, 24 May 2024 13:14:38 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42403'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=586
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:09:38 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%9D%B1%E6%B8%85%E6%B0%B4%E5%B8%82%20%E5%A4%A7%E6%9C%A8%E4%B8%8B%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:09:39 GMT
      Expires:
      - Fri, 24 May 2024 13:14:39 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '6230'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=313
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:09:39 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B0%8F%E6%A8%B9%E9%83%A1%20%E5%8C%97%E8%A5%BF%E6%9D%91%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:09:40 GMT
      Expires:
      - Fri, 24 May 2024 13:14:40 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '10632'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=318
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:09:40 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E4%BD%90%E8%97%A4%E5%B8%82%20%E6%99%BA%E5%AD%90%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:10:04 GMT
      Expires:
      - Fri, 24 May 2024 13:15:04 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41489'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=431
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:10:04 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E4%B8%80%E8%BC%9D%E9%83%A1%20%E8%A5%BF%E6%9D%BE%E7%94%B0%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:10:05 GMT
      Expires:
      - Fri, 24 May 2024 13:15:05 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '1633'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=284
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE3NC0wMDcxIOadseS6rOmDveadv+api+WMuuW4uOebpOWPsO+8k+S4geebru+8ke+8lOKIku+8liDjgrvjgr7jg7Pjg4/jgqTjg6AiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzYxNjIwNywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjg0MTUyOAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1Ljc2MjkzNjIyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS42ODU0OTM5Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS43NjAyMzY1NzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjgyNzk0MjcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44Ot44OD44Kt44O844K144Km44OKIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSlV4Ujd1aW50R0dBUmNhbF9Gd0xIaDhrIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUU02TStKTSDmnb/mqYvljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hRTTZNK0pNIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpVeFI3dWludEdHQVJjYWxfRndMSGg4ayIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDIKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Fri, 24 May 2024 13:10:05 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E5%B2%A9%E5%B4%8E%E6%9D%91%20%E6%96%B0%E5%AE%89%E8%97%A4%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:10:05 GMT
      Expires:
      - Fri, 24 May 2024 13:15:05 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=252
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Fri, 24 May 2024 13:10:05 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8E%9F%E6%9D%91%20%E5%AE%AE%E6%9C%AC%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:10:06 GMT
      Expires:
      - Fri, 24 May 2024 13:15:06 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '30694'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=379
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:10:06 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%8C%9C%E6%9D%91%20%E5%8D%97%E5%92%8C%E7%94%B0%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:11:42 GMT
      Expires:
      - Fri, 24 May 2024 13:16:42 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '14270'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=351
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:11:42 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8C%97%E5%84%AA%E9%82%A3%E5%B8%82%20%E6%9D%B1%E5%A4%A7%E8%BC%9D%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:11:43 GMT
      Expires:
      - Fri, 24 May 2024 13:16:43 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2192'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=310
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiQ0xPU0VEX1RFTVBPUkFSSUxZIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIwNjEtMTEwMSDljJfmtbfpgZPljJfluoPls7bluILkuK3jga7msqLvvJPvvJHvvJbiiJLvvJIiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogNDIuOTcyMjI4NSwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDEuNTI4MTk1OQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQyLjk3MzY2NDg3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MS41Mjk2NDYxNzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA0Mi45NzA5NjUyMjAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDEuNTI2OTQ2NTIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi6Zuq44Gu5Lit44Gn44Go44Go44Gu44GGIOWGrOOBruODhuODs+ODiOOCteOCpuODiuOAjFNOT1dZ44CN77yI44K544OO44Km44Kj44O877yJIiwKICAgICAgICAgInBlcm1hbmVudGx5X2Nsb3NlZCIgOiB0cnVlLAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxMTA4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTc1NTIyNzk4ODExMjc0MDk5MzJcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabUJ4N0dDdG5jcEpwWEp2bFBrbXE1Rk41bHVZOHkyQUdqVHk4ZE41YTd0RE9PeDNMR1I0UDI0d0R4aUx1d21rYi1BeFEySTFnSngxZUlWelNsTUNzN2dLUVR2T2tYVzZyenAxelVTODJnbGhCVHI1TFVOLU1uYmlyano1eWQ4cktUcTUwcUVna1FtVGloY1dxcTJGbURhbnpDcjZpc3h4bDRiR1BQN1dfYURLOVlpIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDE0NzgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp6ZlFVWDJ2VmRGOFJHeUtHM3gySjlBcyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlhHQ0grVjcg5YyX5bqD5bO25biC44CB5YyX5rW36YGTIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkozWEdDSCtWNyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA1LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKemZRVVgydlZkRjhSR3lLRzN4Mko5QXMiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAzCiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0=
  recorded_at: Fri, 24 May 2024 13:11:43 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B0%8F%E5%A4%A7%E5%92%8C%E5%B8%82%20%E6%9D%B1%E6%A3%AE%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:11:44 GMT
      Expires:
      - Fri, 24 May 2024 13:16:44 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2179'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=282
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjI0Mi0wMDIzIOelnuWliOW3neecjOWkp+WSjOW4gua4i+iwt++8leS4geebru+8ku+8kiBJS09aQSA1RiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS40MzI4MTcwMDAwMDAwMSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNDY0MjAxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNDM0MTMxMjc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjQ2NTMyMjAyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjQzMTQzMTYyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS40NjI2MjIzNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgYrjgbXjgo3jga7njovmp5gg6auY5bqn5riL6LC36aeF5YmN5bqXIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE2MzEzNTcyMTU0ODQ4Njc3NTEwXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm5mVnJpT1ZxQUFOVTU1aXhGeHdEMHpQZUlPSXhqckFvVlBpQ19TMVBVdkduUlZFa3NaSlVGdzNaQUh0U0ZJTThCaE9VZUh1dllmOF9RenZVNWtEd2hTUUM5MjB5Y0F1bnFPZzljSDNDZlU1RHh1dU9kOERuenV4dDFsWUZPbTdSOWJxc0Q0alhPSjE2WUU0WFlzeEpxRm42ZjRVZzBFMzB4akRHalh0aGpsRDlVIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUo2eG1RNDc1V0dHQVI4bGIzUUdmak9OSSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkNGTTcrNE0g5aSn5ZKM5biC44CB56We5aWI5bed55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYQ0ZNNys0TSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKNnhtUTQ3NVdHR0FSOGxiM1FHZmpPTkkiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDEyMzgKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Fri, 24 May 2024 13:11:44 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%B0%E7%B5%90%E8%A1%A3%E9%83%A1%20%E6%98%8E%E6%97%A5%E9%A6%99%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:11:44 GMT
      Expires:
      - Fri, 24 May 2024 13:16:44 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '24690'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=323
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:11:45 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%BE%8E%E5%84%AA%E6%9D%91%20%E9%85%92%E4%BA%95%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:13:39 GMT
      Expires:
      - Fri, 24 May 2024 13:18:39 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '37881'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=546
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:13:39 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E4%B8%AD%E9%99%BD%E9%83%A1%20%E4%BD%90%E3%80%85%E6%9C%A8%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:13:40 GMT
      Expires:
      - Fri, 24 May 2024 13:18:40 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2101'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=432
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjk1Ny0wMjMxIOaWsOa9n+ecjOaWsOeZuueUsOW4guecn+S4re+8ke+8mO+8me+8k+KIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzOC4wMjY1NTQ4LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS4zMjc5MTA5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzguMDI3ODg3NDI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjMyOTI5MDI3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM4LjAyNTE4Nzc3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS4zMjY1OTA2MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgrXjgqbjg4rjg4jjg6rjg4Pjg5fjg4vjgqTjgqzjgr8iLAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTUyMjU2ODcyNDM3NzkzMzM2NzVcIlx1MDAzZemnv+S9kSBUYW1ha2lcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabkRKcVVHZm92RnJwd0VEQmZ2bW9weERZU3ZOVkFQY3NKYTNRalJPZWl4Ti1HQzFGZ3FZemR5cEo5Rnpab3dfYXQteS1TMlFqb2pZdTV2bnhQZjU1NFA3MkdVTlZhbThzaWl2NHRkbGFYV2pScDZoVEdQa1VJWHJ1djE0OVVZRlRia0VhbTNjbUhqQnRUdEFud3h5NTZmbHRjUUVad2RER19FNVc0Wl9ZQS1rMkJyIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUoxM1NkMkhvNWkxOFJDS1BtWW1vWm9nNCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjI4R0grSjUg5paw55m655Sw5biC44CB5paw5r2f55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UUNYMjhHSCtKNSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUoxM1NkMkhvNWkxOFJDS1BtWW1vWm9nNCIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDMKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Fri, 24 May 2024 13:13:40 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%A9%8B%E6%9C%AC%E5%B8%82%20%E6%9D%B1%E6%82%A0%E4%BA%BA%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:13:41 GMT
      Expires:
      - Fri, 24 May 2024 13:18:41 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2124'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=288
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjY0OC0wMDg2IOWSjOatjOWxseecjOapi+acrOW4guelnumHjuOAhe+8mO+8me+8mCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC4zMDU0NzQsCiAgICAgICAgICAgICAgICJsbmciIDogMTM1LjU3OTIxMjYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4zMDY4MzIwNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzUuNTgwNTc0ODc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMzA0MTMyNDIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM1LjU3Nzg3NTIyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWkqeeEtua4qeazieOChuOBrumHjCIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDcyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTM2NjM3OTI2NjYzNjUxNjk5NThcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabGtwSTNYelA4cFVQV3pDOWI5M1NuWElOc2VDOTVTeW5SLW5scnduQzZBNzU1RGRjQXplSXI4cnQtaGIyYTd5RW02TmhYVWFFQnR1RDI1TGNyTWxGaU5FWGFLVlI5alItdkNjLWJ1TUpSNWxJSm9zLVR1LVczeGVsUGl1QWFhNDJvdTlJdERycEw2eTVRdmJ1WnlVUUVRaEkxNTkzREhCSk1xN1dOeXpNYUpvNXNpIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwODAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpiNFJoYWdBcEIyQVJRLWU0WTZDOHRHQSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjhINEgrNk0g5qmL5pys5biC44CB5ZKM5q2M5bGx55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZROEg0SCs2TSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpiNFJoYWdBcEIyQVJRLWU0WTZDOHRHQSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxMwogICAgICB9CiAgIF0sCiAgICJzdGF0dXMiIDogIk9LIgp9
  recorded_at: Fri, 24 May 2024 13:13:41 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8D%97%E4%B8%89%E6%B5%A6%E9%83%A1%20%E9%99%B8%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:13:41 GMT
      Expires:
      - Fri, 24 May 2024 13:18:41 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41335'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=438
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:13:41 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%86%85%E7%94%B0%E6%9D%91%20%E7%BE%8E%E6%9C%88%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:15:07 GMT
      Expires:
      - Fri, 24 May 2024 13:20:07 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41998'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=382
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:15:07 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%98%BF%E9%83%A8%E7%94%BA%20%E8%97%A4%E6%9C%AC%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:15:08 GMT
      Expires:
      - Fri, 24 May 2024 13:20:08 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '26393'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=327
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:15:08 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%BF%91%E8%97%A4%E9%83%A1%20%E8%A5%BF%E8%BF%91%E8%97%A4%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:15:09 GMT
      Expires:
      - Fri, 24 May 2024 13:20:09 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '32828'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=356
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:15:09 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%BE%8E%E7%B7%92%E6%9D%91%20%E5%8D%97%E9%87%8E%E6%9D%91%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:15:11 GMT
      Expires:
      - Fri, 24 May 2024 13:20:11 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2170'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=345
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc5Ny0wMjAxIOaEm+Wqm+ecjOilv+S6iOW4guaYjua1nOeUuumrmOWxseeUsu+8lO+8lu+8kSDvvJEg44GC44GR44Gv44G+44O844KM5YaFIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDMzLjMxMjkxNjMsCiAgICAgICAgICAgICAgICJsbmciIDogMTMyLjQ0MjAzNDcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy4zMTQzMTAzNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzIuNDQzMzM3ODI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuMzExNjEwNzIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMyLjQ0MDYzODE3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOBl+OBiuOBrua5rybjgrXjgqbjg4oo44GC44GR44Gv44G+44O844KMKSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyMjY4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTY3OTA1Mjc2NTI2MDU2MDgwNDJcIlx1MDAzZW5va2kgb290YVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptNUtzakt5S2thTzRiVWRaU0k3LW5GQ0ozMXljSUFHY1I0YzVGSkxaeG9Jd0hmd0lNcF8tZkE1b0kta1Npb3czS0pvZDFON1plZmpwWHpoNFJxSGZLQkVFV01felRfeTJGeEdmd0hSaVdWREtEU0hLLTlYOHFyR1EzSlB6bkFRVHNvZ3pxQmwtS3dJenRmdXdSclZaVjNwUlpDX3BMOGVNbjJCOHotWW9zQjd5dUQiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSmhTeGxRZXFQUlRVUmNmMXlLSWE2d2VJIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiOEM3Uis1UiDopb/kuojluILjgIHmhJvlqpvnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNUo4QzdSKzVSIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSmhTeGxRZXFQUlRVUmNmMXlLSWE2d2VJIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDcKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Fri, 24 May 2024 13:15:11 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%97%A4%E6%9C%AC%E6%9D%91%20%E5%B0%8F%E3%81%95%E3%81%8F%E3%82%89%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:17:14 GMT
      Expires:
      - Fri, 24 May 2024 13:22:14 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=202
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Fri, 24 May 2024 13:17:14 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E7%BE%8E%E6%A1%9C%E9%83%A1%20%E5%8D%97%E6%8B%93%E6%B5%B7%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:17:14 GMT
      Expires:
      - Fri, 24 May 2024 13:22:14 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '38410'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=408
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:17:14 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A2%97%E7%94%B0%E5%B8%82%20%E8%A5%BF%E9%9F%BF%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:17:15 GMT
      Expires:
      - Fri, 24 May 2024 13:22:15 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '9406'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=437
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:17:15 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8D%97%E5%B1%B1%E5%B4%8E%E6%9D%91%20%E5%85%89%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:17:16 GMT
      Expires:
      - Fri, 24 May 2024 13:22:16 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2118'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=308
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc5MC0wMDMxIOaEm+Wqm+ecjOadvuWxseW4gumbhOmDoe+8keS4geebru+8luKIku+8ke+8liIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzMy44MzAxMTMyLAogICAgICAgICAgICAgICAibG5nIiA6IDEzMi43NTYyODA5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuODMxNDQ2Nzc5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMyLjc1NzYzMTAyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjgyODc0NzEyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMi43NTQ5MzEzNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmlrDplovmuKnms4kiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxODgwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDU3MjAzNjk3MDI2MDc0OTA5NjRcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabVh0SlZqdmtadkhsa0dBM3YtdWk3cl8wVmM0RG1pNDJfZWhfXzZUaWsxVmRtb2g3bDdiaVNkeFpOdlNac2hsRGp3V19oRUNHalZ6M0NhTkp6OHNzTWZ4aGNBQWxkbWtYZ2JhWjRpZlBRY1RmX0I5Y2RMOEsxOHdQRF8yTnBIQ0JHbFZOVXRCQ3EtLTBDQUsyTHUtSVg3S3FOYjFSc0FYUGdTT09uX3ljbmZHOE1hIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDI4MTYKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpHNXh4cW56dlR6VVJxTVEyYmRIQmFRNCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlJRSjQrMkcg5p2+5bGx5biC44CB5oSb5aqb55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTVKUlFKNCsyRyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjMsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpHNXh4cW56dlR6VVJxTVEyYmRIQmFRNCIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA0MwogICAgICB9CiAgIF0sCiAgICJzdGF0dXMiIDogIk9LIgp9
  recorded_at: Fri, 24 May 2024 13:17:16 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%9D%89%E5%B1%B1%E7%94%BA%20%E5%90%89%E7%94%B0%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:18:27 GMT
      Expires:
      - Fri, 24 May 2024 13:23:27 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '32422'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=373
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjQ0MS04MDc3IOaEm+efpeecjOixiuapi+W4guelnumHjuaWsOeUsOeUuuODqOODjuWJsu+8lu+8luKIku+8lu+8lyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC43NDE0MDc5LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNy4zNDc2NzU0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNzQzMDI0NTI5ODkyNzEsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM3LjM0OTQ0MjU3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljc0MDMyNDg3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNy4zNDY3NDI5MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLnlLfmgKflsILnlKgg44Kq44O844Or44OK44Kk44OI44K144Km44OK44O744K144Km44OK44OU44KiIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTkyMCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE1NTA2MjkzNjg5MTAxMzU1Mjg2XCJcdTAwM2Vub2JhdGExXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWms4MUVsdGZ5alJqU2ZlQzZzT1BjZ1U1bjJobDNneUZsQWZYdW9mVWRFQnVJUGp2NWRvMGpQVllMUlFSSDA3N1NxdlZPUWY1UG5XNXp1ZHRhZUpkWktFX1pla3VBTC1jMGxnOTF1M2hqRmxkYnpqZUNqLU1rMGpBMUpHTFFuWHpIVWxyVktiSkZnMWRJekh3MnFDTkk0SE1aSG5ieURLZmh1SU90NkRwMExGcEJySiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxMDgwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKOXdnb3FNUFJCR0FSV002ZGsyMElWUEUiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJQOFJYK0gzIOixiuapi+W4guOAgeaEm+efpeecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2VlA4UlgrSDMiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC4zLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKOXdnb3FNUFJCR0FSV002ZGsyMElWUEUiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyNjMKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNDQxLTgwNzcg5oSb55+l55yM6LGK5qmL5biC56We6YeO5paw55Sw55S644Oo44OO5Ymy77yW77yWIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0Ljc0MTYwODMsCiAgICAgICAgICAgICAgICJsbmciIDogMTM3LjM0ODIxODMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC43NDMwMjM4Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMzQ5NjcwNzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNzQwMzI0MjIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM3LjM0Njk3MTEyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIu+8iOacie+8ieODleOCqeODvOODhuOCo+ODvOOCouOCpCIsCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkZ5NHhxTVBSQkdBUkxqSnJxdmlLVlFZIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUDhSWCtINiDosYrmqYvluILjgIHmhJvnn6XnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlZQOFJYK0g2IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkZ5NHhxTVBSQkdBUkxqSnJxdmlLVlFZIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMgogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI0NDEtODAxNiDmhJvnn6XnnIzosYrmqYvluILmlrDmoITnlLrljZflsI/lkJHvvJnvvJMiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNzY1NzA2MywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMzYyNTkxNwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljc2NzEyODUyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNy4zNjM5MjYzMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC43NjQ0Mjg4NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMzYxMjI2NjcwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5Y2D5Lq66aKo5ZGCIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTQ3MywKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA2MTU2MDYxOTY2MzY3NzM0NTM1XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmtPX2g0UUZtU0VzZXRIQkxpeG1KWC1RekZNZFk5Ul9iVnh6bUlvS0Z5bnIybUs0V01WR2htc2Z3eWxZX2U1Wm16b0VGNHVNZG1INTk3ZlVWN0tRUEl6RDRMSUpBa0RMTTFCbEl0c1lXM05KVmM4bm9nWnMxYWpybGJvS1hUcFlSeG1xQWNhT2hra19MTElYSVZweGlrTldReEZpSjBxbTI2ZzN1NVpKZXJ6WlljMCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyOTgxCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKWVZCWjRnVE9CR0FSMUdBNmF3RFlzUXciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJROTg3KzkyIOixiuapi+W4guOAgeaEm+efpeecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2VlE5ODcrOTIiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy4xLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKWVZCWjRnVE9CR0FSMUdBNmF3RFlzUXciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTUxCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjQ0MC0wMDkyIOaEm+efpeecjOixiuapi+W4gueTnOmDt+eUuuS4gOaWsOabv++8ke+8k+KIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC43ODgzMTQsCiAgICAgICAgICAgICAgICJsbmciIDogMTM3LjM3NjY5NjIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC43ODk1NjE0Nzk4OTI3MSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMzc3OTI2MzI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNzg2ODYxODIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM3LjM3NTIyNjY3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIualtealvea5ryDosYrmqYvlupciLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDExMzY4MjA3NDYyMTQzNTAzMzBcIlx1MDAzZem2tOeUsOebtOW3sVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpsX1ZaVkhPejNjYjNkWVFSQjJ3ZzFzSnBHU2pmb016ZWhlQm02NFdTMWVwWEg3dXAyb1JFTWxOcW5YdEQtU0xsck1ZMjkzMTIxSU1TdlJGeVd4SjRQUlB3cE5yUTZUVTNMRE9XQlNhekVZdXJrZHNmaXFVVU9NTnJ6bUFxdGdXZ24yeUJhUlJnd1ZqVDhPUlphTEVBc1NibGFGanZPQkNJV0t6QkFENGhFME11UzAiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSks5ZnE4dHZOQkdBUnZzbF9jVmdBTmcwIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUTlRRys5TSDosYrmqYvluILjgIHmhJvnn6XnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlZROVFHKzlNIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSks5ZnE4dHZOQkdBUnZzbF9jVmdBTmcwIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInJlc3RhdXJhbnQiLAogICAgICAgICAgICAiZm9vZCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDExMTIKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNDQwLTA4ODIg5oSb55+l55yM6LGK5qmL5biC56We5piO55S677yU77yXIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0Ljc2Mjk5NjksCiAgICAgICAgICAgICAgICJsbmciIDogMTM3LjM5MjI4NzUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC43NjQzNTk2Nzk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMzkzNjE4NDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNzYxNjYwMDIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM3LjM5MDkxODgyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuS6uuiUmOa5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQxNjAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNjAwMDI4ODU5NTE1Mjc5MTk3NlwiXHUwMDNlVGF0c3V5YSBIYXNlZ2F3YVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpsaWEzYlcwNkhuV0FaMEdzOTZZZWNtbHpYbFh4akhhS2tlOWNWX2U3SVR5cVZoT19naGJYLTh0dW5ibEQyeExWTVRzdDEtRnhWTzdoQzlvVlh2UkdUeUU1cnp5VTZpbVRNN1FrcTlxdXhYT3lSQnQ3aHFKMThjYURTRWpDNVlEajVqUXZZbTI5UTAtSzVzaDRHS002djZnWTJTa1A2UnZHdGMyUThoa01ZQ1hwWG4iLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzEyMAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSmxZWVFnM0xTQkdBUmRabHpyMWhpcnowIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUTk3Uis2ViDosYrmqYvluILjgIHmhJvnn6XnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlZROTdSKzZWIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpsWVlRZzNMU0JHQVJkWmx6cjFoaXJ6MCIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxMjYKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNDQwLTA4MzUg5oSb55+l55yM6LGK5qmL5biC6aOv5p2R5Y2X77yS5LiB55uu77yT77yR4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0Ljc0NDI1NTIsCiAgICAgICAgICAgICAgICJsbmciIDogMTM3LjQyNTIyMTEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC43NDU2OTY3Mjk4OTI3MSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuNDI2Mzc2MzI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNzQyOTk3MDcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM3LjQyMzY3NjY3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOChuOBruOChiBUT1lPSEFTSEkiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA1NTEsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNDQ2NjAwMTA5MzI4Njc5NDEyN1wiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpsTVRFRmlwdDdHUFFpM3FPeWZodGt3OTdZZGZIY1lnV09LVEFVOWZ0VzhRU3lqREF5bTA3S0tzNmVDa0lzOXN6eUJ3TGJ1cTlMN2VRN09GUTF5LVQ5dVBNTkpYTExzc2FBN1hFa2RVUm5hVDdsenZ0alZzRlk4QzhHbjJYc1JhYm5EWjVTQzB1bHktdHpBMVlOTlZuYlJwaUVTWXJJZUgyTV8xT1A2Y1NmYnVhT28iLAogICAgICAgICAgICAgICAid2lkdGgiIDogNTU3CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKWlEwWms4blRCR0FSeUxvVW1HZERZMG8iLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJQQ1ZHK1AzIOixiuapi+W4guOAgeaEm+efpeecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2VlBDVkcrUDMiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSlpRMFprOG5UQkdBUnlMb1VtR2REWTBvIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJiZWF1dHlfc2Fsb24iLAogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInJlc3RhdXJhbnQiLAogICAgICAgICAgICAiZm9vZCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDExMjYKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNDQxLTgwNzcg5oSb55+l55yM6LGK5qmL5biC56We6YeO5paw55Sw55S644Of44OO5Ymy77yR4oiS77yTIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0Ljc2MDMyNDQsCiAgICAgICAgICAgICAgICJsbmciIDogMTM3LjMyMzAxNQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljc2MTg2OTgyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNy4zMjQ0NzY5Nzk4OTI4CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC43NTkxNzAxNzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMzIxNzc3MzIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44Ki44Kv44Ki44Gu5rmvIEJBTEkiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogZmFsc2UKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTUzNiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEwNjEyNTU5NzcyMzI1MDYxOTc4XCJcdTAwM2Xnr6DnlLDlsJrluoNcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zaa3o1ci1PbmhDMmt3RWR6OHZJS1QxUElVT0pEeTI2ZUdFOG91eHVwOElRX1l4dWZ6RGRmOFVSRkxmMkY2cjVQSWtDdjJpWnRLUWtQa1c5UXZBQmpJYXN4NFdoQUlqVDNVUzVmSXRXQ3loWEk0NGVSUnhPV0hzQVZTWTU4VXBuTVd3ZnZ5MTBHdU9oSjVzVzB5WVN3cFNDVFBfY0VseU9SWUp5ZEtORGxncnpjN3NkIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDIwNDgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp6X1J2eFViUEJHQVJYbWZMSVRzZDdobyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlE4NkYrNDYg6LGK5qmL5biC44CB5oSb55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZWUTg2Ris0NiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjEsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUp6X1J2eFViUEJHQVJYbWZMSVRzZDdobyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNjkKICAgICAgfSwKICAgICAgewogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjQ0MS0zMzAyIOaEm+efpeecjOixiuapi+W4guadieWxseeUuiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC42NzU2MzYyLAogICAgICAgICAgICAgICAibG5nIiA6IDEzNy4zMjY2MTYyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjk4MDQ0NSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMzM5ODEwMwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjYwNjAyNiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMzA0MTAzOQogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlb2NvZGUtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5p2J5bGx55S6IiwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjkxOSwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE1MjM3NzE3NDM1MzE3MjYzNjA3XCJcdTAwM2VpbmMgdXByaWdodFx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptOEpkWmdtMWpHdDNxbXY1U0dPZHhmSDVkRjVoUXByTVl0Z2Vreml0cXkxVElkTXdQaW9mNThhRmNFZUU0WnZPd2w1X3FvRkM4X3ZBNWhvb2xPZlI2cGFOSmhCRkZfSU1xMmVZdERIZXh0Ullwdk9nc0NJV1VWUmVMdEJhalBROWlUZjRGQlBvUkVpRzFkYnBMY3d0N0ZBTHl4VXZodEhMY2VZcFh3WjI0S19PVEQiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzg5MgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkdfbkRDdERRQkdBUnlFS2FjemhiTWRjIiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkdfbkRDdERRQkdBUnlFS2FjemhiTWRjIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzdWJsb2NhbGl0eV9sZXZlbF8yIiwKICAgICAgICAgICAgInN1YmxvY2FsaXR5IiwKICAgICAgICAgICAgInBvbGl0aWNhbCIKICAgICAgICAgXQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI0NDAtMDAyOCDmhJvnn6XnnIzosYrmqYvluILlpJrnsbPmnbHnlLrvvJPkuIHnm67vvJLvvJbiiJLvvJHvvJAiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNzYyMjkyLAogICAgICAgICAgICAgICAibG5nIiA6IDEzNy40NTg4Mjk4CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNzYzNjQ4MDc5ODkyNzEsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM3LjQ2MDIyNDYyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljc2MDk0ODQyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNy40NTc1MjQ5NzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLnvo7lgaXlurfmurblsqnmtbTlsqnnm6TmtbQiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogZmFsc2UKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzQ1NiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA3ODA0MzA0NzkyNDgwMjI4MTI2XCJcdTAwM2XjgZXjgbjjgY3jgbLjgo3jga7jgbZcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabldTcHI4aW01NE03NGMzUTZjWkFpNWVWYVVxc1YtUjJ4bURlMEMtMmVvQ0JaOHNRckFMaFNZS0t2R25VQk5VQ3lOc0ZiSUxFdGd2UlZiVWlhWGYzMEhnU0tqT1FSZTZtRU9RNnhndGs1ZjFWY2Z0Z0pXSGdhaG9oRDJRXzJxcjA3T1duRGFEcEV4d05KT20tZ0xOWWEza2g5a1ppNzdIYzBrMXN2aEQ4WjhINTR0IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDUxODQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpFVFN4Szlnc0cyQVJXdHZGQUpZLUktOCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlFGNjUrV0og6LGK5qmL5biC44CB5oSb55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZWUUY2NStXSiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjIsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpFVFN4Szlnc0cyQVJXdHZGQUpZLUktOCIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI0NDEtODEzMiDmhJvnn6XnnIzosYrmqYvluILljZflpKfmuIXmsLTnlLrlhYPnlLrvvJbvvJfiiJLvvJMiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjk2MTUxNSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMzY1MDE3OQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjY5NzQ2MjY3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNy4zNjYzNzU4Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC42OTQ3NjMwMjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMzYzNjc2MTcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAiQkFDS1lBUkQiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyMzU5LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDA1MDQ3NjMzMjI4NDI5MzY4MjRcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2Zaa3F2cmtfbm5lbTBlcWxrLXFHeWdqTlRURkFUSHJSdjh3VHlHVVVnQzNVc0hhZ2dvTjRzVFlXSDBHOTEwbUNXd245bzVZT0NuR1RINS1YX3JfVGRwdmxOZlRHcWNjbm96Wm0teEI0UFg1UkJGdHNKT3ZCaUcyWkZtUWNrRzJybm1CZmpvUG1acmtReUN1anpBbk92OUlVMjUzWUVvREVRckwxbGxMREltSEhQY1haIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQxOTIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUoxUWg0ODNUUkJHQVJWYmNBeGZ3WWRodyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIk05VzgrRjIg6LGK5qmL5biC44CB5oSb55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZWTTlXOCtGMiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA1LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKMVFoNDgzVFJCR0FSVmJjQXhmd1lkaHciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI0NDAtMDg5MyDmhJvnn6XnnIzosYrmqYvluILmnK3mnKjnlLrvvJHvvJHvvJgiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNzY1ODcxNSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMzkwNTQ4NAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljc2NzIwMjMyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNy4zOTE4MjE2Nzk4OTI4CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC43NjQ1MDI2NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzcuMzg5MTIyMDIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2xvZGdpbmctNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzkwOUNFMSIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvaG90ZWxfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWkqeeEtua4qeaziSDjgaTjgaTjgZjjga7mua8g44OJ44O844Of44O844Kk44OzRVhQUkVTU+ixiuapiyIsCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDI4NjMsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMTk0ODQwNzcyMDA0OTYyNzAyNlwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlprX3Zna3o0UElsLWRQVVlHcWFoRVVzaHEyb0l6bkJ0cEZldFYzckZmVWxvcWxSQU1YWG5LRl9EYjNseXJzZ2p3T1VjVHBCQnNqbm9YTFViaVVCVG5JSFY2RXowQ0paZXZfVGZ0OVUzSkNfb2VYa1lRUWtKc3lnczlKTC05bzlLS2Qyb0FUVHNwakhHQTRXbHg1TDEzelRFNE82cWhWb3Q0MGJ1SXNRdXdPWE91TjgiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDI5NQogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkFSMG81R2ZUQkdBUjJ2ZEpCWjRBTThVIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUTk4Uis4NiDosYrmqYvluILjgIHmhJvnn6XnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlZROThSKzg2IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkFSMG81R2ZUQkdBUjJ2ZEpCWjRBTThVIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJsb2RnaW5nIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogODIKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNDYwLTAwMDMg5oSb55+l55yM5ZCN5Y+k5bGL5biC5Lit5Yy66Yym77yT5LiB55uuMTfnlao1IOWPtyBFWElUIE5JU0hJS0kgbm9ydGg4RiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS4xNzA0NjIxLAogICAgICAgICAgICAgICAibG5nIiA6IDEzNi45MDYxMjgxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuMTcxOTM4ODI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM2LjkwNzQ2NDQyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjE2OTIzOTE3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNi45MDQ3NjQ3NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJQcml2YXRlIFNhdW5hIEVYSVQiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxMTgxLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTgzMjY1NzAxMzk5OTU0MTk1ODdcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabW1fTWFfdWJtcjdUc0JJS1NzR1Q5VDZ0MGJHTTZhQ01lWjA0Z3Ria3E2bmcwZmF0UFpVVjVVTWRUTDZfRTNJZnhfa1J3akI2ajRzb2p6TE5TMTBnaDEyQklCRExha3htUEVSQjJzUFM3R0t3MnhZS1RhM1lGa1d2RVJCRjJtRUN5MmNhSW4wc25Qc3lUMk4wUlZDaWtKb0lYbzZSbFlYeHpqc0EzbFdrWGk0bEc1IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDExODEKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUplWjVNRVNSN0EyQVJ5MlRlemVhYXhxcyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjVXQzQrNUYg5ZCN5Y+k5bGL5biC44CB5oSb55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdSNVdDNCs1RiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjUsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUplWjVNRVNSN0EyQVJ5MlRlemVhYXhxcyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDI4CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjQyMi04MDM2IOmdmeWyoeecjOmdmeWyoeW4gumnv+ays+WMuuaVt+WcsO+8kuS4geebru+8ku+8leKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC45NTA3MzM2LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOC40MTM5MzUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC45NTIwMzU0Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzguNDE1MjE5Mzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTQ5MzM1NzcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM4LjQxMjUxOTcyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCteOCpuODiuOBl+OBjeOBmCIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNzAyODYxMjUxNzU3OTQ4ODA4OVwiXHUwMDNl5oKg5Lq65aSn55+zXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm42UDB3Tmt3TnV3WjN5anl0WVhDSXFzSTh0QU1oQVQxakN1YjRRX1ZNbkU3R05UVHNQVlAzV2YycXFtZTludlZ5LW9LYkJUMmxUeDFwZ1AyZkpYcG14MmIzd3JDWHMtbFJPZjBmYUtKN0wxank2R1VKYmdvWXZpTTR1RVg5OXAtN0Y2WFBmRHpSOElVYnpBcFhJcll3NFJITUR2eEtxZ1lhcGppeUJtUFgtbHRkQyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKYlROWHBqUTJHbUFSOGk4ZmREdHBadXciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJYQzI3KzhIIOmnv+ays+WMuuOAgemdmeWyoeecjOmdmeWyoeW4giIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2V1hDMjcrOEgiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC40LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKYlROWHBqUTJHbUFSOGk4ZmREdHBadXciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyMDY0CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjQyMi04MDY2IOmdmeWyoeecjOmdmeWyoeW4gumnv+ays+WMuuazieeUuu+8k+KIku+8ku+8kiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC45Njg1MTM3LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOC4zODczNDk1CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuOTY5ODU1Mzc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM4LjM4ODcwOTYyOTg5MjgKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljk2NzE1NTcyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOC4zODYwMDk5NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLms4njgrXjgqbjg4oiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA3NTksCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNjM1MjAzNTcxODczODcyMDUzM1wiXHUwMDNla2lrdW5vIHNhZWtvXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm43ZEp2cWVJSkRuM1RiQXV3eGJmRUlBUmw2d3phVmN6UDRBWldxU0NLQnM0Z1FXSzFxMmM4am51Zk5IZUZsLVFBbDVCSktYQWJqbVJVd25kZ0QzZm5jczFUNXZyVVdueFhCZUpSekZxQVJNRnhlWF9hRFdZMy1MMGFKODAxbFlGMmV6d2ItcXZBdkpjVzJrdV94WUpqLTU5SGJyZldoYW85WngtVWlXLXBkSVlpcCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxMDkxCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKQzFVOG9xcEpHbUFSeWpNX21pbHE3b0kiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJYOTlQKzlYIOmnv+ays+WMuuOAgemdmeWyoeecjOmdmeWyoeW4giIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2V1g5OVArOVgiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC43LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKQzFVOG9xcEpHbUFSeWpNX21pbHE3b0kiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyOAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI0NDEtODE0OSDmhJvnn6XnnIzosYrmqYvluILkuK3ph47nlLrlubPljJc4MCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC43MzgwNTUzLAogICAgICAgICAgICAgICAibG5nIiA6IDEzNy4zNzc3NTQ3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNzM5MzM1NjI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM3LjM3OTE5OTAyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjczNjYzNTk3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNy4zNzY0OTkzNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjg5vjg6rjg4fjgqTjgrnjg53jg7zjg4Tjgq/jg6njg5Yg6LGK5qmLIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDE2NTQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNTI1NDA0Mjc4OTg4OTQ0NzE5NFwiXHUwMDNl44Ob44Oq44OH44Kk44K544Od44O844OE44Kv44Op44OW6LGK5qmL5bqXXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmtoRUJLVUVSdy0wY1JYWjhJTDVBU1dPOFdnX091WXRHNEJ5MzNNOHhLLWJYdzZ1Q2lhTDhEcWJxYWRUTnlxSVBoY080ZnB3R2drdXFuREpudnpUR0JDNElYOGFXZkNLZGtISXYxWmstZHJ3b2ItdEhfTG5ad1UzcUYwTG0tV2Zrd1pScUtEYnk4R1hsYUtDZFJZSFZza1FTa0pUUEtKQnotcmJBa0dISVlrUy1uWiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyNDgxCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKWmZXRmh5X1NCR0FSajljbkpSNVctRGciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJQOVFIKzY0IOixiuapi+W4guOAgeaEm+efpeecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2VlA5UUgrNjQiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy42LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKWmZXRmh5X1NCR0FSajljbkpSNVctRGciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgImd5bSIsCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTE3CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiQ0xPU0VEX1RFTVBPUkFSSUxZIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI0MjEtMDMwMiDpnZnlsqHnnIzmppvljp/pg6HlkInnlLDnlLrlt53lsLvvvJPvvJTvvJTvvJbiiJLvvJHvvJMiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNzY1NTE0MywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzguMjgxMzQxNQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0Ljc2Njg5MTM3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOC4yODI3ODA5Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC43NjQxOTE3MjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzguMjgwMDgxMjcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5p2x5rSL5pW05L2TIOOCteODs+ODleODrOODs+ODiemBiua5r+OBrumHjOW6lyIsCiAgICAgICAgICJwZXJtYW5lbnRseV9jbG9zZWQiIDogdHJ1ZSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA1NTcxNTMxNDczMzAyNTc1NDAxXCJcdTAwM2Xmo67kuK3mtankuoxcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabWZEVGVZYlRNS2IzQk5obk54SHB0ZWFEOUdNM2picTRiV3FhdnVDWDlhdnhpSFZJaTJFX2xfcW1OcHlWN3NIQUd2cndiRGpKblhhVmVQcjJqRDYyWGtsNkVXb0xpOFVfWVhiY2NVeC1PT1kwSTMwT1FJenlIc3p0YXVDaTV4ZWdWY1YyV19pelh3R1dmSjNKWW5CRkFVVV9KQkx6bjh4ZVROUGxHWVRoMktuRzdQIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpaM2gyU2FCREdtQVJiV2dqWEgzRUt5cyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlE3OEorNkcg5ZCJ55Sw55S644CB6Z2Z5bKh55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZXUTc4Sis2RyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjMsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpaM2gyU2FCREdtQVJiV2dqWEgzRUt5cyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxNzIKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Fri, 24 May 2024 13:18:27 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%88%9E%E9%83%A1%20%E7%9F%B3%E4%BA%95%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:18:28 GMT
      Expires:
      - Fri, 24 May 2024 13:23:28 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '7905'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=352
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjEzMC0wMDEzIOadseS6rOmDveWiqOeUsOWMuumMpuezuO+8kuS4geebru+8luKIku+8kyDnrKwx6I2S5pyo44OT44OrIDFGIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjY5ODE5MjgsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjgxMTk3NzUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42OTk1MTIxNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODEzMjg1Nzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjk2ODEyNTIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjgxMDU4NjEyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCteOCpuODiumMpuezuOeUuiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDI2NjgsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMzA3MzM5OTY3NzcwNDQ0MzM5NVwiXHUwMDNl5aSn6KW/6Zq85Lq6XHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWmtzN0FhN3hnWWtYYkhZSGNTVnhxZzRjRE9kX2NHNkxTai1jcW9oWnNnc19xMVdQNGZ5R2RCa01SSTNTcnlhX0NaU0dadXJQc0NEN0pmbzBJbFRkUnZYaXlraU1UMHZjYjNsS3N1Nlo4ZUhLYUI0VXhXSlJDemFHSm5BNVk3cXNiOVlzLVlYYlhsT0xYQzExeUM0UHRQdU1FWEQ1TzNYdFJYeXB5M2RLbTY4Y0JrVyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzNTU4CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKeDhlcnV5bUpHR0FSSm13MEZ5NVVEVzgiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJNUlg2KzdRIOWiqOeUsOWMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WE1SWDYrN1EiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy4yLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKeDhlcnV5bUpHR0FSSm13MEZ5NVVEVzgiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAzNDEKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzc5LTMyMjMg5b6z5bO255yM5ZCN6KW/6YOh55+z5LqV55S66auY5bed5Y6f6auY5bed5Y6f77yY77yY77yS4oiS77yTIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0LjA3NTIzNzMsCiAgICAgICAgICAgICAgICJsbmciIDogMTM0LjQ1MjUwMjIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wNzY2MDM4Mjk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuNDU0MDI0NTc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMDczOTA0MTcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjQ1MTMyNDkyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWyqeebpOa1tOOCteODs+ODhiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpOVE5UbEJNTFV6VVJfY0lGU3lSN2dONCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjNGRzMrMzIg55+z5LqV55S644CB5b6z5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZQM0ZHMyszMiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAwLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKTlROVGxCTUxVelVSX2NJRlN5UjdnTjQiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDAKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzMwLTAwNjIg5Z+8546J55yM44GV44GE44Gf44G+5biC5rWm5ZKM5Yy65Luy55S677yS5LiB55uu77yV4oiS77yRIOODreOCpOODpOODq+ODkeOCpOODs+OCuuODm+ODhuODq+a1puWSjCBCMUYiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuODYwNzI4MDAwMDAwMDEsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY1MjYxNDYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS44NjIxMzE0Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjU0MjE2NDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuODU5NDMxNzcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY1MTUxNjgyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIlVVU0lOIGJ5IE5FWFQgU0FVTkEiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDMyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTMxOTgyNDc0NjUxNTU2NDkwNDFcIlx1MDAzZWtvdW5vIG5hb2tpXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFVR0dmWm5GM1Jka2FYal9vT3JsLTNYVXNxTHByZHZwS2doci1HcHJkMC13dlF3czdsMkxScVlsT21yX0dQbUVZQmxuREtiSnp4YzZONTNHbWdmSHYzUGo0NkV0Z1otRzFNa3dvai1uZkpHMUYwRHhoeE5OVEwtMkhrWS04aFcxZ0lqbHl6bF9DTUd3TlUzb1NLeEVHQzhYSEhXY0RIMHNuQ0c5NEhNeGtwaUgzV05feUNHYyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzMDI0CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKLXdiMTJTekJHR0FSLURlbi1nazJmdGsiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJWTTYzKzcyIOOBleOBhOOBn+OBvuW4guOAgeWfvOeOieecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WFZNNjMrNzIiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKLXdiMTJTekJHR0FSLURlbi1nazJmdGsiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyMzkKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMTU0LTAwMTQg5p2x5Lqs6YO95LiW55Sw6LC35Yy65paw55S677yR5LiB55uu77yT77yW4oiS77yWIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjYyNzU3NTQsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY0NjU4NjEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42Mjg5MzQ4Nzk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjQ3OTU1MDI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjI2MjM1MjIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY0NTI1NTM3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuagl+OBrua5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxNzA2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTY3ODk4ODM4NDc1NDYzMjI5NDFcIlx1MDAzZWthaWppIGhhbWFcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVVHR2ZabFk3cUM4N3ZSM0gycWdCNVl2clBpVURiN09VLTBpdk5haGpHZk9FcEJzbjZsOGZHTjg4TVdfWXlyV1dlTVdKU1hFYXB5Ym84MTllTlgzY2xkc25YcDVmaWc0eGxmRmd1VmZ0LThRTlE3X3dLWmpmQVd6RzJGOWR6OHhoZm1MTXc0bnRBbERIU0Q5Rm5kUzFHbWFiVllOUHZlenNHT0F0R05vTGtzSlNNUnF6Q05BIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDk2MAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSi02UElQMlAwR0dBUkJ5ajd0STFkbzBjIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSkpIVysyTSDkuJbnlLDosLfljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hKSkhXKzJNIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuMywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSi02UElQMlAwR0dBUkJ5ajd0STFkbzBjIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDExMAogICAgICB9CiAgIF0sCiAgICJzdGF0dXMiIDogIk9LIgp9
  recorded_at: Fri, 24 May 2024 13:18:28 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8D%97%E5%A4%AA%E7%94%B0%E7%94%BA%20%E5%8D%97%E5%B9%B3%E9%87%8E%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:18:29 GMT
      Expires:
      - Fri, 24 May 2024 13:23:29 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '10380'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=399
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:18:29 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%B0%E7%A2%A7%E5%8C%BA%20%E6%96%B0%E6%AD%A6%E7%94%B0%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 24 May 2024 13:18:29 GMT
      Expires:
      - Fri, 24 May 2024 13:23:29 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41005'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=462
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 May 2024 13:18:30 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%84%AA%E5%A5%88%E6%9D%91%20%E5%A4%A7%E7%B6%BE%E4%B9%83%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Thu, 30 May 2024 13:36:34 GMT
      Expires:
      - Thu, 30 May 2024 13:41:34 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42277'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=464
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 30 May 2024 13:36:34 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%B0%E5%B1%B1%E5%8F%A3%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Thu, 30 May 2024 13:36:35 GMT
      Expires:
      - Thu, 30 May 2024 13:41:35 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2222'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=487
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc1NC0wMDE0IOWxseWPo+ecjOWxseWPo+W4guWwj+mDoemrmOeggueUuu+8kuKIku+8kSDjgrXjgqbjg4rvvIbjgrnjg5Hjg5vjg4bjg6vjgqLjg6DjgrzmlrDlsbHlj6MiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuMDkzMzQsCiAgICAgICAgICAgICAgICJsbmciIDogMTMxLjM5OTU5MTMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC4wOTQ4MTQ4Mjk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzEuNDAwOTY4NjI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuMDkyMTE1MTcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMxLjM5ODI2ODk3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9sb2RnaW5nLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM5MDlDRTEiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2hvdGVsX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjg5vjg4bjg6vjgqLjg6Djgrwg5paw5bGx5Y+jIOaWsOWxseWPo+mnhSDjg5Pjgrjjg43jgrnjg5vjg4bjg6siLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMTIwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDQzNjg2MjU5NTcxODQ5MjM0MjVcIlx1MDAzZeWyoeadkeatpuW/l1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlptOHBxMW1aVFB2X0twN0hkYUh0bHoyMFN5Y0tveFN6dXAzTFloLWt0WE1SUWZfZjdQSFNoWXlOTXdUcmxrZlUwaXpGeHpGNmRzLWd4X2c5X1h0Sm9Pc3ZTZW1HNGdYRDlXcFZiamJid1g3RE9rQktqb2tfMzVlS2VackI2Ry1lUzN3V1o0VGduTVNvMEkxMzlVVkVVdUhwNWhWcXlaZmRiQ1dibVBzT19Lc052OGUiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDE2MAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSmgxNzVQZC1FUkRVUjItSW5pU1o4UVFjIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiMzlWWCs4UiDlsbHlj6PluILjgIHlsbHlj6PnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNkgzOVZYKzhSIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSmgxNzVQZC1FUkRVUjItSW5pU1o4UVFjIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJsb2RnaW5nIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMzE2CiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0=
  recorded_at: Thu, 30 May 2024 13:36:35 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E8%A5%BF%E8%8A%B1%E9%9F%B3%E9%83%A1%20%E7%BE%8E%E6%A1%9C%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Thu, 30 May 2024 13:37:23 GMT
      Expires:
      - Thu, 30 May 2024 13:42:23 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=238
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Thu, 30 May 2024 13:37:23 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E7%BF%94%E6%9D%91%20%E7%A9%BA%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Thu, 30 May 2024 13:37:24 GMT
      Expires:
      - Thu, 30 May 2024 13:42:24 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42567'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=493
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 30 May 2024 13:37:24 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8C%97%E6%A8%B9%E5%8C%BA%20%E6%96%B0%E5%B2%A9%E5%B4%8E%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Thu, 30 May 2024 13:37:25 GMT
      Expires:
      - Thu, 30 May 2024 13:42:25 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '80'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=285
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: UTF-8
      string: |-
        {
           "html_attributions" : [],
           "results" : [],
           "status" : "ZERO_RESULTS"
        }
  recorded_at: Thu, 30 May 2024 13:37:25 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%B0%E7%9F%B3%E5%B7%9D%E5%B8%82%20%E6%96%B0%E5%B1%B1%E6%9C%AC%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Thu, 30 May 2024 13:37:26 GMT
      Expires:
      - Thu, 30 May 2024 13:42:26 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '2233'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=486
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJyZXN1bHRzIiA6IAogICBbCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjIyNS0wMDAzIOelnuWliOW3neecjOaoqua1nOW4gumdkuiRieWMuuaWsOefs+W3ne+8kuS4geebrjLiiJLvvJIg77ym77y177yq77yp77yr77y577y1IDHpmo4iLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuNTc1NTM3NSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNTU5MDI1MwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjU3Njc4MjYyOTg5MjcxLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS41NjA0MDI0Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS41NzQwODI5NzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNTU3NzAyODIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAiUk9LVSBTQVVOQSAo44Ot44Kv44K144Km44OKKSDjgZ/jgb7jg5fjg6njg7zjgrblupciLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA3MjAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMjUwNjEwODE4OTcxMDMzNDM1MVwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVUdHZlpsMllnRlB1c3E5S01hdDZVSlpiUWd0eDhJZG5ia2F2TUgzSDdOZHRjVGdjLTRCcWRRR2VqeFZLLTQ5NlN6UDN2SXlkbDNXTjRwM1Q1TXVMQ3AxR1pBbTltR1BJZWJ3dTN5SVZiVGg0eVBVQTVxODVROHdGUWIxUjl3SVFILWxjV2ZuYlI4OEhYWFpVYWI4dUhIQjZYTU1UcmRYYlBTal9SWUpIbDNkNUVJVGRZckoiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNzIwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKMFdZZ3hXZjNHR0FSMm5ZT2tXX0Nrb28iLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJISEc1KzZKIOaoqua1nOW4guOAgeelnuWliOW3neecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WEhIRzUrNkoiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSjBXWWd4V2YzR0dBUjJuWU9rV19Da29vIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMzAKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Thu, 30 May 2024 13:37:26 GMT
recorded_with: VCR 6.2.0
