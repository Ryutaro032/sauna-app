---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%A0%83%E6%9C%A8%E7%9C%8C%20%E8%A5%BF%E5%8A%A0%E8%97%A4%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 05 Apr 2024 11:00:02 GMT
      Expires:
      - Fri, 05 Apr 2024 11:05:02 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42212'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=709
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJuZXh0X3BhZ2VfdG9rZW4iIDogIkFUcGxESllyWUZnZTJ1N2tnS1ZIWUpiQ18xaFpYbVRWY1dBOEpOSVEtSDdpQ2NLUm8zY29CM1hmNlJqYlozcjVid2htN0pNRExmNXdxa1pSRzAzUVJfRC1TZG1xZDAzUWY2RVQ4YVNoQXUwR2FfSVR4WDZoUDM4cGpVYlJMbk1uUHp2V1B5eXM2VDNxWnU1aWJtWTQwV0luUGxoQnlEbUFaZzF0MHFXSTZZdWJXRDVmSk1udmdzdEY4a3F2Qy1UYkZVNldHVF9hcEFEQlRQU1pBQnhYakNRdTltN2xpaHF5QUdPRzVycUp4d2xtdktIbVVaRDFueHI0NmEyWDJrWU9tcHE5NzNlYm1pZGxiS1pqREwwRTdFOG5aOFItbU5Kcm5SbE5YcC1ERFgybU16WXA4dmhrUkhyZi05Zi1pbHBwdTl6TVZkd1VxNHN6THdvYXQ3MG9iRlpIcTdjbTltczlya2ZlSjc1NGhaYlJRekJ2X0V0cDYwMDc3ZjNOdU5BM1I1T1hRVU4ybm9COGVoSDBEeHpTYnVhZGxrQ09BS09RUERiR3NKaWsiLAogICAicmVzdWx0cyIgOiAKICAgWwogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIzMjEtMzYyMyDmoIPmnKjnnIzoirPos4Dpg6HojILmnKjnlLrmnKjluaHvvJLvvJXvvJIiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTA0MDc5MSwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMTYyODA3MQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjUwNTU2NjEyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC4xNjQxMTU2Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi41MDI4NjY0NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMTYxNDE1OTcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44K144Oz44K/44Ot44Km44Oq44Ol44K144Km44OK77yI5pit5ZKM44G144KL44GV44Go5p2R77yJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMjg3MDI5MDEzNDQ3MzMzNDQzNFwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpieV9LMzdSYjJDdElnbmJxSnIzVjNGSF82TWVsQ0VkREV3U0IwcXdEM2F3bk9BVUVJbFBfODdHWHBET01nQXN5Zk92V3pieV9GVzJBdGxITjQwcU0yR3RHVldUSXV6b3lMY2FVWmp3dnNsU0NmUUlsdHRvRHVEMkQtN19MdmRjTW5IMTJZZEFTZkVEYVhyN0UwV2pkZ3pFblpLTDg2dzBZekxxQVEyZGZDS0tXN08iLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSlhhYXFjR25sSVdBUlNjUzFrOWU0N0hRIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiRzUzNytKNCDojILmnKjnlLrjgIHmoIPmnKjnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSODJHNTM3K0o0IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDAsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpYYWFxY0dubElXQVJTY1MxazllNDdIUSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAiY2FtcGdyb3VuZCIsCiAgICAgICAgICAgICJsb2RnaW5nIiwKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwYXJrIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDAKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzIwLTA4MjYg5qCD5pyo55yM5a6H6YO95a6u5biC6KW/5Y6f55S677yT77yV77yU77yU4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM2LjU0MjAwNzcsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg4NTM2OTcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi41NDM0MTI1Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODg2NjAwNzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTQwNzEyOTIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg4MzkwMTEyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCueODvOODkeODvOmKrea5r+OCs+ODvOODqyDlrofpg73lrq7jga7mua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyNDQ4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDAyNTU0MzcyMDc3NjQyNzUyMzhcIlx1MDAzZeOBhuOBieOBpeOCiuOCk+OAglx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpicTZEU2hEOHBrVE5rRkg2a1ljNWxTNkp0cmdZX09LNmRoR3A4MzI0ek92Tk9TQzBKMkphWHMxUUNFZ0RhOXFidXI3VDA0c2xKLXYtdC1fM1A1QlFBM25PcHNEdkl0MjRROFFoZWt5bVJDcFpVamdZWTZSQnp0Z3pONmQwUS1vVnNyOFg5MkdpODlkaF9aWkpwdDlnZEl5Y3hBZmtqUnp2Q2V5VXozbnVfTV92TXQiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzI2NAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkliTTBIb1puSDJBUlE5SWtKZW1GVkU4IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiR1ZSUCtSNCDlrofpg73lrq7luILjgIHmoIPmnKjnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhROFhHVlJQK1I0IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkliTTBIb1puSDJBUlE5SWtKZW1GVkU4IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA3MTEKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzIwLTA4NTEg5qCD5pyo55yM5a6H6YO95a6u5biC6ba055Sw55S677yR77yU77yV77yX4oiS77ySIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM2LjU0NTc4ODgsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg0OTEwODIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi41NDcyMDQwMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODUwMjY5ODc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTQ0NTA0MzcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg0NzU3MDIyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWuh+mDveWuruWkqeeEtua4qeaziSDjgobjgonjgokiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzODQwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTY0NzM0NjQ0ODQxMzY5MzIwNTBcIlx1MDAzZeOCouODquODgOOCpOOCquOCuVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREphbTNhMEpYSHJ3N3BUWE1LT1ppZXB5ZUsyZTdXLVZfT01La0FzQXE3Z1RrZ1BXR004S1lBc0VPNktGMVRHeW45cGpHVkdDbmJFdUdUbE5oc2syZGlWM3NiMU1PbW82ZVVFUVJPSWpKNkVENU12c0xDdXZQSDMzWXR6MXB1Sy1wWE1fWklRcmxYLXlLcjg2a1FqNXR6WW9VbmNOdFdyWVRVbi05MzJicGVycXFXWSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyMTYwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKbjkyeThYTm9IMkFSVFpaNTZzVzNVMVEiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJHUldYKzhKIOWuh+mDveWuruW4guOAgeagg+acqOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE4WEdSV1grOEoiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy43LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKbjkyeThYTm9IMkFSVFpaNTZzVzNVMVEiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDEwMTgKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzIwLTAwNzQg5qCD5pyo55yM5a6H6YO95a6u5biC57Sw6LC355S677yW77yW77ySIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM2LjU5MDMxMTc5OTk5OTk5LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS44NDc0ODcyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTkxNjE4Nzc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg0ODkzMDUyOTg5MjgKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjU4ODkxOTEyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS44NDYyMzA4NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgrnjg7zjg5Hjg7zpiq3mua8g44Kz44O844Or5a6d5pyo5LmL5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjQ0OCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE1NDkwNzgyMjU5MDIzNTc5NzMwXCJcdTAwM2VKYWNrIFRzZW5nXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlk4MldSOHVvMXlpU0k3dEdYYTJibzJ3SE5iejZWUVo3Mzk5VkdZaU9oSUdTREdRSEVxTFVaTEZQY1JleTNuSjlmamdvcl9EMjJnZUtLeVpSaWZqQ2N1bVhUeXRoU1hJeHJkRlFhc2V3QWFZZ21QOW15aW1Oc1hkcmlkd1pSU3J3eG9oRWlla3VwY0p3TEdwWkRTT0IyYWlzX05waTRvUk9yUGpERmNTUEdqamVmMyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzMjY0CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKVVpqTGpLNW9IMkFSaWRfaVhYeXZpLXMiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJIUlJXKzNYIOWuh+mDveWuruW4guOAgeagg+acqOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE4WEhSUlcrM1giCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy42LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKVVpqTGpLNW9IMkFSaWRfaVhYeXZpLXMiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNDQ4CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjMyMS0yODAzIOagg+acqOecjOaXpeWFieW4guS4reS4ieS+nTc5NueVquWcsCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNi45ODkwMjI3LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS42OTc3OTc1CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuOTkwNDUwNzc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY5OTIzMDcyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2Ljk4Nzc1MTEyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS42OTY1MzEwNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLph47lsqlTQVVOQSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA1NDAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwOTQ1NjU0ODQ3MDQxMTY2MDM0MFwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpaN0lfQ3pGZGJCMlQ2Xy1RYVhXM3AyQk5FYk1BSERqTmF4MjV4X0FiVS1kdVlaQVdsaEFCd1FTeEhZdHVBb1JvX3JJenNBM05KQXN6TU5FRUg4THRVYllVUEpieHRFVFhQSFdMeEhqblNhWU5wUkd3REFXT2dSLV9pbXhHdjlIV2hfTUNSaDh2RTB4ak5Ba1ZvX1l4Znh6bS1oN0F0V1NiNmk0ZkpMU2l3N244WWMiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNzIwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKejRSbHJ2eVZIMkFSd0ZQQ2ZzVGJlOWciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJYTVFYK0o0IOaXpeWFieW4guOAgeagg+acqOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE4WFhNUVgrSjQiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSno0UmxydnlWSDJBUndGUENmc1RiZTlnIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMgogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIzMjAtMDA3MiDmoIPmnKjnnIzlrofpg73lrq7luILoi6XojYnvvJHkuIHnm67vvJniiJLvvJUiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTg0MDI1NiwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODY1NTc5MgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjU4NTM4NDM3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS44NjY5NTg4Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi41ODI2ODQ3MjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODY0MjU5MjIwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5a6d5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE1NzU4Njg5MzE4OTgxMDkzMjAyXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmJSX0JmRnRZSmtRN0tObGJKWDhMT1NXanktRm54ZHRUWkw4M1BESzJiQ3NlOGYydGt1ZHVVM21FZjUwbUhfVTZqSHRnM1VtV3F6OFQ3dk9RTDBhVUJFZl9pRDZfSm54dVNjUkdXZ3pTYjNqekNIdkhvMEJ0RDk5dXplV1dHMUtLSzloTmNZSGdVcHJEbTVfNHR3NlU2NEJMa051azBlTk5lcnM5eEtDbXAtUS02YiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKOWFyb1NEMW1IMkFScjJaZkJEZ09SVmciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJIVk04K0o2IOWuh+mDveWuruW4guOAgeagg+acqOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE4WEhWTTgrSjYiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC4yLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKOWFyb1NEMW1IMkFScjJaZkJEZ09SVmciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTIzCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjMyMC0wMDM1IOagg+acqOecjOWuh+mDveWuruW4guS8nemmrOeUuu+8kuKIku+8liIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNi41NjA5NjM0LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS44NzkyMDQyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTYyMjM3ODI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg4MDUxNDkyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjU1OTUzODE3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS44Nzc4MTUyNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJLVVJBIFNBVU5BIFVUU1VOT01JWUEgKOiUteOCteOCpuODiuWuh+mDveWurikiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogZmFsc2UKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDAzMiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA3NjQwNDcyMjI4NzQ1MTQ0MDM5XCJcdTAwM2Xph5HlrZDjgZXjgYrjgopcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWkgyRzBPZlZNVURyQldlUUVqLU9HTGtOR3VrOGdOcDZkd0F1dlZCMlY2R0dmU3lTVUJfOGJVZk9ibktsSTE4bTUzSHc4UEtSZ0dLU19WWjNIZEd5UjRXb0NkWXRmd2x1Ym9YODNUWXdmQndIWnNNSDJGdks5UnFnZlozQVNscHVKWnIwaGNDUXN2eHFubVE0V0JsVDBTQ1V6YldkS1ZTRGE0aklXLTdmQ3E3N252IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpKU09wb1N0bkgyQVJJSkx3dFBzOUdXMCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkhWNkgrOU0g5a6H6YO95a6u5biC44CB5qCD5pyo55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UThYSFY2SCs5TSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpKU09wb1N0bkgyQVJJSkx3dFBzOUdXMCIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDIxCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjMyMS0wMTE4IOagg+acqOecjOWuh+mDveWuruW4guOCpOODs+OCv+ODvOODkeODvOOCr++8lOS4geebru+8kuKIku+8lSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNi40OTUyNjExLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS45MTA3MDI5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNDk2NjE0ODc5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjkxMTgzOTE3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjQ5MzkxNTIyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS45MDkxMzk1MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlrq7jga7ooZfpgZPmuKnms4kg5rGf5oi46YGKIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDAzMiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA4OTE3NzgwMzY3NjczNjMwODQ5XCJcdTAwM2XlhavmnKjnuYHmmI5cdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKYkhoVV93cmNoSllwdTNhODFVTmIwcTRUS3VwOTh3eHBJY2ZsSW1xMmVTNXY4YXpyZU5FaElHMzJRTGFlTl9hSXkxWmZ6bGZVQ1A2aHF4a0E4X0UxOXU1b3k0MHN3V1VRWWFOblJreUM3cXo2cjN1Z2FuYkxDekx5dlJ0b2psVlppVFlZeWRpQ3U2RXVxT2dGbEtEclA4RTlWR1UwTVJLTlo4c2ZscWlybHEyMWJpIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpsMEp6NVV0ZEgyQVJvM1k3eEY5blFPcyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkZXVzYrNDcg5a6H6YO95a6u5biC44CB5qCD5pyo55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UThYRldXNis0NyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpsMEp6NVV0ZEgyQVJvM1k3eEY5blFPcyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA2MzQKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzIyLTA2MDEg5qCD5pyo55yM5qCD5pyo5biC6KW/5pa555S66YeR5bSOIOilv+aWuee3j+WQiOaUr+aJgOWFpeWPoyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNi40Njc0NTUzLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS43NDQ2NTMxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNDY4ODUwNTI5ODkyNzEsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljc0NTk5NzQ3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjQ2NjE1MDg3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43NDMyOTc4MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLopb/mlrnjg63jg57jg7Pjga7mua8iLAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDMyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTA4NjkzNzMwNTI0NDE2ODE5MzdcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKYkxtby1VanE4LXYwNFlvdmlwZkU0WDNNaFZveENlbEVqRFdleXhBWnd3MlJlWTVRQnN3dEdocFBJV0szd3NoS3N5RVVGZEhEUk9sMmJKUk1LdVBZdGswRWFubnIwM3UtQUo4ekppajhkM1RZMjBBY0IySnFCOUpqR1VUVWlLVWNpQUhBVlRlVEh3TTJveUR5VVZnNmdiSEFHSU5kQnhMOF9xRmp3dk9ZejNBQ2p0IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpEV29nX3o5QkgyQVJHTDVJakl0NkNTVSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkZQOFYrWFYg5qCD5pyo5biC44CB5qCD5pyo55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UThYRlA4VitYViIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpEV29nX3o5QkgyQVJHTDVJakl0NkNTVSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA1CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjMyOC0wMDcxIOagg+acqOecjOagg+acqOW4guWkp+eUuu+8ku+8kuKIku+8l++8kCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNi4zOTU2NzY0LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MzI4OTY2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuMzk2OTg2NDc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjczNDA3MTU3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjM5NDI4NjgyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MzEzNzE5MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmoIPmnKjmuKnms4kg5rmv5qW944Gu6YeMIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjU3NiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA1Mjg3MjUzNDU3MTM1Nzc0NTQyXCJcdTAwM2XmoIPmnKjmuKnms4kg5rmv5qW944Gu6YeMXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESllUcWxqbFI5OGttTGM4VmpyWll5VXptV1p2VEJNQkxrMW9VbE9hckVrM1Ewa1BnaXp2MWJNN0YwLXRNSW1GNjFXTF9RM2UxLXhZUzVFZm51SkVDUjg3bHRLdXJWUUVKYkJ4MDBjeXI2WFJfRVh5OEFRZjVvcXV5Z1hEWmQ4T2pGc0tKUnlHSnV4M210MVZEdDYyaTlCVGxNZFlQaHFqRHRjLU45TmRBMnh5STNmUCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzODY0CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKMTNSRDdOZEdIMkFSUWFQb2lYc2xoV1UiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI5UFdNKzc1IOagg+acqOW4guOAgeagg+acqOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE4WDlQV00rNzUiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKMTNSRDdOZEdIMkFSUWFQb2lYc2xoV1UiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE0MzAKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzIxLTA5MDQg5qCD5pyo55yM5a6H6YO95a6u5biC6Zm95p2x77yW5LiB55uu77yV4oiS77yT77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM2LjU1NjE5MDgsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjkzMzQxMjkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi41NTcyOTgzNzk4OTI3MSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuOTM0NzAyNDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTU0NTk4NzIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjkzMjAwMjgyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWuh+mDveWuruWkqeeEtua4qeaziSDjg5njg6vjgZXjgY/jgonjga7mua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyOTc2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDk1Nzg0NjgyNTYwNzUzOTU1OTNcIlx1MDAzZXRha2Egc1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpZZFZmWDU4bkktbVl4a3hNcm03dFVZRTdjd1hpOGdLV1Q2ZlVORkltNEFpUHc5SHB6Ny1VNk9JNHJRbnlVdlpoM2JSM2hhaERCS1YtOVFyMlpXWVZwY0ZtSk9sVTR0MXVKUC10RUFKZUdhTUhDSVZ1WjA4dTZTd24xeFBnMEZmN09iTFpmYnlLcl9rbC1pbWFVZlJHU0N0REpCaXZyd19sT2ptOHFUZnRabzJJd0IiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMjk3NgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSjQ3bEtFUDlkSDJBUnp4THNMcjRVdTRRIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSFc0TStGOSDlrofpg73lrq7luILjgIHmoIPmnKjnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhROFhIVzRNK0Y5IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUo0N2xLRVA5ZEgyQVJ6eExzTHI0VXU0USIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTUwNgogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIzMjktMDQxNCDmoIPmnKjnnIzkuIvph47luILlsI/ph5HkupXvvJfvvJjvvJkiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzYuMzg1MjczLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS44Mzc0MTgKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi4zODY2ODg5Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODM4MTk4ODI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuMzgzOTg5MzIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjgzNTQ5OTE3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOChuOBhuOChuOBhumkqCDmlr3oqK3nrqHnkIbjgrDjg6vjg7zjg5ciLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDk2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTUxNDkxNDAwNDI3MTc4MjkxMTVcIlx1MDAzZXlhc3VoaXJvIGtvbWluYXRvXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmJpUTNkOWpyTWdQaS13a2JNUU9ENTJnQTFLYkVpSGl2UWNVcWo4VzBlMnRZa29oalJCWG0ycGNzSEFZN2Z5anVXOEtKdnJpWnlzSXozSHBEb1V2NlpwcDg0VmppRTJKV01WM3dIYlpVUWt6SnhVNGF6RklzWTlPNXJNRFpTWl9SX0hLeS1YY0U4MjQ0S2p0OUQ5NjR1QXo4LW0yMVlZZWR6MUlDNTRnUjNueVJxSyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA1NTA0CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKRWZnRXBVTkZIMkFSd3RUaXRnV1lTZDgiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI5UlBQKzRYIOS4i+mHjuW4guOAgeagg+acqOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE4WDlSUFArNFgiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy40LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKRWZnRXBVTkZIMkFSd3RUaXRnV1lTZDgiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTYKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzIwLTA4MTIg5qCD5pyo55yM5a6H6YO95a6u5biC5LiA55Wq55S677yR4oiS77yS77yZIDHpmo4iLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTU5NTI5NSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODg4NTI3NAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjU2MDg5ODIyOTg5MjcxLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS44ODk3NTMyMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi41NTgxOTg1NzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODg3MDUzNTcwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44Km44OE44OO44Of44Ok44K144Km44OK44Kv44Op44OWIO+8iOWuh+mDveWuruiSuOaxvea1tOWAtualvemDqO+8iSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDEwMTQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMDg4NjQ1NTM1NjM4Mzg5NDM2N1wiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpiYkRicXJka1lyNVUxdDhfSGpsd0ZxaGRrRDNJS1pOV0JRajFBUG5ROVhNd3VuZ3RmOFhIV0hYQjZnSWtNbTZEdlZmRHhTcG1sMlYxSHlqZ0VYRVh4NThEU1JQcE5EMEhBTGhSLThMdmgxTlYwYVA0d1EwZXNBbFFMN2NTa2kyNW1FLWtUX3ZadXBQVFRYa2VwX01tTS1iQkgxTDJVeHNENkR0VlZQdGlaOTlMVTIiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMTQ2MgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSk0wUndHdzFuSDJBUk1vSGVnSWJ6d2pRIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSFY1UStSQyDlrofpg73lrq7luILjgIHmoIPmnKjnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhROFhIVjVRK1JDIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuNiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSk0wUndHdzFuSDJBUk1vSGVnSWJ6d2pRIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTcKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzIxLTA5ODMg5qCD5pyo55yM5a6H6YO95a6u5biC5b6h5bm45pys55S677yU77yY77yY77yQIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM2LjU4MTM0NTUsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjkyNDM0NzkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi41ODI1MTI3Mjk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuOTI1NDcxMjc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTc5ODEzMDcwMTA3MjksCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjkyMjc3MTYyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIualtealvea5ryDlrofpg73lrq7lupciLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA1NTUsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMDczNjA2MjE0Nzg5ODI5MzMzOFwiXHUwMDNl5qW15qW95rmv5a6H6YO95a6u5bqXXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmJhQTlPQ2JFd1k4aXJFV1ZnVVBkTmIteG1wLUFFQTJ2T1BjRVhpdkUwWjVyMlE3ZUhtQ3d5aFlGR2ZLbUtFNlBXdnBpRjVROElUcGtCdXpDdTNZRE9KR0l5Q2N5bXRod2gxRFk1REFoNEZCalcwUkNVbUZKTEhvUkJKSnhqWF92aDBxWk1yUGRFRG8yNHRKU2QzSVhiNExud2J5RnNiMXFiUVh1SUtKR2lWeldGbCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA3NDcKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUo3WjFIempwbkgyQVJleklEcGs0RHo5ZyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkhXSkYrR1Ag5a6H6YO95a6u5biC44CB5qCD5pyo55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UThYSFdKRitHUCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUo3WjFIempwbkgyQVJleklEcGs0RHo5ZyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTE4NAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIzMjMtMDAyMiDmoIPmnKjnnIzlsI/lsbHluILpp4XmnbHpgJrjgorvvJHkuIHnm67vvJLvvJTiiJLvvJLvvJAiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzYuMzA5NjM4NCwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODEwMTQ4MQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjMxMDk2OTI3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS44MTE2Mjg5Nzk4OTI4CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi4zMDgyNjk2MjAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODA4OTI5MzIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44OX44Op44Kk44OZ44O844OI44K144Km44OKIEh5Z2dlIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNTQ2NCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEwNzEwODQ3OTgzNzQ2OTY3MDEzXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmE4QXh3b3dqRFpkUFRjM2tHTElVMGxuRWtaQ2lBeXhUc0lhal9JdThtTFdLUkwtZ0xkejY5VEF1TE1POTdOWFdWam5qSnY2Nk9Yb0NDOGFzVTJ3MVp3S0d3ZEFxSEluRkZNOTVza3YxREVWbVNFdDlaTG44Yl9Odk9jcUhhMkJWT2R6TTZ6RENEdi1FSEJxNGJtdGNBdkhYS3ZQMkg3QklkYXBpZkFKZFA0ZVhQYiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA4MTkyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKYlo1NWE4TlBIMkFSS0xVTFBwNTF5dFUiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI4UjU2K1YzIOWwj+WxseW4guOAgeagg+acqOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE4WDhSNTYrVjMiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC40LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKYlo1NWE4TlBIMkFSS0xVTFBwNTF5dFUiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA5CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjMyMC0wODI2IOagg+acqOecjOWuh+mDveWuruW4guilv+WOn+eUuu+8k++8le+8lO+8lOKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNi41NDE1OTQ4LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS44ODQ4ODUzCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNTQyOTAwNDc5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg4NjIyNTM3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjU0MDIwMDgyMDEwNzI5LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS44ODM1MjU3MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvcGFya2luZy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9wYXJraW5nX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLpp5Dou4rloLQo44K544O844OR44O86Yqt5rmv44Kz44O844OrIOWuh+mDveWuruOBrua5rykiLAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDg1NDk4MzUzMzM3ODI2ODMwODZcIlx1MDAzZeiHvOS6leaWh+eUt1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpadkxRZlNOYmpicU4xWDJsN2w5dTNGckJTbHdYS3ZaWWoyLTFDcFV4dXhMUW9uMk4tRTJhcGVlOUpJa25HUktyWG1zV1dGNDZyYi1ORjhBNVFqTkt6VlpEV0tmUzEwWjJwaG1EV1pDcTItTG5MUHZRQXBWbDdnU2EyNHB4YzZwakctNGJLZlZ0RXNqV3ZWcGxMdllNRGxtR25Wd3YzdEl0VG9GRzlfUFJwV19Qc18iLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSl94U2pOMEpuSDJBUko2SzNscmZDOW9VIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiR1ZSTStKWCDlrofpg73lrq7luILjgIHmoIPmnKjnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhROFhHVlJNK0pYIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDAsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpfeFNqTjBKbkgyQVJKNkszbHJmQzlvVSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicGFya2luZyIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDAKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzIxLTAxMTgg5qCD5pyo55yM5a6H6YO95a6u5biC44Kk44Oz44K/44O844OR44O844Kv77yU5LiB55uu77yS4oiS77yVIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM2LjQ5NTMwNTgsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjkxMDM5MTIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi40OTY2NTQxNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuOTExODIwMjc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuNDkzOTU0NTIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjkwOTEyMDYyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9yZXN0YXVyYW50LTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiNGRjlFNjciLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL3Jlc3RhdXJhbnRfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWuruOBruihl+mBk+a4qeaziSDmsZ/miLjpgYog44GK6aOf5LqL5YemIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzQ3MiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAyODk0NzE4NjMzMDMzNTU4Nzc4XCJcdTAwM2VrYXouYWt0a1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREphaXBDSlNKTmhZOHktRnZsVXdlOWJrU2FYUjNJekxBVVJjRVlEUzhyeXRXN2p0VkFHeGhLRHZuamFsTVgwdDJtMmV4UWh0ZVlNTlduUVpoRmFWOXBzSzJZcVctcEFvWnRlc29MSVcxSTlzZVhBVzUxX3JfZVRkWWZJMENKUjZmZjRscjlzMFF2M3h4VENOaWRMR0lmWDJHclR0aVNvT2U0QlZwOE82QzFsdXg4b2siLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDYyNAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSmJaZFJBZ0JkSDJBUllfcVJKbDF0TVBrIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiRldXNis0NyDlrofpg73lrq7luILjgIHmoIPmnKjnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhROFhGV1c2KzQ3IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpiWmRSQWdCZEgyQVJZX3FSSmwxdE1QayIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicmVzdGF1cmFudCIsCiAgICAgICAgICAgICJmb29kIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIzMjktMTQxMiDmoIPmnKjnnIzjgZXjgY/jgonluILllpzpgKPlt53vvJXvvJTvvJTvvJXiiJLvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzYuNzE5NzAwNiwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMDE1ODY2NwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjcyMTAxOTg3OTg5MjczLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC4wMTcwOTMyMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi43MTgzMjAyMjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMDE0MzkzNTcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2xvZGdpbmctNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzkwOUNFMSIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvaG90ZWxfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOBiuS4uOWxseODm+ODhuODqyIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDI0MDAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNjUxNjMzNzg1NDM1NDI0MzA0OFwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpZZVVvRmpDUV9LV2xXOEpaSjczLU9PUHZLSHl4STRBWlNFcF9hQnNocWNtX2l0QTRTNWxYajljWkFMZWFVRDVxUDZxOUxUM1BKS3JOUW1zTmxzb04za3VyMHpUSFI0c1JwTS11UUhjbWJYeEhlRTR0Umk3RGxMbnlzZVFETW9lTF9tZnhiRVZscWRjbkNVSTZHaVdWbWNMTHhuZ0JHdS0yZ1pUemRGRy1wYm9adyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzNjAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKR2VOWnNxRmlIMkFSTlEwUnlDOERuR2ciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJQMjk4K1dGIOOBleOBj+OCieW4guOAgeagg+acqOecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI4MlAyOTgrV0YiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKR2VOWnNxRmlIMkFSTlEwUnlDOERuR2ciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgImxvZGdpbmciLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA0MjIKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMzA3LTAwMDEg6Iyo5Z+O55yM57WQ5Z+O5biC57WQ5Z+O77yR77yY77yTIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM2LjMwMjU5OTEsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg3NDY1MTcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi4zMDM5NTUyMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODc1OTA0MDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuMzAxMjU1NTcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljg3MzIwNDQyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIktVUkE6U0FVTkEgSUJBUkFLSSAo6JS144K144Km44OKKSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxMzM2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDg2MzUxODQ4OTUzNjI1MDU0NjVcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKYTBRakZXb1oxMUdFWnkwOUlrNm1INjBhblNOcGxER0RTVVlfanZLOW9EUWpPZTFTc3Z1UU1HWW5qakw0LWxvT0V5Q1BndEVMZ01yb1lrbk9fZTdZeFMyQTM3MUctVG13aFo0bjg3dmFNZVVlSFBUZHgxdkVnb2x6VG1peVFwYkVSMVFOZDNsQzU4dTkyUDNxUXRXU0d0bUx2aWVTdjd4M0xRSU4zdkZNN1lXc0FHIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDIwMDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUppenlONlgxVEgyQVJTSkptX09WR3ExNCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjhWM0YrMlYg57WQ5Z+O5biC44CB6Iyo5Z+O55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UThYOFYzRisyViIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUppenlONlgxVEgyQVJTSkptX09WR3ExNCIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDI4OAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIzMjEtMDM0NSDmoIPmnKjnnIzlrofpg73lrq7luILlpKfosLfnlLogOTA555Wq5ZywMTEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzYuNjAxOTI4OCwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODIzMjY4MgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjYwMzI0OTYyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS44MjQ2NTEzMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNi42MDA1NDk5NzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODIxOTUxNjcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5YWD5rCX54KJIOWFreWPt+WfuiDvvZxBWlVNQVlBIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDEzNjUsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNDcxNTQ3MDA0OTc5MzM0MjU3N1wiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpaVmU3VXlsMERySXJ1MU5nVDgzQU52Z0N4b1BxWk9vcHc3VjlkanJKdnBlWU1mTndKMlpwbXZmbzh5dVZILTRDc1A2OTRUelVvNURKdTJFWmFfdVZTblI5bE91YlpCTk9NSXhtSi1QeE0wTE1jM0k1Zk1mNmlHZFp3Vl82TDlFT1J6TXZJRThER19Rd3o3d1JDZFVBYkhoVW1VQ3hlLWFUcDFZMTdrYkx3SVd4aFIiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMjA0OAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSmw5cUVoUWx2SDJBUlVKSzhzamp3NWJZIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSlIyRitROCDlrofpg73lrq7luILjgIHmoIPmnKjnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhROFhKUjJGK1E4IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDAsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpsOXFFaFFsdkgyQVJVSks4c2pqdzViWSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAiYXJ0X2dhbGxlcnkiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAwCiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0=
  recorded_at: Fri, 05 Apr 2024 11:00:02 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%B0%E6%BD%9F%E7%9C%8C%20%E6%9D%8F%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 05 Apr 2024 11:13:00 GMT
      Expires:
      - Fri, 05 Apr 2024 11:18:00 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42212'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=417
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 05 Apr 2024 11:13:01 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B2%A1%E5%B1%B1%E7%9C%8C%20%E5%A5%88%E3%80%85%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 05 Apr 2024 11:14:04 GMT
      Expires:
      - Fri, 05 Apr 2024 11:19:04 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '32786'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=367
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 05 Apr 2024 11:14:04 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%AB%98%E7%9F%A5%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 05 Apr 2024 11:14:05 GMT
      Expires:
      - Fri, 05 Apr 2024 11:19:05 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '40652'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=425
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJuZXh0X3BhZ2VfdG9rZW4iIDogIkFUcGxESllxSl9fX0o4SDYxd2pfa0M3aUFCanAxbWtxZlRCUlo1Ukl0a1J1ZTltVFdDbVJLZ3dVcDIwclNlR0JhalhQQUR4MldLNVlSQjhNTkx6Mzh3NE9SdjhYblZCVDZYV0oyVWRNemEyLW85dHNLTE9xWER5UGNWUk5hSG9uX1NhdHZFaGk2ZVFLbll4ZE5wTUR1N1lOZGdwNzRrZVExVzkyX1hJNEhIM3VCTnBZNXRSdm5kd04yeTBHOU5lVl9ZTi11Q0tKZTgwN29Wc0xfcHJ0TWYtU2tDcUplNDZDUGZNUUg3NHpXTkZONU05ckIwc0FTZ3RteXNvbGhfRzRnRklCX1NSc0tSWnZjTFJncVlvbmVlSzhUUmV2ak9VN3NoMWNubGUtcDM5U1RRekxWUU5ZclVESHBmZVlQQ2FNdWM0NFdBU0ZqaTExbDdidUhqSmpBZnlidnhoTHQ5SkdUX2tTRXRyTFE0WGdaYVZ2UTNnWUNTSjB5SUVSZE5SQmUxanNJdTd6NTBieFRTSjhsOUQzWGg4IiwKICAgInJlc3VsdHMiIDogCiAgIFsKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzgxLTAwODIg6auY55+l55yM6auY55+l5biC5Y2X5bed5re777yR77yY4oiS77yT77yQIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDMzLjU3MDg2NjYsCiAgICAgICAgICAgICAgICJsbmciIDogMTMzLjU2MjMwOTEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy41NzIxNjAzMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNTYzNjMxMzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuNTY5NDYwNjcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjU2MDkzMTcyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIlNBVU5BIOOCsOODquODs+ODlOOCoiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDE4MDAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwOTU4Njg0MDA1ODQ2ODY3NDQzN1wiXHUwMDNlQ0VORFJJTExPTnBsdXNcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWXJiUHpWSjhfQjdmb1VGeDU5S1ItYWF1eXBlVmpPYVVGRlRMb29hOE5BOEI4dG81SUdEQzhSb0FIcVVGM3BSSXB1Z1RadFRPU0t6V2pfZkltMnBXbGtsSm53aE1NZm4zMHJHbEltR0lKYi1hSHNFUklOQlJZc2paQXJBNW91N0paVVRRRk0zQ2ZCaVRaQVQxRnZGVU0yenpLdEpfLUVRVXZvWjg3ZDZhaExwLS16IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDE0NDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpzUzNzMENVZFRqVVJDTXVtY0VSMlhVTSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkhIQzYrOFcg6auY55+l5biC44CB6auY55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTVNSEhDNis4VyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjIsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpzUzNzMENVZFRqVVJDTXVtY0VSMlhVTSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDY2CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc4MC0wMDYyIOmrmOefpeecjOmrmOefpeW4guaWsOacrOeUuu+8kuS4geebru+8l+KIku+8ke+8lSDjg5jjg6vjgrnjgrvjg7Pjgr/jg7zpq5jnoIIiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzMuNTY5MzUyMywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNTQ4Mzk0MQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjU3MDcwMjg3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy41NDk3NTY1Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy41NjgwMDMyMjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNTQ3MDU2ODcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi6auY56CC5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjQ2NCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAwODM1MTQyODY5MTE1OTUyMjc2XCJcdTAwM2XlsbHmnKzkvLhcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWnJIUWNrcThjRGU0VVA0bVFEYkVoS0xDeXZHWEVBZ2dNdXVZeFZkU29CN1hRNzROeTBjQ0JRTGlaWVJwMlpXdEJqRXRTRkZQdk5JemNTb3RDeTVLdlU1dU9hQlJ1cFlQYkQtczgyOHdXbVZBZkpyTXBkMkUzbTJaNmU2ZWhnU2xoMTFleTFScEZ3ZkJXemcxVXA1c3N6SHF5WWtLSkNVNWxhSUtWc2hVejhHa21wIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMyODAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpGXzNTZmJFZVRqVVI3T3ZEUVFEWkdNUSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkhHOVgrUDgg6auY55+l5biC44CB6auY55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTVNSEc5WCtQOCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpGXzNTZmJFZVRqVVI3T3ZEUVFEWkdNUSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA3MQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3ODAtMDkyOSDpq5jnn6XnnIzpq5jnn6XluILmoZzppqzloLTvvJbiiJLvvJgiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzMuNTYyNDQxMywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNTI1MTIyOAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjU2Mzc5MTEyOTg5MjcxLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy41MjY0NzI2Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy41NjEwOTE0NzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNTIzNzcyOTcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5riF5rC05rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjE2MCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAyMDY4NTUxNTA0ODQ0OTc5ODMxXCJcdTAwM2VOb3JpdGFrYSBOYWthbXVyYVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpiSlJnQTdMeGdsUEVHb0FYMUZyaW80aVh5TGwwbGZubHozUG5WOXd4TlJfUVBEQmIxeWJZOVhzVExKbHNjTGE1aDhkZlJ2V0g4dEEwbUwxQUVBNndNV2lJYzdVYmlMZDhJcjkxdXlrSUhZLXRSTDU5RjVNUjZlRkczN2dHWjI3UXpCUXctOFA1RkxJdVhLaDBCeDBoZEJqWnEyakpiWmd1V2hzTWVHdmRMS2tFdUUiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzg0MAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSjAxREo1eVlaVGpVUmk4VUVwbmFYaE5VIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSEc2RytYMiDpq5jnn6XluILjgIHpq5jnn6XnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNU1IRzZHK1gyIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSjAxREo1eVlaVGpVUmk4VUVwbmFYaE5VIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDYyCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc4MS0wMDgxIOmrmOefpeecjOmrmOefpeW4guWMl+W3nea3u++8mOKIku+8ku+8kCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzMy41NzQ3MzIsCiAgICAgICAgICAgICAgICJsbmciIDogMTMzLjU1ODUwMjgKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy41NzYwNjI4Mjk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNTU5OTgwNjI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuNTczMzYzMTcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjU1NzI4MDk3MDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIumrmOefpeOBveOBi+OBveOBi+a4qeaziSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIxNjAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwODYyMjIyMTYxNjMyMTE1ODY3MVwiXHUwMDNl6aOv55Sw44G+44GV44G/XHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlpRMU1oZm5TQ2k1V1lRbFdKMW9QR3prTUdmdEk1WThhUmltcFlMRmZGY3dpeE9hRjNUMFBLbGtFWkhDN0ZQZ2FPa2VFNTNucml4QkdtUTJlYWtVRUVfbXItdHQ3OFF0RHJkdnRVTmd2VURpcWpwMFVwQ2hZS3RiM2hXdmlHS1ZsYUUzZks0cnlPbjhlZ0ZZUUU4aDc5SjlLM1RwLU9ReWFpMkVxXzF3S1VNcWx3WiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzODQwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKRDFrUTNhQWVUalVSNEhfTnVZLUxDSzQiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJISEY1K1ZHIOmrmOefpeW4guOAgemrmOefpeecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE1TUhIRjUrVkciCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy43LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKRDFrUTNhQWVUalVSNEhfTnVZLUxDSzQiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgImxhdW5kcnkiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA3MTAKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzg3LTAzMjUg6auY55+l55yM5Zyf5L2Q5riF5rC05biC5qCE55S677yR77yU4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDMyLjc3ODM4NTAwMDAwMDAxLAogICAgICAgICAgICAgICAibG5nIiA6IDEzMi45NTUwNjM0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzIuNzc5NzYxMDc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMyLjk1NjM5NzEyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMyLjc3NzA2MTQyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMi45NTM2OTc0NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLml63mua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyMTYwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTEzNTEwNDkyODQ5MDU5MjgxNzVcIlx1MDAzZWpvIGpvXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESll2a3ZZODZFLVlXME04V3Q4WXNnSE9nQzlXRHNlNjI3WFI0UXdFVy1PX1YxR0hFY0VuSHcyby1KLVAwZENadXpYZmxwUWZlWGpsTFlvb3plMVZZNVVWTTltTkJsQlR1bUpIX01oeFdlLVRBX21QZnBXeVNJcmRSM3BtalQzb1NVX3lCQVUwc1VaSHJMRURTTlRGSnExUUkzUlZISlhqcm00b2F2S3RjakFXenNFSiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzODQwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKdVNyTXlld3pUelVSSjJEQ0JVeXRHQkkiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJRWEg0KzkyIOWcn+S9kOa4heawtOW4guOAgemrmOefpeecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE0SlFYSDQrOTIiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC40LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKdVNyTXlld3pUelVSSjJEQ0JVeXRHQkkiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNzUKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzgxLTAwODYg6auY55+l55yM6auY55+l5biC5rW36ICB44OO5Li477yR77yS4oiS77ySIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDMzLjU2Mzk2MTUsCiAgICAgICAgICAgICAgICJsbmciIDogMTMzLjU2ODU1NzUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy41NjU1NTU5Nzk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNTY5ODg0ODI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuNTYyODU2MzIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjU2NzE4NTE3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWcn+S9kOacm+aciCjjgbzjgYbjgZLjgaQp5rip5rOJIOWnq+iLpeWtkCjjgbLjgoHjgo/jgZMp44Gu5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTY2NywKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE0Mzk5MTUwOTAyMzIyMzY1MDMxXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmJmREJWeTJld1VXRXFDRThUUFFmT1UydzI3R283cFRfZU1ZeFpYX2pncV9iOUtuN3Nsd0laTlRjUnliT1pyTXMxNDhDLWt6ZlZueXlJSllNZndzTlRHY1p0N1dqb1hpbkRDZmU1cFUxUEFYOTN6T2t5VUJFMHNwVUtpLWFIbGoxX3lOYVdyTENwaGxqVE83Z21YRG10SldXMkpHWjJYUDlUSzkxVEFYNmhnTmcwSCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyNTAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKblZlemhuc2RUalVSWUVxZmpDbXVQelEiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJISDc5K0o4IOmrmOefpeW4guOAgemrmOefpeecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE1TUhINzkrSjgiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSm5WZXpobnNkVGpVUllFcWZqQ211UHpRIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDQ1MAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3ODAtODA0MCDpq5jnn6XnnIzpq5jnn6XluILnpZ7nlLDvvJHvvJHvvJnvvJfiiJLvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzMuNTQxMDg1OSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNTEyMDg1OAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjU0MjU1OTU3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy41MTMzODAxNzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy41Mzk4NTk5MjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNTEwNjgwNTIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5Zyf5L2Q44G944GL44G944GL5rip5rOJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzc0NCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAxODk5OTQ3MzYzNzUyODM0NjgyXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlpHSGtkcnVfbzNVTzIxM0dDNGFSSnhyY3V4N2JsV0FzODJEU0ttTnZENGZjaVFPcC1peDhaZmFudzdsWFFmdWp4NGhaVjRDWHBySXJFSzBOM2FVOFFONXYzSVBuelc4S19Ta2hjOGlYZURKNkszUllOTFpUZTE1aGVIb1lSNzRjTkpoWW5LRW1sQmpIaHA0SUdDWWpxbjhNN1Jmem9jSlBEVGF0dzVYbmd1dElGayIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA1NjE2CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKeHhLaDNGa1lUalVSLWhXcE1uekwzWlEiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJHR1I2K0NSIOmrmOefpeW4guOAgemrmOefpeecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE1TUdHUjYrQ1IiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKeHhLaDNGa1lUalVSLWhXcE1uekwzWlEiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgIm1lYWxfdGFrZWF3YXkiLAogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImxhdW5kcnkiLAogICAgICAgICAgICAicmVzdGF1cmFudCIsCiAgICAgICAgICAgICJmb29kIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogODM4CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc4MS01MjEzIOmrmOefpeecjOmmmeWNl+W4gumHjuW4gueUuuadsemHju+8ke+8lu+8k++8kCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzMy41NTgzOTk5LAogICAgICAgICAgICAgICAibG5nIiA6IDEzMy43MDQ4NzA5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuNTU5NjIxNTI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjcwNjIxMjc3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjU1NjkyMTg3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy43MDM1MTMxMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvbG9kZ2luZy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjOTA5Q0UxIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9ob3RlbF9waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi6buS5r2u5rip5rOJIOm+jemmrOOBrua5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQwOTYsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNjk3NjE1NjA5MjIyNzY2MzY0NFwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREphWjl3dGphQ19rdlRWYkZ1OU5VdmozdWlpVldaQVJrZ0k5QkFGR1pxWXJGWFE5Z1ZvdkpDeEZndl84NlJ5aVJSZ2VrdWwtcHlOQllESHBQbmE4QVp4dHY3ZThpbms0MnVaMVhwUnQwV0FTQWV0akhJQ3IwNlVPSTdkbndURlJqZVg3RmpoYXNRUThqcEZfbkllTW44TE9nVzA1VVRBNUZiTUxNY0tKMGV0bE1feXAiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzA3MgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSnhaa1ZveG9DVGpVUmh3VTNFbDNhNFhrIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSFA1Mys5VyDpppnljZfluILjgIHpq5jnn6XnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNU1IUDUzKzlXIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSnhaa1ZveG9DVGpVUmh3VTNFbDNhNFhrIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAibG9kZ2luZyIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyNTEKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzgxLTI2MTYg6auY55+l55yM5ZC+5bed6YOh44GE44Gu55S65Lit44OO5bed77yT77yU4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDMzLjc2ODYxODUsCiAgICAgICAgICAgICAgICJsbmciIDogMTMzLjI4NTAyMDMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy43NzAwMjE0Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuMjg2NDc3MTI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuNzY3MzIxODIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjI4Mzc3NzQ3MDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuacrOW3neOCteOCpuODiiDjg4vjgrjjg6Xjg57jg6siLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogZmFsc2UKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNzIwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDkwMDQyNzM2OTQzMzc0MTQ1NjhcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWl9RRnNmUnBidDVybGJwLUpTOVhVeklSOTVqcEFUcG1sYXhUVHBlQnh2NWt6TWkwSEc5YVVlTF9zajZMemdlUFpFTHNCQ1d2RXZMMTMtNVpCVTFGa2ZNUzRpN3oxLXBPd0Y5STRCNS0xd1VKWkRZQ1FhVFV6a0hyQUFLYjNOTHRCMU9oaG1OQUxIeVEzTGN4Wi0wMUdQeW5waFJjWWxlbk9HNVBoNXpIRVRUTGg5IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDEyODAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpYWk9SVTNIWFVUVVJoSjhlSnJnSG1HayIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlE3OVArQzIg44GE44Gu55S644CB6auY55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTVNUTc5UCtDMiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKWFpPUlUzSFhVVFVSaEo4ZUpyZ0htR2siLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA0CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc4My0wMDI1IOmrmOefpeecjOWNl+WbveW4guS4i+acq+advu+8ke+8kO+8liIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzMy41OTAxMjAzLAogICAgICAgICAgICAgICAibG5nIiA6IDEzMy42NTA4Njk1CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuNTkxNjE3ODc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjY1MjIyMDIyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjU4ODkxODIyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy42NDk1MjA1NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlpKnnhLbjga7mua8g44Gq44GM44GK44GL5rip5rOJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTU4NCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE0NTUyNjMzODc1NjI3MjA0Nzk3XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmJLNktENnBBS2ZoRkQyT3BzbklZbFdzZHRoemhvOVlhbnNkN3JCenBBZ2xTejllYmNoOGVxZi1NSU96cHo1dmZKc0l5WTlhYU9vWThfS0pqbDVaRHdibWZFbFRSMldndEpuOS12TGwyNFJzQTBnNGJfdl9lcFA2dkdwTTVoM3hhaTNnR2UtSlBtY1oyU19zME42OUplOTBKU3JrVjBlU05HVEViZ3F6dm1BTTZFTSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyMzc1CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKZTZOdElLY0NUalVSb1Q0bUVTOXZoUkEiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJITVIyKzI4IOWNl+WbveW4guOAgemrmOefpeecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE1TUhNUjIrMjgiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKZTZOdElLY0NUalVSb1Q0bUVTOXZoUkEiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDQ0MgogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3ODctMTQ0MSDpq5jnn6XnnIzlm5vkuIfljYHluILkvIrmiY3ljp/vvJbvvJjvvJQiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzMuMDcwMjkyOCwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzIuOTUyMjgzNgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjA3MTcwMTgyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMi45NTM2MjA5Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy4wNjkwMDIxNzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzIuOTUwOTIxMzIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi6Lu944OI44Op44K144Km44OK5Zub5LiH5Y2BIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIyNTAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwODE3NDIzMTYzNzg1NzM3MTAyNFwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpZYmtuSkJNWkNKTnlXMHVucmhLNC1pTXBnUkUyWWdPZDktSFhENDU2S0hidllGQ2d6UFhlZTN3aUpwVVoyQUs5dTZ3aGNMTjRxQUJVOUMtUHE1dWZzNVpvTmJ0YzVGUk0xdmNjRkxfelpUd2RmcE1vdGxZY19lakZ4cFBUZGRtNXd1M21POThTSGZ3VUY3QlhSU3FjaGI4QXVqZWtKSEtGM1BhY053S1VsYUdObkQiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAwMAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSm1jOTE4MmNYVHpVUlRQSUpvYmhwbXNvIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiM1hDMis0VyDlm5vkuIfljYHluILjgIHpq5jnn6XnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNUozWEMyKzRXIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDUsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUptYzkxODJjWFR6VVJUUElKb2JocG1zbyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDEKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzgxLTExMDUg6auY55+l55yM5Zyf5L2Q5biC6JOu5rGg77yS77yS77yZ77yQIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDMzLjQ4NjE0OTMsCiAgICAgICAgICAgICAgICJsbmciIDogMTMzLjM5MTYxMjEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy40ODczNzMxNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuMzkzMDAxNzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuNDg0NjczNTIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjM5MDMwMjEyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOBhOOChOOBo+OBl+ODvOWcn+S9kCIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQwMzIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMzM5NzQwNzI4NzE4ODgzOTg1NlwiXHUwMDNl5qOu5r6k5LiA5b+DXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmFNQW11dGZ5UEo1NG5OR0JtOE1JazhIb0ItdkR4T2hzWnFGUnNWNFNfNGt0V1FTX1lpQklIS3JlT3BzYnpuaDRNTFhrX1JkNXRJSTBCZG0ya24zdmxEekpxWkVCdVRLYl9Ldko3V29fLWFYOVRSNUU3aUUxY3JxZ1F5cWlVVVhCOGF6bzVjM0I0Z2xDY1VLcW1QYldFYXlmLURyRzRPVFVBRTZqLWFIdkU4b1VRVyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyMjY4CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKQjkxbU4xODVUalVSLUR2bzF5ZmNoRHciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJGOVBSK0ZNIOWcn+S9kOW4guOAgemrmOefpeecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE1TUY5UFIrRk0iCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC4xLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKQjkxbU4xODVUalVSLUR2bzF5ZmNoRHciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyNwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3ODEtMDMwNCDpq5jnn6XnnIzpq5jnn6XluILmmKXph47nlLropb/liIbvvJPvvJXvvJTvvJYiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzMuNTA3NjY5MywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNDk1MTQxOAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjUwOTA3MjMyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy40OTYyODQ5Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy41MDYzNzI2NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNDkzNTg1MjcwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5aSp54S25rip5rOJ44Gv44KL44Gu44Gu5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAxNTMyOTA0MTMwMTkwNzMxNDM5XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmFNZzQyZjQzTVNFUlh2blFfNlFpSVc5R2pIT1ZDYjRic3AxRHBlYzdoRjhtSm12VGdXTUpXZDNfY2VIQVppckppT3N2YTFROUhubTdVUkVockQ4a253blQ3M0dJUHFTM3E1cXE5MFM5UXBaS1pNanFBZ1ZrWFZiWXNTWE1DMDdLTnB3Z3NMREFuUnRjaU0xOWhXODhYYms0ZUtyUEVVOC1Jc0xlUjlDYW5UeTZJIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpaZF8yV2ZBWFRqVVI0MWQ2R281U1RzQSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkdGNVcrMzMg6auY55+l5biC44CB6auY55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTVNR0Y1VyszMyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpaZF8yV2ZBWFRqVVI0MWQ2R281U1RzQSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogODg2CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc4Ny0xMTA2IOmrmOefpeecjOWbm+S4h+WNgeW4guWyqeeUsCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzMy4wMDQ1Nzg3LAogICAgICAgICAgICAgICAibG5nIiA6IDEzMi45MTg5MjUzCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuMDA1OTkwMTc5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMyLjkyMDIxNTEyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjAwMzI5MDUyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMi45MTc1MTU0NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLou73jg4jjg6njgrXjgqbjg4oiLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUplN2R4SVFzX1R6VVJQckFnZDRlZ1ZvTSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjJXMzkrUkgg5Zub5LiH5Y2B5biC44CB6auY55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTVKMlczOStSSCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAwLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKZTdkeElRc19UelVSUHJBZ2Q0ZWdWb00iLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc4Ny0xMjIxIOmrmOefpeecjOWbm+S4h+WNgeW4guS4iemHjCDmsojkuIvmqYsiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzMuMDExNzM5NywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzIuODc0MDk2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuMDEzMjk2MTI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMyLjg3NDk0OTYyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjAxMDU5NjQ3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMi44NzIyNDk5NzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlm5vkuIfljYHou73jg4jjg6njgrXjgqbjg4oiLAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA2MDYsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMzczMDgwOTMxODMwMjMyMjU1N1wiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpZZUNkX3V6QjFiS1o1QzcxTzJVaGV5d0E4MmlPU0pwM1JaajJ2WlE4Zy1QaUpMLWhyakkxdmlmM2xuYVRHTHNWbU5wMXdKS1ZNa3FaY3kwZWhrN2lJdzZsbHg3TEVXbS0yWnJjMUxWVW95b1ZtZ0NqVldyeURLM3BtTGxQcE9VUk9pbGxJMS13RnptbjZidy15aXNxZXp4ODJfaVMxUWpiTjNQNlliMWlGNXFtaFoiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNzM2CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKd3lEQ0k4QkJUelVSbmVxWlRzOWFab1UiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICIyVjZGK01KIOWbm+S4h+WNgeW4guOAgemrmOefpeecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE1SjJWNkYrTUoiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSnd5RENJOEJCVHpVUm5lcVpUczlhWm9VIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjEKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzgxLTgwMDgg6auY55+l55yM6auY55+l5biC5r2u5paw55S677yR5LiB55uu77yY4oiS77yR77yZIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDMzLjU1MTU1MTEsCiAgICAgICAgICAgICAgICJsbmciIDogMTMzLjU0ODk1MjIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy41NTI4Njg3Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNTUwMjc2NDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuNTUwMTY5MDcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjU0NzU3NjgyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIua9rua5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzNzU3LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTM1MTMxODYxODg2MDAxMzc0MzlcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWjFEemR0aV9JUDF2OXRBWnM5MG9RYjlnZjc1bW03NGtPZDVjOVFyTTN6bnpQRDJVeVFmYXV0Ul9qeURhYldRWjFRU00zNnRFQ3FZY2hnWjlLN3E3NFhoc3h3ZWZxTW01aGtsM3dFZHFyRzQ3YzB4MUZaTHlRXzZuVUVSRUFIV0F0allUMlZIUkZ5cjU3YXJmREZoczd4amc5QlRhMXpBUUpxbzN3clRTYlh5ZDdEIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDI4MTgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUppXzFIaVVRWlRqVVJXMzRMYU1WcUtVVSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkhHMlgrSkgg6auY55+l5biC44CB6auY55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTVNSEcyWCtKSCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjMsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUppXzFIaVVRWlRqVVJXMzRMYU1WcUtVVSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyOAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3ODEtNjQxMCDpq5jnn6XnnIzlronoirjpg6HnlLDph47nlLrvvJbvvJPvvJbiiJLvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzMuNDMwODMxLAogICAgICAgICAgICAgICAibG5nIiA6IDEzNC4wMTY0Mjc2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuNDMxODAyOTc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjAxNzY5NDA3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjQyOTEwMzMyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC4wMTQ5OTQ0MjAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgZ/jga7jgZ/jga7muKnms4kiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzNjQ4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTM1NDc1MjE2MTQxNTM5ODMxODRcIlx1MDAzZUtlbiBUYWthbm9cdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWk5PaFhHR1BEekJFT3NiQ1JtNlZ0a282eEh0T2lLU1kyVEptbVQwdms0X3dVUDVKQU9QVmNFVENkdTFha3l1RXZLVUVrV1BPOG5qcEtXaEZqZlJxbVp2bTFmYWJUeURCQnBSRjlIOE05YV9qRnRYd2hDSWE0amdwYV90WWg5cE5lV3NPcUNSN3ltWUE0WnctR0R4dFJsRG9FNEYwMnFhQ1hMTTB1aS14d2xHVnRzIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDU0NzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpRVjhNSVA0SlVqVVJLSVZGVFZRdndYOCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkMySjgrOEgg55Sw6YeO55S644CB6auY55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTVQQzJKOCs4SCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjEsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpRVjhNSVA0SlVqVVJLSVZGVFZRdndYOCIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjEyCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc4MS0zMTAyIOmrmOefpeecjOmrmOefpeW4gumPoeWkp+WIqe+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzMy42MDI2MjA2LAogICAgICAgICAgICAgICAibG5nIiA6IDEzMy40NzM3NDUxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuNjAzOTIxODc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjQ3NTE0NDMyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjYwMTIyMjIyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy40NzI0NDQ2NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgYvjgYzjgb/muKnms4lSSU8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyMzA0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDkzNTk3MTY5MTU2MzM4MDQzOThcIlx1MDAzZemHjueUsOWNg+S4gFx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREphWVZubFNtdTdpQXZqN0ZTcXAxMVRBLTVNMy1McmlYenMxa2xGZXE0TTBNZ0c1ODZqY1ZWLUx2c3pyQUt0dnlJdjZmNlpvbXBfcFVKUHpJUFdRMkJocENVcW5kbU8yQXgxNDkyeUwyaWxQYm4zUElTbVJVTFlKV25qcHRaUUxXd3YtS2d5Z3NCOUtSbDQ5cVJHSzIzQks0NktRVUd3TTNmTG5PRmdwLUtFSHNvT08iLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzA3MgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkgtZ1dwUEFoVGpVUkxOX1BPLTFhMFNJIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSkYzRiszRiDpq5jnn6XluILjgIHpq5jnn6XnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNU1KRjNGKzNGIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuOSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkgtZ1dwUEFoVGpVUkxOX1BPLTFhMFNJIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDcwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjc4MS0wMDE1IOmrmOefpeecjOmrmOefpeW4guiWiumHjuilv+eUuu+8k+S4geebru+8ke+8k+KIku+8lyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzMy41NzY2NTA0LAogICAgICAgICAgICAgICAibG5nIiA6IDEzMy41NTMwODQ3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuNTc4MDAyMzc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjU1NDQxNzc3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDMzLjU3NTMwMjcyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy41NTE3MTgxMjAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlpbPmgKflsILnlKjlsqnnm6TmtbTlrqTjgYLjgZbjgb/jga4iLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp5LU0zZXFNZVRqVVJmbW1vVUxKZ2FLayIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkhIRzMrTTcg6auY55+l5biC44CB6auY55+l55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTVNSEhHMytNNyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA1LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKeS1NM2VxTWVUalVSZm1tb1VMSmdhS2siLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDIKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzg1LTA2MjEg6auY55+l55yM6auY5bKh6YOh5qK85Y6f55S65aSq6YOO5bed77yT77yX77yY77yVIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDMzLjM4NzY1MDgsCiAgICAgICAgICAgICAgICJsbmciIDogMTMyLjk0MzQxNzcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzMy4zODg5MDcxMjk4OTI3MSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzIuOTQ0OTk3NTc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzMuMzg2MjA3NDcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMyLjk0MjI5NzkyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIumbsuOBruS4iuOBrua4qeaziSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMTcxODgyMDE5NzA3NzIzOTAyNlwiXHUwMDNldGFrYVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREphOW9nc2R5MTF2MkRFeloyQjB6eVV0b1dQMkxxMWhjOElFazZ0UnAwdnh6Uzk1Z1hsRnJhN1VfaWYzcWd5eENKbDYwN25OV1otV3pLUGpzb0FvZFdqdlY2UE8wQjdSczI5V21pM1hGSkJaSVBrM2F6V0ZET2paeDY3eEMxbXNvbngwb0ZxbzZRaUlJcHVTaVFsRHhyNzBXbGF0NS1YMGxkbWVCT2ZKY2RSa015VSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKLVFfZVlxcW1UelVSN2M5VFRTNnhFaTQiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI5V1FWKzM5IOaivOWOn+eUuuOAgemrmOefpeecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE1SjlXUVYrMzkiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC4xLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKLVFfZVlxcW1UelVSN2M5VFRTNnhFaTQiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMzAzCiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0=
  recorded_at: Fri, 05 Apr 2024 11:14:05 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=some_keyword,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 05 Apr 2024 11:14:06 GMT
      Expires:
      - Fri, 05 Apr 2024 11:19:06 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42677'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=764
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 05 Apr 2024 11:14:07 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%A6%8F%E4%BA%95%E7%9C%8C%20%E5%84%AA%E8%8A%B1%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 05 Apr 2024 11:14:34 GMT
      Expires:
      - Fri, 05 Apr 2024 11:19:34 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41301'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=432
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 05 Apr 2024 11:14:35 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%85%B5%E5%BA%AB%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 05 Apr 2024 11:14:35 GMT
      Expires:
      - Fri, 05 Apr 2024 11:19:35 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42547'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=532
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 05 Apr 2024 11:14:36 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%B1%A0%E8%A2%8B,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 05 Apr 2024 11:14:36 GMT
      Expires:
      - Fri, 05 Apr 2024 11:19:36 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '36207'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=419
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 05 Apr 2024 11:14:36 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B1%B1%E5%8F%A3%E7%9C%8C%20%E6%96%B0%E5%A4%A7%E8%BC%9D%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 05 Apr 2024 11:14:55 GMT
      Expires:
      - Fri, 05 Apr 2024 11:19:55 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41598'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=699
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 05 Apr 2024 11:14:55 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%95%B7%E5%B4%8E%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 05 Apr 2024 11:14:56 GMT
      Expires:
      - Fri, 05 Apr 2024 11:19:56 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42234'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=422
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 05 Apr 2024 11:14:56 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E5%88%86%E7%9C%8C%20%E5%A4%A7%E4%B8%AD%E9%87%8E%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 02:47:19 GMT
      Expires:
      - Sun, 07 Apr 2024 02:52:19 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '14987'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=356
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 02:47:19 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%AE%AE%E5%9F%8E%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 02:47:19 GMT
      Expires:
      - Sun, 07 Apr 2024 02:52:19 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41806'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=428
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 02:47:19 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%A6%8F%E5%B3%B6%E7%9C%8C%20%E5%8C%97%E5%B2%A9%E5%B4%8E%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 02:48:11 GMT
      Expires:
      - Sun, 07 Apr 2024 02:53:11 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41482'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=459
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJuZXh0X3BhZ2VfdG9rZW4iIDogIkFUcGxESmFGQ2dRaGdjcnd5ZHhsd2JIS2VodHNFTDlYdmI0WjlTRUFJTkctclBPdGdyVFMtdnJ2X3dIUHBiNlRmaVd1MkxRdy1pRDkyV2dBNUNrN1BncjNaX2NqbmRULU0xN3FFRjhZZGNZXzVHMVJqMWc4ZmxwdE82TnQ5bjRSSkhXZVo5THY4dklGVDg0eUZXQ2JBX2o2S0UtOUgzQy1nU3BQY3RqWXdFaURuZ0ZXbjg5UnA4UFAxalBwdC10S09xUW5OZktNLURZbTJnR0dkeXJXZGNpY1pFUlVxdXV4WFpDSk5VaXMxblZ1amNxNGZ1Nmw3UlY1bmxLdWZocjk1UUdWUWJuQWh5b1NKMTdqT0Jzc3dKOUd5c3BjcXVfcGpya0VRNDdIdndaNm9OUWVvNm51Ty1GYm55UlVLWkJaVXp6NGZVdTRqT20wN1c2cnVwWXF3dW9FOGpmNUxOa3FZa0VQb0RIVjJERndoZmlGUnRHa09Kajc3cjZvUWRLdVRsbUdiSlJpYVZ1QXowaXNNZE5HcHgxS2tQQ21RXzVRbkRRQUtpRWciLAogICAicmVzdWx0cyIgOiAKICAgWwogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5NjAtMDEwMiDnpo/ls7bnnIznpo/ls7bluILpjoznlLDmsrzliY3vvJHvvJQiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzcuNzkxOTUzLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC41MTIzNDI3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuNzkzMzY1MzI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjUxMzYwMDMyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3Ljc5MDY2NTY3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC41MTA5MDA2NzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgrXjgqbjg4rlsI/lsYsgZ29lbW9uIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTEwOSwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA3NjQyNzA2MDUyMDg2MDY0NzczXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlp2RzNYSzU1MFc2SXBsQnN0STBPLWUtUWhrU08wbno5Q3MxRmx2Rm9IenpyVDhqV0RrVThENEh4ME5Jc3NrSU52TXVtUjdvV180OTdCUVU2THB0WXlLZlZmTEFpNGR6NU1kTksyQ1duQzgzRHUxYUtkbW5LU2tYWGcwOG90eEJCRlZFTmhOem8xUVJsclI5S3NWVVhscUhYRzhvZjJIUjhJUjNIalAzSEc2a0lQQSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxNDc5CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKaTVnV0NQeUhpbDhSeDM5dmZ5dkZmN2ciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJRR1I2K1FXIOemj+WztuW4guOAgeemj+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI5MlFHUjYrUVciCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSmk1Z1dDUHlIaWw4UngzOXZmeXZGZjdnIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5NjQtMDg2MiDnpo/ls7bnnIzkuozmnKzmnb7luILmnYnnlLDpp4TlrZDlhoXvvJTvvJciLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzcuNTcxNjExLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC40MTg2MzEyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuNTczMDE1NzI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjQxOTg3Mjk3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3LjU3MDMxNjA3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC40MTcxNzMzMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjg5DjgqTjg5HjgrnjgrXjgqbjg4oiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyMjY4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDA3NDMwNzkyMTAwMzg4NDg5MzFcIlx1MDAzZeOBp+OCk+OBvOOBhiBfXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlpCU0pReUwtNWItMWtfMWEteVYwRmhDeUpCRXhIZW11cU9GTkx1ZGkyVDlNcGRwSllvc3k5SFNGQTczNDUtaHZEclNfWjlrX2p4enJORExFZEhrZVpfbFN2eUxGY2NvUC1scTl5TmdaUmptUXpnblpNYU5uZmM0N2Vxb0JxN3lXSmtzRFNBU2lZeDQxMW95UHBnTXZOM3p3UnpNRFUzaDR5RVkyN01za1RaYkI1SyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKZTdCbGtqeDBJR0FScmtDNFVESlptV3MiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJIQ0M5K0pDIOS6jOacrOadvuW4guOAgeemj+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI5MkhDQzkrSkMiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKZTdCbGtqeDBJR0FScmtDNFVESlptV3MiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxOQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5NzItODMyMSDnpo/ls7bnnIzjgYTjgo/jgY3luILluLjno5Dmua/mnKznlLrkuInlh73vvJHvvJjvvJPiiJLvvJQg44Kz44O844Od44GV44Gv44GT44Gu44KGIO+8ku+8kO+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNy4wMTAxOTAyLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC44NDUyNTEzCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuMDExNTkwNTI5ODkyNzEsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjg0NjU5MjgyOTg5MjgKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3LjAwODg5MDg3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC44NDM4OTMxNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJwcml2YXRlIHNhdW5hIOOBleOBr+OBk+WJjSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDAwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDI1MTgxNjg3ODgzMTEyMDcwNzNcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKYWRrT3N5OEtDUy1aZkNQakpXRUI2Ry1IUnRtYUVHRkZlTWFMdnM2X3E4OVh0SXdnQWFleTEtc1NEZ2xqeEVLWWVNQkZYbFo3aGl3UnVnY2loN0N6aHl2WTBNN3dCRkJ1eGdRWHJaTTNwbG5yalJRcnZIQkJ1Rk8xWHNqMWhfdkJoQWZKaVkxSU9DbDF4czA4enF3dXE3V202el92Vkx4Z1hRWk5DZ2k2ejNGN25kIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDIwMDEKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUo5MzR4MDZVUElXQVI5bXNCMGJtZG1SUSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjJSNlcrMzMg44GE44KP44GN5biC44CB56aP5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UjkyMlI2VyszMyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUo5MzR4MDZVUElXQVI5bXNCMGJtZG1SUSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDMKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSOTYwLTA0NTYg56aP5bO255yM5LyK6YGU5biC5Lit6YGTMzLiiJLvvJHvvJUiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzcuODE5MTQ1LAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC40OTE4MDI0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuODIwNDQ0Mjc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjQ5MzEyNjk3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3LjgxNzc0NDYyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC40OTA0MjczMjAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjg5Xjg6rjg7zjgrXjgqbjg4rjgqvjg7znpo/ls7blupciLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxMTA5LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDk2NTgzNDgyMTc1ODM0NzMxMTlcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWjRwb3U4VXhzSU9FZURGa3lIV3Z3MjRGd2dUUkk2UmVpTFA3cVlqcEJqTkJkYk84d1pTdEI3QnRfN3lzVmtNeEpFaFByZnFvQTVDaXViRFJUbERjcEVMT011bDNfTXRlZ2V3UGRKUzlwQjl0MEZ2bkxIRDJQazdJMVZOSmVUMHlTb25waDB0YnJ3NFFsTXEzNnBRTHUwSVRzZW5mOXRvS3JQYnF6SnlONGYxNlVNIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDE0NzkKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpLN2J4VGZHSmlsOFJXNDVJMkY0bFJ2cyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlJGOVIrTVAg5LyK6YGU5biC44CB56aP5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UjkyUkY5UitNUCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA1LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKSzdieFRmR0ppbDhSVzQ1STJGNGxSdnMiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjk2MC04MDMxIOemj+WztuecjOemj+WztuW4guaghOeUuu+8luKIku+8lyDjg5Xjg63jg7Pjg4bjgqPjgqLjg5Pjg6sgNemajiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNy43NTQ0NDEzLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC40NjE3MzA3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuNzU1NzkxMTI5ODkyNzEsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjQ2MzEzNzUyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3Ljc1MzA5MTQ3MDEwNzI2LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC40NjA0Mzc4NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgrXjgqbjg4og77ym772l44OI44Kl44O844OqU0FVTkEgRu+9pVR1dWxpIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTM2NSwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA0NzExMjc2MDQxOTc5NzU2OTkyXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmFwSkVJOGczeDdKbmVFVkU2OGhGektPalJWeDVqVGJOWHJPS0Ffek92dVcyMjIwdG41YkNJSmZjNzhfcWoySnEwQ1I3VUgyZ2VfUUc5cFozcUxlc3F1U1NGWEdxbE9pUkdmZmdBV3hQcVFUQkZXNE1xZDktRlRpUWYxOTU1VzlmZm5xcUVQZ2ZzVzZkbTJyS2YwZ0RGaFUtWG5QTWpweFBwQkZWVTdTOXNfMXlFNSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyMDQ4CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKbFVJaVBRR0ZpbDhSSkNVd1lvR0FZRTgiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJRRjM2K1FNIOemj+WztuW4guOAgeemj+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI5MlFGMzYrUU0iCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC4zLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKbFVJaVBRR0ZpbDhSSkNVd1lvR0FZRTgiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA0NwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5NjAtMDYxMiDnpo/ls7bnnIzkvIrpgZTluILkv53ljp/nlLrlrq7kuIvvvJHvvJbvvJbiiJLvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzcuODE5MDU4LAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC41NTgyMDYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy44MjA0MDg3Mjk4OTI3MSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNTU5NTI4NTc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuODE3NzA5MDcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjU1NjgyODkyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIumChOWFg+mZtuadv+a1tCDlkozjgb/jga7nmZIiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogZmFsc2UKICAgICAgICAgfSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKQTdnZjZ6VjlpbDhSeFk5QS11bEYzenciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJSSDk1K0o3IOS8iumBlOW4guOAgeemj+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI5MlJIOTUrSjciCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy41LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKQTdnZjZ6VjlpbDhSeFk5QS11bEYzenciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA2CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjk3MC04MDI2IOemj+WztuecjOOBhOOCj+OBjeW4guW5s+eZvemKgOeUuu+8leKIku+8ke+8lSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNy4wNTc2MTUyLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC44OTQ2NDcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy4wNTkwMDMzMjk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuODk2MDE2MjI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuMDU2MzAzNjcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjg5MzMxNjU3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9sb2RnaW5nLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM5MDlDRTEiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2hvdGVsX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgqvjg5fjgrvjg6vjg5vjg4bjg6sg44K144Km44OK77yG5aSn5rW05aC0IOODquODleODrCDjgYTjgo/jgY3pp4XliY3lupciLAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDY3OTM0OTYyMDIzNDU3NTY0OTFcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWnNyMjVxc3NQUGJEV015cWV1Sl9FNkprc0ZTLUYyV0VlVFJsaWdZYW1oMm1EeEJ2S2l0V3FkMTlEOUp5RUFnQ0JKUjB3ZVphVEVHaEd3ZEZfY1ZPbzhudEtqcUdkelNYaTZlYkVCOWxESGVjbElkUDg3aXRITkhRLURGQWJmTDloV3J0am5yM1djei1JbXBUem9LcmFiYkFBZUd6cExxb0l2VDNNd2l2OEllXzFtIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpGWEZLcWZvUklXQVJKaVAxTHJMYjhBdyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjNWNVYrMlIg44GE44KP44GN5biC44CB56aP5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UjkyM1Y1VisyUiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpGWEZLcWZvUklXQVJKaVAxTHJMYjhBdyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAibG9kZ2luZyIsCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjYxCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjk3NS0wMDA4IOemj+WztuecjOWNl+ebuOmmrOW4guWOn+eUuuWMuuacrOeUuu+8k+S4geebru+8ku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNy42NDM1MzQyLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC45NTg1NzkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy42NDQ4ODU2Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuOTU5NzYwMDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuNjQyMTg2MDIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjk1NzA2MDQyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCteOCpuODiueZuumBlCIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIwMDAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNjk1MDgwMzMwNjUzNjIyNDEyOFwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpaem1YbFQtMUplcmtnLS04RlJSMnNPQ1Q1WUNyTHVEV0RPLVZUNU1xX0huU20wNjJyWXhkSWszMHVuOEhWWmVUazVveTJLT21FOEtsc3hXUTg3M1J0WVZSalRLb2N5VElHYXpydjB5ODY3NFpzaFBLYmtVbllfanczRXNhSkUxYnBqQXNMZUZMQ3dfY1dGNzJ3UmtiTjY2RU5UUnU5eWZ6TEZJa0hnTHZjbGFJclgiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAwMAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSmI4TnlDOS1YSUdBUkRraFI3ZlVqd0RrIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSlhWNStDQyDljZfnm7jppqzluILjgIHnpo/ls7bnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSOTJKWFY1K0NDIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDUsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpiOE55QzktWElHQVJEa2hSN2ZVandEayIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE4CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjk2Mi0wODY3IOemj+WztuecjOmgiOizgOW3neW4guaEm+WuleWxse+8le+8meKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNy4yOTEwODk4LAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC4zODIyOTM2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuMjkyNDY3Mzc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjM4MzY0MjUyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3LjI4OTc2NzcyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC4zODA5NDI4NzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJTYXVuYSAmIFNwYSBHcmVlbiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMzAxNDIyODkzMTIyNTczNDM3MVwiXHUwMDNl6aeS5bSO5byY5qi5XHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlpvTU9ZYzZMVnBDanBVeVVoWDUyUjkxMnpMZFJTek9uc21BSUxjR2dlSkJ3cWxWVVRqY3QxRV8yQUZrbW1LeTllcDl2b0lrc0c3Y2F1OTJVY2lxNFVlNWtQTkZaZmFLZ09kNTBncWJFczVSNTNsTHRIOE9KUGtZaWFOTnZyNDMtMEVIMS1ENDNlYUJlVlFTNTUwbVpPbDVsYzM3b1F1OVZFanNpblp1X0IzeTkzeSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKSlpkSXFSNUJJR0FSVGI2QW0tZEdNRUUiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI3OVJKK0NXIOmgiOizgOW3neW4guOAgeemj+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI5Mjc5UkorQ1ciCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy41LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKSlpkSXFSNUJJR0FSVGI2QW0tZEdNRUUiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNTgKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSOTYyLTA0MDMg56aP5bO255yM6aCI6LOA5bed5biC5ruR5bed6Zai44OO5LiK77yS77yS4oiS77ySIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM3LjMyNjAzMzUsCiAgICAgICAgICAgICAgICJsbmciIDogMTQwLjM2Mzg4NzYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy4zMjcyMzYwMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMzY1NDMwNTI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuMzI0NTM2MzcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjM2MjczMDg3MDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOBsuOBsOOCiuWBpeW6t+ODqeODs+ODieOCouOCq+OCueODquWupCIsCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDUzMTIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMjczOTM2OTYyMzYzODk3NjcyNlwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpZaWZuUGJ3MHVsT0daVjlhWV80VFZma0ZVd3liYXZiejBjVlVjeHBFOU04TFp4WlpOWk95bjZIQ2MzVktmMmIzNGd2azZKU0F3Zk1UOW1DcGliTDk5b3lnZVNqN1BIMkFBLVA5OHlhQTN4cm1SU1p6UlhiZDJmcGl6TmRYVmtpQTZwWVkxQmgtZTFqTzNVT2VUc0E0OUZTd0g5SnpZWUw2MEFOWnYyUTAzR0pNdyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyOTg4CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKOFc3WXliNXFJR0FSN3hhZy00ZGNZY0EiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICI4OUc3K0NKIOmgiOizgOW3neW4guOAgeemj+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI5Mjg5RzcrQ0oiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKOFc3WXliNXFJR0FSN3hhZy00ZGNZY0EiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA0CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjk2Mi0wNjIzIOemj+WztuecjOWyqeeArOmDoeWkqeaghOadkee+vemzpemrmOaIuOWxizM5IiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM3LjIzMTY3ODksCiAgICAgICAgICAgICAgICJsbmciIDogMTQwLjA1NDQxMTYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy4yMzMwMTMyNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMDU1Nzk5Nzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuMjMwMzEzNjIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjA1MzEwMDEyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuajruOBruOCteOCpuODiu+9nuOCq+ODmeODqu+9nu+9nOOCqOODs+OCvOODq+ODleOCqeODrOOCueODiOeZveays+mrmOWOnyIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDI4OTYsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMDA2Njg5MDI2MTY5MjYyNDgyNlwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpiZU1VZVo3QVdzVTlhMm1Zd29ZX0RTc1V1aFhBd0FDbUwxeE9RYVlldUNIWXI0ZzZMbm5kQ28tSkYzN3hZRWZjQzFaOTY2R1NnSTZZLWt2Z1dBaGI3UEJYd0t3ZFBhRENVR0J0X3lXd25lcjNZdG00TUdtQkNlWG43bXVTY2xPMEplTGFRdUs0RElqaE1uT3QxUjllMm5KN2xRbTB1aTJsY3AzeE9HQ1ZxdlN1M08iLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzg2MQogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSjhXWVpKRFFmSUdBUnJZX2FZaXBWTS04IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiNjNKMytNUSDlpKnmoITmnZHjgIHnpo/ls7bnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSOTI2M0ozK01RIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuOCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSjhXWVpKRFFmSUdBUnJZX2FZaXBWTS04IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5NjMtODAwNSDnpo/ls7bnnIzpg6HlsbHluILmuIXmsLTlj7DvvJLkuIHnm67vvJHiiJLvvJHvvJUg44GV44GP44KJ44K744Oz44K/44O844OT44OrIDJGIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM3LjM5OTUyODUsCiAgICAgICAgICAgICAgICJsbmciIDogMTQwLjM4MDg3MjIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy40MDA4MDc0Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMzgyMTkwNjI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuMzk4MTA3NzcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjM3OTQ5MDk3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuODl+ODqeOCpOODmeODvOODiOOCteOCpuODiiDjgrfjg5fjgq8iLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpsVDBWUndwdElHQVJsa21yNXoyYkNFdyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjk5WEorUjgg6YOh5bGx5biC44CB56aP5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UjkyOTlYSitSOCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAwLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKbFQwVlJ3cHRJR0FSbGttcjV6MmJDRXciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjk2MC0wMTEzIOemj+WztuecjOemj+WztuW4guWMl+efoumHjuebruWOn+eUsO+8le+8l+KIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNy43OTI3MzAwMDAwMDAwMSwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNDU3NDE0OQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3Ljc5NDA1Mzc3OTg5MjczLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC40NTg2MTg5Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy43OTEzNTQxMjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNDU1OTE5MzIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5bWQ44Gu5rmv56aP5bO25bqXIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAwOTU5NTA3ODU5NTIxNjAwNzM1XCJcdTAwM2VkYWlzdWtlIG1vcml5YW1hXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESllDZ3ZfUzVuVEhjUlBDSEk3bU12RGg1WW1sSlVROE5BakFpUDRkbWtLeVBIS2ZPdzF5ZXczc3g5N2tLdzU4NHJRU0hPbGx4dGNlR01QOFBNdDV6Q0R2bE4yYUY0M3NkZzFDSGNXSVZkSW5zbEdoQkpOWWx3ZmdRRWJ2bUxJMTBaM2hRbTJGaXFhNHotRXBXcHRQdHRMaE5qUFNkRGZURTg1S3VBVmZEeHVTdkpwSiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKRTlZVUhyMklpbDhScVctOUhQcGI2V28iLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJRRlY0KzNYIOemj+WztuW4guOAgeemj+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI5MlFGVjQrM1giCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKRTlZVUhyMklpbDhScVctOUhQcGI2V28iLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDExNAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5NjktMzI4NSDnpo/ls7bnnIzogLbpurvpg6HnjKroi5fku6PnlLrnv4HmsqLplbfmtZzvvJjvvJfvvJAiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzcuNTIzNTUxNywKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMDQ3NTY3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuNTI0OTg2NzI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjA0ODc3MjUyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3LjUyMjI4NzA3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC4wNDYwNzI4NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJNSU5BVE9ZQSBTQVVOQSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQwMzIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNjIzMjIxMDkwOTg1ODI3NTI5MlwiXHUwMDNl5L2Q6Jek5rGwXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmFEaDdZVFcxVUQ3MXU3cndId29fZXEtdElQXzFzeW50OTRiME5rUmVfaEVKc1JEMEY4cE9zdWNtUXNWaThqSC1oRXN5VHNLS2hGVjdKN0k4MXdwb1o0U28tUERxZUhKV0NsdjhFU2J3UHRWM1NwSEhfRjV1YkRSSlExbk9PMlZUN0J1UFJYYk41Z0xleHBCd3RRUUl1X2xxbXY3UldGdWx3YXdMVXZiNzRWOEUxOSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAyMjY4CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKTmJyY05RMnJpbDhSSnNPU2pDYlNoSnMiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJHMkZYK0MyIOeMquiLl+S7o+eUuuOAgeemj+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI5MkcyRlgrQzIiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKTmJyY05RMnJpbDhSSnNPU2pDYlNoSnMiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA5NzAKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSOTc0LTgyMjEg56aP5bO255yM44GE44KP44GN5biC5bCP5rWc55S65Lit44OO5L2c77yU77yV4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM2LjkyMTI5NiwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuODM5MTI2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzYuOTIyNTQ3OTI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjg0MDA0ODMyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM2LjkxOTg0ODI3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC44MzczNDg2NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLljJfmipXjga7mua8g44GE44KP44GN5YGl5bq344K744Oz44K/44O8IiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjAwMCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA2MzM2ODA5NTUzNTE0MTk0MjcwXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmI0QkVPS2dkWEFrVjAzMUY0UmxRcExiOXoxbWRjRlROMmF4WktmcDViZm82VEFxT28zVDNXYjFGaDB1dkQ3YmlWbk5HbmhHOE9RU2RjYTFxSGhNaFdKNVl4bEtLMjFPZHo3TFE2Rklnb19rX0xrdW5DdzltRnViLUdZTEgyOFNpWU5oYzJSTlk4VkZhYVZMeFRqMjlNU3pIQWxqUzZUOFNYak9ic3czS0FCd2RBOSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzMDAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKQnlmZTNWTU5JV0FSNGVrbTByZFBkTTAiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJXUkNRK0dNIOOBhOOCj+OBjeW4guOAgeemj+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI4MldSQ1ErR00iCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy42LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKQnlmZTNWTU5JV0FSNGVrbTByZFBkTTAiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDYzNQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5NjAtODEwMiDnpo/ls7bnnIznpo/ls7bluILljJfnlLrvvJTiiJLvvJHvvJgiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzcuNzUzOTg3OSwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNDcyNjI2NgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3Ljc1NTMyNTE3OTg5MjczLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC40NzM5MzM2Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy43NTI2MjU1MjAxMDcyOSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNDcxMjMzOTcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44Gk44KL44Gu5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDU2NjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMzUzOTg3MDQxMDk4ODY1ODYzNlwiXHUwMDNl6ZW36b6N5piHXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmFrQV91blJFcWFiYmppbjRqX3Rnck9ya1RTZnJKaU84RHhrcHRndTNrc014cm9zRmFMTE41X1J3UTNEV1pXZlpBU2s1MHhlRkZFNUI1WFBqSmpScDVVemd2UzV4T1ZlU2praEE4WlNlMF9jdDJqcHlhdDd1bWk0aElGYzZkZ2FkbVNOdzZ6OEdkWUE2dVF0QkR0MVlOaVN0TlJrX1FIUjdzaFQxUkFyakpHTkkzQSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MjQ4CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKQTVSb0RNMkZpbDhSSVNjVDhjcUpJZlkiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJRRjNGK00zIOemj+WztuW4guOAgeemj+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI5MlFGM0YrTTMiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkE1Um9ETTJGaWw4UklTY1Q4Y3FKSWZZIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE0NwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5NjktMjI3NSDnpo/ls7bnnIzogLbpurvpg6HnjKroi5fku6PnlLrlsbHmvZ/mtZzlv5fnlLDvvJHvvJjvvJXvvJUiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzcuNDg5ODc2NiwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMTU1MTQwMQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3LjQ5MTIxODYyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC4xNTY2MDM2Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy40ODg1MTg5NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuMTUzOTA0MDIwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL3Jlc3RhdXJhbnQtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiI0ZGOUU2NyIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvcmVzdGF1cmFudF9waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAiUm9vdHPnjKroi5fku6MgTGFrZSBBcmVhIOOCsOODqeODs+ODlOODs+OCsCbjgrXjgqbjg4rjg6rjgr7jg7zjg4giLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDM1MDA1ODgyOTY4MDM3Mzg0MzVcIlx1MDAzZeaWsOadkeWFieW5s1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpiRnpOeDJYN3JWSHpVMlp0S0JCYWFaSVJfWUtpN2g4b1liMkdJMThjOTdXenpsT3N3bzN2aWQ2eHFzcDludlFfdGxsWVFWUHo4YmlDWmktQ1RPREQ2UzUtZml3ZEloM05idjVaZkxNNVVHenhEZGhOd0Z1NG1MWlVHVEVoS2EtNHdmaDhZUUZZcTNEZXk2VExrT0RxWEszdm1xQlVuaEtyT1dRQlYzc3NOb0xKYk8iLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSk8xZVFFMmtISUdBUjFvamY5dWp1ckVVIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiRjVRNCtYMyDnjKroi5fku6PnlLrjgIHnpo/ls7bnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSOTJGNVE0K1gzIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuNywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSk8xZVFFMmtISUdBUjFvamY5dWp1ckVVIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJyZXN0YXVyYW50IiwKICAgICAgICAgICAgInRvdXJpc3RfYXR0cmFjdGlvbiIsCiAgICAgICAgICAgICJsb2RnaW5nIiwKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJjbG90aGluZ19zdG9yZSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZm9vZCIsCiAgICAgICAgICAgICJzdG9yZSIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDY1CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjk2MC0wMjAxIOemj+WztuecjOemj+WztuW4gumjr+WdgueUuuWNgee2seeUuu+8k++8kCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNy44MzEyNzYsCiAgICAgICAgICAgICAgICJsbmciIDogMTQwLjQ1NDk5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3LjgzMjY3NzIyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC40NTYyOTgwNzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy44Mjk5Nzc1NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNDUzNTk4NDIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi6aOv5Z2C5rip5rOJIOWFseWQjOa1tOWgtCDms6LmnaXmua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyODQ4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDQzNjU5MDIwOTM0NjY3NDI1MTBcIlx1MDAzZemjr+Wdgua4qeaziSDlhbHlkIzmtbTloLQg5rOi5p2l5rmvXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESllhaV85VGN0czVjSDhhcmhRak4yYjFpS29JTktpUFZZSnUyYVVTckNRenBIR2p1N2JpalVGTi1QZzZHV2FVMms3dlZRNVBaSHpYQW02NGZIZ0hXZTVhZkNBaEM3SVJscl9OLXpsSDhrOEsxdkVlUFg3YXY5Y1d1WjBsaF9ZTVA2eUFkcEhzMWRVLUVaNlAwX0ktdEs2SmVRNkJfZTBvMUUyQ0s5M2czQU5TVlA4dCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0Mjg4CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKR1NMeENyeUppbDhSVzlBN2o3TVZHWHMiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJSRkozK0dYIOemj+WztuW4guOAgeemj+WztuecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFI5MlJGSjMrR1giCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkdTTHhDcnlKaWw4Ulc5QTdqN01WR1hzIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAidG91cmlzdF9hdHRyYWN0aW9uIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTAzMQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI5NzktMDIwMSDnpo/ls7bnnIzjgYTjgo/jgY3luILlm5vlgInnlLrlha3kuIHnm67vvJHvvJbvvJTiiJLvvJIiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzcuMTEyMTgyOSwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuOTk5NTYyMQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3LjExMzU2MjUyOTg5MjczLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MS4wMDA0ODIxNzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNy4xMTA4NjI4NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuOTk3NzgyNTIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5aSq5bmz5rSL5YGl5bq344K744Oz44K/44O844GE44KP44GN6J+55rSX5rip5rOJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA3OTgxMDk2MDM3MTE3OTQwNjIxXCJcdTAwM2XkvZDol6TmmYNcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWmdtejFOX0t2LXVEZWxUVnk3MEduRXlyU0RQZ1dqUUFSYzhDWTY4NFJzOEZyRFAzdVVJbTJOTEM4ekNWaVhVdTNydllpbEJ1azJ5cm8yem03QlMtY0dDUU51RUdvaGs5elViZ3JVVlJmMU95QjNVU1phdHNFU19tby1weGVpRWJzcGJfcWt5Y2haQ28xVFhLNGMtNC12M21zN3g4N0trbWo3bWkzU0JxVE1udWY1IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpsZElESy04WElXQVJKN29XWTgxNjRWbyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIjRYNlgrVlIg44GE44KP44GN5biC44CB56aP5bO255yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UjkyNFg2WCtWUiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpsZElESy04WElXQVJKN29XWTgxNjRWbyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAibG9kZ2luZyIsCiAgICAgICAgICAgICJyZXN0YXVyYW50IiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImZvb2QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA3MzcKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSOTYwLTAyMTEg56aP5bO255yM56aP5bO25biC6aOv5Z2C55S65rmv6YeO5oSb5a6V5YmN77yT77yVIOS7meawl+OBrua5ryIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNy44MzI5NjI3LAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC40NTYyNjY1CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzcuODM0MzI5MDI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjQ1NzUyMjI3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM3LjgzMTYyOTM3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC40NTQ4MjI2MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLpo6/lnYLmuKnms4kg5YWx5ZCM5rW05aC0IOS7meawl+OBrua5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQwMzIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMjQzNzc0MDc0NzM5ODA1OTUxMFwiXHUwMDNlS0VOSUNISSBTRVJJWkFXQVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpaa3ZpNUtoT0VZREZtWlNIQ3dmWnRXNldxZTlDaWVpYTJqNko3cVpvU0ZzZi1LQWtVYmo5UmFBN3hJTDFEY3JQVjY4ZkJDbk1UUG9zVWMyT090TUtERmpnZ2dKWjRuak03WUFzRFJhdWgtQUNRVDl4VGNmRTY4RUpFSVotczNtRGZQWXo1S0xrT3ZTMnlSMzVDVC1XZVFLRzJmcTI1eGRXMDFVVEdsT0xSNk9ZaVYiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAyNAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSjVjN3pCcnlKaWw4UlRzdUtQYjl2Rlo0IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUkZNNCs1RyDnpo/ls7bluILjgIHnpo/ls7bnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSOTJSRk00KzVHIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSjVjN3pCcnlKaWw4UlRzdUtQYjl2Rlo0IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxNTcKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Sun, 07 Apr 2024 02:48:11 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%9F%B3%E5%B7%9D%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 02:48:11 GMT
      Expires:
      - Sun, 07 Apr 2024 02:53:11 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42372'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=419
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 02:48:11 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%AF%8C%E5%B1%B1%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 09:55:20 GMT
      Expires:
      - Sun, 07 Apr 2024 10:00:20 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41670'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=544
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 09:55:20 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%9D%B1%E4%BA%AC%E9%83%BD,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 09:57:09 GMT
      Expires:
      - Sun, 07 Apr 2024 10:02:09 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42647'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=529
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJuZXh0X3BhZ2VfdG9rZW4iIDogIkFUcGxESllPRWVfRFdQMzFlbVo2bG9yZV9YclFjRklydlhSdWh5aHBDZ3lKV19zV3FNZXdfdFQ4QzhhRFg2SWdBXzYyTkdzR3UzYkNOTlBCNnNKNldTMFBlN1RkZGVjTDVMQ0V4MG9oeWhmT3NVN2Z0WUY3MFNRbkUtRU9ITmZIVGdHZjdhU0tvb0U2M01KQm1OTk84aGdJV2VkczlUZnNGU2VLTFpENzMwNTEzZE9HbF9QbVlDYWRLUzREdnBRcEJILXJBUExEeFhfM2xHVFVXSER5N2NSVV9CZzBrVGh3Z2k4bzI2eG9PSTRkNnQ2VEtINlhkN3NTMUNiczBTUVFqM1cza3pXMG5GYVFRbnA0S0l6Wjl3dWtKU1E3Vy0zbnpkU0FsaENxWnMzVENISEthQzdHbXFWdWlwZ3hyLUZJbmF5WDNZdFhfZUtsMTN5a09vNV9uZHhMY3NWeVE1SEJlOXBUSnc2VXI2LUNNUUVKenB3N2lXeVR4XzBBS050UGlCVEpzRzNRdUdjcl9SUHl2bmxkSDRRIiwKICAgInJlc3VsdHMiIDogCiAgIFsKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMTA3LTAwNTIg5p2x5Lqs6YO95riv5Yy66LWk5Z2C77yT5LiB55uu77yR77yT4oiS77yUIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjY3MzI5MSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzM3NzEyNQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjY3NDY1NTQ3OTg5MjczLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MzkwODExNzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NzE5NTU4MjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzM2MzgxNTIwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44K144Km44OK5p2x5LqsIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDAxNiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAyOTQ5ODgxODQyMDU5MjUwODQ5XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmIxb29YX2ZkaDFVV2R6bE9qQTQteGtKVUdXZzdMOTJyX0pyNUZ1dWZsZDk3ZTN6MzhTQkViNDVxWWp1TGhyU3VtQV84Q1RGd292amx6am5DYWRSaURQLW1YQ1dSMUY1NFhFOGFWcGx4RUVWWFhTZFJBYnl5NnJmbVF1WnJXMWJKbXc0MHRiV3ZNcjBDN1JaWEdhcFZCY2c2ajZYUWF2bFh6d0dpOVBZWlBvN01UeCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA2MDE2CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKQ1hYa05IZUxHR0FScTNpeEZLbTdtNXciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJNUEZRKzgzIOa4r+WMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WE1QRlErODMiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC40LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKQ1hYa05IZUxHR0FScTNpeEZLbTdtNXciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAzNzUKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMTEwLTAwMDQg5p2x5Lqs6YO95Y+w5p2x5Yy65LiL6LC377yS5LiB55uu77yU4oiS77yXIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjcyMDkzNywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzgxODg0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzIyMzQzNDI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljc4MzEzNjgyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjcxOTY0Mzc3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43ODA0MzcxNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgrXjgqbjg4rjgrvjg7Pjgr/jg7wiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTEzNTQxNzU3MTM5Njc5MzQ4NDRcIlx1MDAzZUFraXJhIFRhbmFrYVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpZankySDZnQV9EOWlab3o0VmtJRktMemV5NUJ4ZzhJb0Y4alhhS3h2aFpIR1dLYjIxYm42RG1heDA5RHluUVBkcDZwRHB1aDhDRmlTQi0ySlNMNXZkUDFPMHBYSGQ1dV82MEVNMGxnN05fa2ZwdDB4RFBZY3oyTDFZMktTVjRVZGczcXYzUWxIdUxtc1VGU3dFS2lpVzF1M0Itb3dJVmFyQ3NFM0lUS3RIWFFjOXMiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSlM5Z1RRSVdPR0dBUlRnY0NNeE05eE44IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUFFDSis5USDlj7DmnbHljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hQUUNKKzlRIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSlM5Z1RRSVdPR0dBUlRnY0NNeE05eE44IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNTg2CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE3MC0wMDA1IOadseS6rOmDveixiuWztuWMuuWNl+Wkp+Whmu+8k+S4geebru+8k++8mOKIku+8ke+8lSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS43Mjk4ODEyLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MjcwMDA4CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzMxMjIyMDI5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcyODM0Nzk3OTg5MjgKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjcyODUyMjM3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MjU2NDgzMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgrXjgqbjg4og44OL44Ol44O85aSn5aGaIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEwNzY5Mzk2OTMyNDAyNjExMzU4XCJcdTAwM2Vha2lyYSBzYXRveWFtYVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpaOF9heW5kRjR0MVJpdk95bHB4eFdBMWxZRlpxdmJWaHdfV0dJRnZENzFoa3hDbndmaDA4MHBxV29vNURRN1BLUzlYcTQ4TWFlM2hWMWwxMzdfNWxMSkJGeUNDLW80bzd0M05ibEtsdEY1SG1od2JueXQ0djExSmh1elVVSGpFQmZZSWZKbUZtckhLdXdMVzRXcmh2eDJSYWY5Njg3Q2Z3UGRrNjlDS1hGclNFTnEiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkJ5TTJWWEdOR0dBUkYxUGZ2X1dKbEN3IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUFBIRytYUSDosYrls7bljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hQUEhHK1hRIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkJ5TTJWWEdOR0dBUkYxUGZ2X1dKbEN3IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTMwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjExMC0wMDA1IOadseS6rOmDveWPsOadseWMuuS4iumHju+8l+S4geebru+8kuKIku+8ke+8liIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MTMwNDMsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljc3Nzc0NgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjcxNDQxMTUyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43NzkyMzIxNzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MTE3MTE4NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzc2NTMyNTIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44K144Km44OKJuOCq+ODl+OCu+ODq+ODm+ODhuODq+WMl+aspyIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDM5MjYsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNDE3NzQxODYyNTMwMjY4OTg0NVwiXHUwMDNlQWtpaGlzYSBTb21leWFcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWjJka1NvY214d1VBMG9oTDZRVG5YeHpLak1zLXNsTGd0eXA5dnpuZ1dFbEtPekhxTWowSzV3aWJkZm9OSzRudFpRaFBabERiall5S1lSankyU0Q2ZTRBdEpNbUZXTlR0MVZVSVZOUnZjZjlMOXZQM2pjZlVGdlF6MXc2RjRZWS1BWVd5LWtzcGEyR3NQZFRNU1FFbVVTU1hjZUxDc3ZqTHFUVWt6Rl8wVjBBQWVHIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDU4ODYKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpEVGoxclo2T0dHQVJ3MUpDSmlCamVTbyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlBRN0grNjMg5Y+w5p2x5Yy644CB5p2x5Lqs6YO9IiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYUFE3SCs2MyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjEsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpEVGoxclo2T0dHQVJ3MUpDSmlCamVTbyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImxvZGdpbmciLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTQyNAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIxNzEtMDAxNCDmnbHkuqzpg73osYrls7bljLrmsaDooovvvJLkuIHnm67vvJfiiJLvvJcg77yW77ymIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjczMjQyOTcsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcwODYzNzcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MzM3Mzc1Mjk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzA5OTgxNzI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzMxMDM3ODcwMTA3MjksCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcwNzI4MjA3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCteOCpuODiibjg5vjg4bjg6sg44GL44KL44G+44KL5rGg6KKL5bqXIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAyNCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA1NDkxNzIwODg3NTg5NDQ3MzE5XCJcdTAwM2Vtb3Jpb2thIHNvdXNoaVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpiX2h0M3dheHBUU2dST0ZFMjlqQXlSNVZOdmhvZGpmdmZ1VXhKek1OQW44T0ZpNmtaLUJYcXFJVDhIanZfOHpQbUg3am1XT3Nud25FX2djLVZfd0FYM3U4ZXJWQ3dIM1l3R1NLUUo4MXRJLS1UandoU183NEpySVVvdU54bE5xMUZfU285Uzg3Tmpkc1RsSnRwZHJFMVcyNFBqMWpMY08wbklSaG9fLXBEQUtKLW0iLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkxRVmRORjZOR0dBUlI0Yno2VnhkbXB3IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUFBKNStYRiDosYrls7bljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hQUEo1K1hGIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkxRVmRORjZOR0dBUlI0Yno2VnhkbXB3IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAibG9kZ2luZyIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxNDI3CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjEwNS0wMDA0IOadseS6rOmDvea4r+WMuuaWsOapi++8k+S4geebru+8ke+8kuKIku+8kyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NjYwMjY3LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS43NTYzNTgxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjY3NDY5Mzc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljc1NzcyMDkyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjY2NDc2OTcyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43NTUwMjEyNzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgqrjgqLjgrfjgrnjgrXjgqbjg4og44Ki44K544OG44Kj44OrIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNTQ0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTYyMTUxMzMzMDU5NDU4MzI2NTdcIlx1MDAzZeOCquOCouOCt+OCueOCteOCpuODiuOCouOCueODhuOCo+ODq1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpiTE5wTDZFamR3QjN5LTl0M2pnNmhpblB3WDlTOGZIekpqRzc2SzZMeFY3bzM1cFhKLU1LdVY2Ukx4TFM2c3JnYjVKZ09GdzkyVFFWekItdVRwWkFPLS1IY1U2WXlWdlBNTFZNWi1oclluTUJtYUhheDZxYVhLeHBmQktkVXYtUEVOeXBHMDJjSGFNeUJzRHhxNlJGQTZncldURi1Cbk5IeV9CcndDUkVPcGdudU8iLAogICAgICAgICAgICAgICAid2lkdGgiIDogODE2CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKaGJQTHl1dUxHR0FSQldDcm5xT3hraVUiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJNUTg0K0NHIOa4r+WMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WE1RODQrQ0ciCiAgICAgICAgIH0sCiAgICAgICAgICJwcmljZV9sZXZlbCIgOiAyLAogICAgICAgICAicmF0aW5nIiA6IDQuMSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSmhiUEx5dXVMR0dBUkJXQ3JucU94a2lVIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogODI5CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjEzMC0wMDEzIOadseS6rOmDveWiqOeUsOWMuumMpuezuO+8kuS4geebru+8luKIku+8kyDnrKwx6I2S5pyo44OT44OrIDFGIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjY5ODE5MjgsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjgxMTk3NzUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42OTk1MTIxNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODEzMjg1Nzc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjk2ODEyNTIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjgxMDU4NjEyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOCteOCpuODiumMpuezuOeUuiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMDc5NDQxMzgxMDMwMDUwMjM0N1wiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpaWUNYOGplX2E2VUZfMUQyR0hlNWxMMzVsVFdhUVJZWHFKMFE2bGlsdmJIY1AzdmJUeE9ncy1XVHdsVDNBWV9xdzR5dmRsWjhCVEZaTFFSdGFHM0xwMmNjMWNoM2ZILXg4ejU0QkhHS3Z4NEpWNVpfYU1MbGxwQWVhZ1JXRktXaktaYmc0ZmVZQ3g5THFVcHhHaUtVaUNDUE1QbFJaN3NzWFhmRHBtcXBlRjhJdlQiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSng4ZXJ1eW1KR0dBUkptdzBGeTVVRFc4IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiTVJYNis3USDloqjnlLDljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hNUlg2KzdRIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuMiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSng4ZXJ1eW1KR0dBUkptdzBGeTVVRFc4IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMzM3CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE2Ni0wMDAzIOadseS6rOmDveadieS4puWMuumrmOWGhuWvuuWNl++8lOS4geebru+8k++8meKIku+8ke+8lyDjg5Pjg6zjg4Pjgrjjgrvjg7Pjgr8gMkYiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzA0OTk4NCwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjU0NDY3NwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjcwNjI4NTk3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS42NTU5MjQ5Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MDM1ODYzMjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjUzMjI1MjcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44K144Km44OK44K144Oz44OH44OD44KtIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjE4NCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAyMDQ5MDU4MTIyNjk0NDUzNTMzXCJcdTAwM2XlsI/lgInlrofmgJ1cdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWmxrOWNGQVdEbThfQ1hONmxxR3p1NGpRNkQ2WVVBS1FvVm52eTg0b1ptM3hOVUk0Y1AtbDJMQ3EyMUFBOWxZU2V0YzlfTnoybERQMVRLRnJEUW1mbnh1WGpsVDl2Y0Z5QW9HTDF2NktiY0todTJmaktEbXlad3paUXplYnlzd09ISFU2ZHlpUmRCT0hpMTJKS2xzNXpUVHQ1RWl1cDIwdG9aX2hENlpZeTBZZlRnIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQ2MDgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpCeVNqbzRqeUdHQVJNbDE1WXdBbGVVNCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlBNMzMrWFEg5p2J5Lim5Yy644CB5p2x5Lqs6YO9IiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYUE0zMytYUSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpCeVNqbzRqeUdHQVJNbDE1WXdBbGVVNCIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDExNQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIxNzktMDA4MSDmnbHkuqzpg73nt7TppqzljLrljJfnlLrvvJbkuIHnm67vvJTiiJLvvJHvvJMiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzYwMDY1MzAwMDAwMDEsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY1NTkyNjYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS43NjE0Mjg0Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjU3Mjk3NjI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzU4NzI4NzcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY1NDU5Nzk3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOChuODvOODneODg+ODnSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDEwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMTQ0MDExNTUxMTE4Njg0NTY1N1wiXHUwMDNl44KG772e44Od44OD44OdXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlplUHFVNzB5N1RlX1pFRi16XzNuN2VhMkhWV0ZXN0doaUFXZFZwRkp5WVk0aUdVbXk5Z0tiNGpQakFJN3JGODMwT1FmWWRMSkNpaWt3eDNXWGVfQnZybGN0Wm1vWTBDNmFNUC03Z2ZyTEVpOEl3Vjg4dUxTRjBXUlZ4MHZmWk0yMUVOQlRSQWhTblNkT01YZDNDaE9WbGd1dzJSWWFXMVpMZGlieHgtWUZuTkNhNiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxNTM2CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKODNaUUdmcnNHR0FSWDhtU1FBSXRiMEEiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJRTTY0KzI5IOe3tOmmrOWMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WFFNNjQrMjkiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKODNaUUdmcnNHR0FSWDhtU1FBSXRiMEEiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjAxCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE2Ny0wMDUzIOadseS6rOmDveadieS4puWMuuilv+iNu+WNl++8k+S4geebru+8ke+8lOKIku+8lyA0RiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MDM0OTA0LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS42MDExMDk2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzA0OTE3NjI5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjYwMjE0NjMyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjcwMjIxNzk3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS41OTk0NDY2NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICJST09GVE9QIFNhdW5hIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDgwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDEyMzk3OTE0MTc2MDExMjQ0MzRcIlx1MDAzZeajrumHjuWuj+ihjFx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpaTFpKdThTVC1adzlMMEI0bHJaOW9pTHRMU3pBSHM1bmdJaEkzaXptU1RPdTNqQXJ5UEpTbFQ3T2c1NXB0bVplT1ZvQVo4SGkwMGRXb0lUNEV2Q1EtRDM3bDRGbEZYcTc4N3ZaeVBGRmV3Vzg1V1JQZWhWZHRBVUx6RFYzeTZELXVfNlZxUDhoR0pUak1CdGlwZXVGRkJmNzhlbjFyaVp5Y0h4VVYwQ2phOVRNaHgiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNjQwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKbHhEem5pZnZHR0FSS0dKUERMWFdWVDQiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJQSjMyKzlDIOadieS4puWMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WFBKMzIrOUMiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC4zLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKbHhEem5pZnZHR0FSS0dKUERMWFdWVDQiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyMTYKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMTA2LTAwMzEg5p2x5Lqs6YO95riv5Yy66KW/6bq75biD77yR5LiB55uu77yX4oiS77ySIOODhuODq+ODnuODvOa5ryDopb/purvluIPlupciLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjYwODY4NSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzI2MjE4NwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjY2MjE1MDAyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43Mjc2OTUwNzk4OTI4CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NTk0NTAzNzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzI0OTk1NDIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44K144Km44OK44O744K544ORIOODhuODq+ODnuODvOa5ryDopb/purvluIMiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDMyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDU4MTIxMzc1NDY0MTA1MjkzNzJcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKYTNEejNpdzduRVMwZVNTREpraVpNdVJJS2I1QTJELXQ5S0M0MGtqYWZKXzZ4VmZNZDhONHRRcjN3YVJDeld3eW44VjlLczFBVWhmZWthNmx0OHVoamRXcWh5NjBuN2xTN29TLV9CRWlnaTVsU2JWVjk5UmJsTVVJTG1ZazBVaVBabUd3d3FfTlJ3aVlPQkJ2ZG54SDllOGdVTU9PMkQxaVUwOTBla2ptTzgxcGtZIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpxNGRuajFhTEdHQVJnVFJFRmM5dFc4RSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIk1QNkcrOEYg5riv5Yy644CB5p2x5Lqs6YO9IiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYTVA2Rys4RiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjYsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpxNGRuajFhTEdHQVJnVFJFRmM5dFc4RSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE2MQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIxNzEtMDA0NCDmnbHkuqzpg73osYrls7bljLrljYPml6nvvJLkuIHnm67vvJHvvJTiiJLvvJHvvJMiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzMyODExLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS42OTIzNTY2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzM0MjIzODI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY5Mzc2NzUyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjczMTUyNDE3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS42OTEwNjc4NzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlgaXlurfjg6njg7Pjg4kg5pyr5bqD5rmv77yI44GZ44GI44Gy44KN44KG77yJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDc1MiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE2MjE4NzQ3Nzc3OTI3ODcwODY2XCJcdTAwM2V5b3NoaWhpdG8gdGFrYWlcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWnExYi1Sb3BobHZJR3JsVXVWR3R0Tk1zWmg2ZDdQamhiQmhCUElEa1FRLTd1Vk44c05tb2dJcElJMlBvVEdqUHRXbDVmanV4SzZuM0lNS3RleVl2WU5PcmR4bmI4cWg1UVJFNVFNUVFIUnV0NldrVV83aUQycGZQaUdwU0JlWmhGV2RlRWhTQ0JiV0IwZl9ZR0FxRjBEQTNZdGZFT0NBVE1vai1LZ1d0UXVlZTV6IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMxNjgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpseUpfUGF1U0dHQVJUQVVkbVUyVDlibyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlBNTVIrNFcg6LGK5bO25Yy644CB5p2x5Lqs6YO9IiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYUE1NUis0VyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpseUpfUGF1U0dHQVJUQVVkbVUyVDlibyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyMzAKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMTY5LTAwNzIg5p2x5Lqs6YO95paw5a6/5Yy65aSn5LmF5L+d77yR5LiB55uu77yR77yS4oiS77ySIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjY5ODg3OTUsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcwMzU5NDcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MDAyMzYxMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzA0OTQ3MDI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjk3NTM2NDcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcwMjI0NzM3MDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuODq+ODk+ODvOODkeODrOOCueODu+mfk+WbveODrOODh+OCo+OCueOCteOCpuODiiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQyMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMjI5NDE2NTMzMzU2NDM2MDQ3OVwiXHUwMDNlTm9yaWtvIFRBTUFISVJPXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlkzcEE0Y2hueUR2VDAzY0tIRzRvWENMT2RyRmpjcU83a0g1SmlRN21ZcXg1THFzOWo3S3didFM4ZDNNVV9iSmFOTFdidk02NWtRcFN4THNfWXU0cGpEQWo3U0NlaFl5YVlMVy1pUkZkM2hwTm1HVnRwWVFsUTJ0SEJXUDB5ejRkanpsRXBXMzdaVlRkUDkya083bDJRMXdfaW5fY3NiTklXdVVQT09wTFo2d0hDRiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MjI0CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKd2I1SW9TZU5HR0FSVG9ZVEwwUndZWUkiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJNUFgzK0hDIOaWsOWuv+WMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WE1QWDMrSEMiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy43LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKd2I1SW9TZU5HR0FSVG9ZVEwwUndZWUkiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyNzkKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMTEzLTAwMzQg5p2x5Lqs6YO95paH5Lqs5Yy65rmv5bO277yT5LiB55uu77yU77yU4oiSNyAzRu+9njlGIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjcwODkzMjksCiAgICAgICAgICAgICAgICJsbmciIDogMTM5Ljc3MTAyNwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjcxMDMzODE3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43NzIzNTUxMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MDc2Mzg1MjAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzY5NjU1NDcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5p2x5Lqs5LiK6YeO44Gu5YCL5a6k44K144Km44OKIFJFRMKwIEUtU0FVTkEgVUVOTyIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMDAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMTY2ODM4NDg3MDEwMDU1MTk3M1wiXHUwMDNl5LyK6Jek5aSn5pmDXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmFmSlRWcmxoaEx1c2J4cXNncUZBdWpwbEpqTE5IeEl3cnpMUHlUcy1wM0ptX25oTDVSV1ZyRUx2MFQ3WmRlMklGYWNxYU85blQtMXVWbHRyTWNsaFFaX3ZCRE1TSXNZVU5HcXdqTFEzNVdycnd2VFMxaHVCTmZZNENQLXlUT3B1eXJlWGZhanVCNXBEeFBMTWQtR0Mzc3dyNm9kal9lVzRDdWphMTlOdGNGTFBjIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUphOW91S0dxTkdHQVJ2aVhPM1Z2YlBwYyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlBRNUMrSEMg5paH5Lqs5Yy644CB5p2x5Lqs6YO9IiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYUFE1QytIQyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjMsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUphOW91S0dxTkdHQVJ2aVhPM1Z2YlBwYyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDQ4CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE1MC0wMDMxIOadseS6rOmDvea4i+iwt+WMuuahnOS4mOeUuu+8ke+8mOKIku+8mSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NTYwNzkxLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MDA4NjI3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjU3NDI3ODc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcwMjIxMTgyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjY1NDcyODIyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS42OTk1MTIxNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmuIvosLdTQVVOQVMiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDMyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTEyMTM2NTY3NDQyMjU3MDE2ODNcIlx1MDAzZea4oemDqOWQieS4gFx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpaeTlKMllqRnVCLUVOTkhoLW9qZjRoWlhuTXFBOW1CZU9rOGtYdFhWUjloNE5hMUVpNHNkbGZNaGNSdmJIbHJxejlobGZsS1gyNTFlMEp3RGprSjRhQ3Rtcm9TUFNCQkpWUUw1X1pXMThxSmtobnh6dWRVc0FwM3pzRjRGQjFwOHhsQ3dSYzFJYjRzNXU4MUgyMjU2dUE0aGRCQzMtcTIyMlBhaUNtZjlBVmhtQ0oiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAyNAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSnB6amZNc3lMR0dBUllPMVgxcWJzQW5VIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiTVA0MitDOCDmuIvosLfljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hNUDQyK0M4IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSnB6amZNc3lMR0dBUllPMVgxcWJzQW5VIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNDM1CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjEwNy0wMDUyIOadseS6rOmDvea4r+WMuui1pOWdgu+8k+S4geebru+8ke+8meKIku+8kyDvvJHvvKYiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjc1ODI0MSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzM2Mjg5MwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjY3NzE0NTU3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43Mzc4MTAxMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NzQ0NDU5MjAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNzM1MTEwNDcwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44K144Km44OK44Oq44K+44O844OIIOOCquODquOCqOODs+OCv+ODqyIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDE1MzYsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMzI1Mzk4NTU4MzYxMTIxODQxNFwiXHUwMDNlSEFOQUtJTlx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpiVEQ5eVJGSTdrdDBxYmVqdllNY3ZNWkZWazBDZGRWSXpsX2JTbUpRRWJ5ZGNpREIxTExiQXhiOTRQazBZU2JtQmhxVXNhd01Fel9LdUU4b08wSjVtdXpHNmNweDd0Z1ZweVRUaWlsYzJpQnNlZDl6SkktRFd2akdhNVZpQlJac3pwRVhyYnlyb1BCY0s3dFJWZmpJQURCZWNtUE1mTTNkdm40Y0U1QU04dWF3aTQiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMjA0OAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSmU2YTdKSC1NR0dBUnNyZVFxUGxfb1V3IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiTVBHUCs4RyDmuK/ljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hNUEdQKzhHIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuOSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSmU2YTdKSC1NR0dBUnNyZVFxUGxfb1V3IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMzk2CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE1Ny0wMDcxIOadseS6rOmDveS4lueUsOiwt+WMuuWNg+ats+WPsO+8k+S4geebru+8ku+8kOKIku+8kiDjgrvjg7Pjg4jjg6njg6vjgqbjgqfjg6vjg43jgrnjgr/jgqbjg7Mg77yS6ZqOIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1LjY1MzY1MTQsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjYxNTQwMDgKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS42NTQ4ODg3Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjE2NjU3MTI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjUyMTg5MTIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjYxMzk1NzQ3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIlRIRSBTUEEg5oiQ5Z+OIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjA0OCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEzNzExMTM2ODM0ODY2MDE0MTc3XCJcdTAwM2XlnJLlsbHkvbPosqtcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWXBEV2RfYmtRZEZGTlVmb2RiUVFEd0ppNUs4dHVtWktSOThmRjZzeWJCTkxKdW9vdE5PRmJuU2pCblBwelBEY0lldlRBc1gzM2s2TjJxeHRMSGo2cVFDbV96M3FWSDVkLXlNdWs0bWNCbU4xNWhBU0ZWQlRNVU00bzlJcGNaTG9RYlZQYTlNUXNYX2ZmZEctVkVQQWc1dkJycUZhSU00dWhUeW9HME9uSmh2QkxTIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDE1MzYKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpHMEFhdTlEekdHQVJnUUZJQ2tBa21aYyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIk1KMzgrRjUg5LiW55Sw6LC35Yy644CB5p2x5Lqs6YO9IiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYTUozOCtGNSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpHMEFhdTlEekdHQVJnUUZJQ2tBa21aYyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDk2OQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIxNzUtMDA4MyDmnbHkuqzpg73mnb/mqYvljLrlvrPkuLjvvJPkuIHnm67vvJHvvJHiiJLvvJHvvJYg5YWJ5b6z44Oe44Oz44K344On44OzIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM1Ljc3MDY2NjIsCiAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY1NTQ5NzUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS43NzIwMjkzMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuNjU2ODQ4MDI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzY5MzI5NjcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY1NDE0ODM3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWFieW+s+a5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMxMjAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNDUxNTMyOTc0ODYyMjMwNzM5NVwiXHUwMDNl44Gq44GL44GM44KP44Gf44GL44Gy44KNXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmE0VXItNURIOGhWdWpnLUgtZ0o3T1Z1TXRrNm9vZm4xdmg1SnFzemxrbUJlLUNkQlpEb3p3NlFVS1ptcGUydGZYZG1oaWM0NkhhLVVmWlc1SlAxMTFicFAxUEFWM1U3d19iX1hwZG55TFVlQWlQSmxFR3RzYUlRN3dtUWlRR1hQaW5HVlJpeXRDaGI2V0NRNnhyVEREbUNoUkQ4OHdkYVJ3LXFsNEt4MVZXckpaTyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MTYwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKWlVlOXA0enNHR0FSTFlpaWpERUs3cHMiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJRTUM0Kzc1IOadv+api+WMuuOAgeadseS6rOmDvSIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE3WFFNQzQrNzUiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKWlVlOXA0enNHR0FSTFlpaWpERUs3cHMiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTQwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE2Mi0wODA4IOadseS6rOmDveaWsOWuv+WMuuWkqeelnueUuu+8ku+8k+KIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MDUwNDI4LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MzEzMDQ0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzA2MzM4MTc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjczMjcxNDQ3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjcwMzYzODUyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MzAwMTQ4MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgr3jg63jgrXjgqbjg4p0dW5lIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDAzMiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA5NTExMzYyODA5ODc0NzY0MzM3XCJcdTAwM2Xpu5Llsqnnp4DliKlcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWTdjYXl1b19Wbzk0VlpZUVFWVXg1MVU0TkpERDlqc0xtUnd3UkwxSS1tWXV0RWg4TVR0QWlpdjd5ZXlUMTVSbnhjd3RVSjAzRHIzdHpjTDNxRmg2ZldrdjZhcE96YWNDVEFHVlhSNHpaeXFTQ2tRRWxzX0wwcHpsNkdxcUJkczdxV3F2MW9SQ0VvVk1EUnpMWWtpa0tuQ0xaODVKQjRiVEtwMGdhS1RJbkxhbWlTIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUo0X1FMdXJhTkdHQVI4Z2xWc24zb2FrQSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlBQNEorMkcg5paw5a6/5Yy644CB5p2x5Lqs6YO9IiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTdYUFA0SisyRyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUo0X1FMdXJhTkdHQVI4Z2xWc24zb2FrQSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDIwOAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIxNzAtMDAxMyDmnbHkuqzpg73osYrls7bljLrmnbHmsaDooovvvJTkuIHnm67vvJLvvJXiiJLvvJkgMTJGIOOCv+OCpOODoOOCuuOCueODhuODvOOCt+ODp+ODs+axoOiiizEwRiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS43Mjg5MTkzLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MTczMDM5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzMwMTMyMTI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjcxODY2Nzc3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjcyNzQzMjQ3MDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MTU5NjgxMjAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgr/jgqTjg6Djgrog44K544OR44O744Os44K544K/IiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzc4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTcwMTIwOTc2MzQzODA0MjI1NzFcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKYmV4cW9INUQwX01DTmMzRFpnRzdDSmdiNUxJRDB1TWk2WWF2Njg4X1ZrNE15VUFWZndtTjhNNjB2ak5pVGx1SDRIeUloU3B0LTYydElnTjJkUmVPRTJFNEFsSU5YSUR5LTd0S1RNR1lQdGtCdXA2TnZEN3MzOERKaHRBYnNPbFVtYUhRQW1uaTJnazRXdE9uQnVsc1JjVGJGR200aVJNVmxxMl9venppMm9wcllBIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDU3NAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSlZWVVZKRy1OR0dBUnNaelJrdFdLNHBNIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUFBIOCtIVyDosYrls7bljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hQUEg4K0hXIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuMSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSlZWVVZKRy1OR0dBUnNaelJrdFdLNHBNIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxOTk3CiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0=
  recorded_at: Sun, 07 Apr 2024 09:57:09 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%9D%99%E5%B2%A1%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:10:48 GMT
      Expires:
      - Sun, 07 Apr 2024 10:15:48 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42813'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=494
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:10:48 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%A5%9E%E5%A5%88%E5%B7%9D%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:14:37 GMT
      Expires:
      - Sun, 07 Apr 2024 10:19:37 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42813'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=512
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:14:37 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%84%9B%E5%AA%9B%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:14:56 GMT
      Expires:
      - Sun, 07 Apr 2024 10:19:56 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42027'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=424
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:14:56 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%9D%92%E6%A3%AE%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:19:30 GMT
      Expires:
      - Sun, 07 Apr 2024 10:24:30 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41728'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=419
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJuZXh0X3BhZ2VfdG9rZW4iIDogIkFUcGxESlp3UGRmYlFMQXM2Q0dzT05TWVY1SGQyX3dZcUJWakZVVEd2ZklmNzFERWpMODVoaC1EWUNSbk9jU1hqUnVaMkxZVG9OY0NsZC15RFg5SmUwdDZyeG1xR08wb0dfR08yamhuLVJiU3ZtQXdQRnFEcU1KRkN4Z2dhZmpDYW1rbkpLRktKX0tBNnQzQWV2Yi1jOThkeVBpMlhkRXFKVGxrVUx3cmxucE9GTV8tYmxsYTY5VmxNZGQyTUpvZzV5dVlOR3lUUXYtTjJzUHBvUGhvS3VRZ29DcXdQc1lWbGdHRF92TmE3S2FMaVdOQ0YwZDc5V3VSRHVsdnB2NU8zcFlJNHY1MU5kNTdPMjA2OWRkWkhSRHQ3emN4clk5b19kUTZLUFhFRFJ0RzFTLUJ0OE9SdUh5d0dBNWYteFJZc3VoVFluTUh0ZFIyZk0yaEZWdXcyQnYzcVZzNHV0VTVwdTVkZTVUNTNGalJCM3FhMDJET1B0Sk1QTlBGRkJlV3l6NFd6TXJJTzhhQkdVYVhvcXlhUUJ3IiwKICAgInJlc3VsdHMiIDogCiAgIFsKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMDM4LTAwNDIg6Z2S5qOu55yM6Z2S5qOu5biC5paw5Z+O5bmz5bKh77yU77yQ77yU4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDQwLjgzMzkxNDQsCiAgICAgICAgICAgICAgICJsbmciIDogMTQwLjY5MjA1ODkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MzUwNTE1Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNjkzNDc1NTc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuODMyMzUxODcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjY5MDc3NTkyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOBguOBiuOCguOCiuWBpeW6t+ODqeODs+ODiSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDcyMCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE0MDc2OTY0MzM3Mjk3ODI4MDU2XCJcdTAwM2XmsaDnlLAg5pmD5LmfXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmJtZTZTTHc5Vld4dTlHTmNWcThoTlZYNGRESHFXRGpjaERQRFUwQlhTaXljVTZNSHNvQUdMcGxHdHNScS1yRjM0WEJsaEdjUFRMN0JlcXRoQUhtdFh2R0YtdGh2MVhXdzR5bWtLOVREcm5vb2JEY0QtVjNRRG0xSDdOcE1JalFhbGdiUEFPQkhDelBQcGlQUjlkRGVMZ21hby1TMTAzcmxwNU4tOTVGNEZTaGJqMyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxMjgwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKb19EM2FMV1ltMThSbmdrVlpsQTZLczgiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJSTU1SK0hSIOmdkuajruW4guOAgemdkuajruecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFJHMlJNTVIrSFIiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy43LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKb19EM2FMV1ltMThSbmdrVlpsQTZLczgiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDk1MgogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIwMzYtODE4MiDpnZLmo67nnIzlvJjliY3luILlnJ/miYvnlLrvvJQg5pyd5pel5Lya6aSo44OT44OrIDVGIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDQwLjYwMjI1NSwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNDcxMTI3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuNjAzNjc3NDI5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjQ3MjM1ODI3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjYwMDk3Nzc3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC40Njk2NTg2MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgqLjgrXjg5LjgrXjgqbjg4oiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxMjgwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTQwODQ1Njc3MDMyOTk2MDQyMTNcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWllUa3Y2OVJQMlNGTW1LSjUxNG0xM0RETWREVXVmV3VLNjNKXzJXUkxPRUtPdEFzTXhFbFRFRXZ5RlExUVgtSUk2QVdyemF0SE5MZmhzel9qbkpDUDk5NWF2dXVwQm1sSFZBUi1BTFE0Ung4V3BJQl9yVWRIN3ZlRV8wVE1qd0FMc3c4YmNHM3lZOTN1Uk9sYjl2VEFQNjFsb09SYlJTQXVMRWR2UVJTMTl3STZiIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDE5MjAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpSYktRQ3VrQm0xOFJ6bURMVGZEajNrQSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkpGMkMrV0Yg5byY5YmN5biC44CB6Z2S5qOu55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkcySkYyQytXRiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpSYktRQ3VrQm0xOFJ6bURMVGZEajNrQSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImxvZGdpbmciLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTM5CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjAzMC0wODQ3IOmdkuajruecjOmdkuajruW4guadseWkp+mHju+8kuS4geebru+8lOKIku+8ku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiA0MC43OTczMjAyLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC43NDIxODkxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuNzk4NjI0MDc5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjc0MzU4ODc3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjc5NTkyNDQyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC43NDA4ODkxMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmpbXmpb3mua8g6Z2S5qOu5bqXIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNTU4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDAyMjMyODI5OTgxNjcyMDc3OTBcIlx1MDAzZealtealvea5ryDpnZLmo67lupdcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWW5ocENOaUNRbEo0OTIxd3IzTGd0WE5SSGtLZjlHZ3BlS0VZeDh2OHU1U3NaS2ZLMl9kUHR3QzhUcUJ1SXJVdEo2b29kR0RlOWNuUkJBbGhkbHk2ZHRIcjBGWWI5eUFiVmM2ZXJxeFgzVnB3WVBIMER6WXZ2MWUtNjQtN3F1Yjh6OFpvZDRBNDZHcVlMWVBJVVJnSDNFdmozVzVLeVFwY2hkS3cyX0o3YWN5aHVKIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDc0MwogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkw3bW13Sk9mbTE4UncwN3RSQ1hkVHRJIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUVBXUitXViDpnZLmo67luILjgIHpnZLmo67nnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSRzJRUFdSK1dWIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuOSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkw3bW13Sk9mbTE4UncwN3RSQ1hkVHRJIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDEwNDIKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMDMwLTA5MTUg6Z2S5qOu55yM6Z2S5qOu5biC5bCP5p+z77yU5LiB55uu77yR4oiS77yR77yTIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDQwLjgxODc3NDMwMDAwMDAxLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC43OTM4MjYyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuODIwMTM2NDc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjc5NTIwMjIyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjgxNzQzNjgyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC43OTI1MDI1NzAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgZPjgoTjgarjgY7muKnms4kiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTMwNTA1ODczNTA2NDk2MTI0MzZcIlx1MDAzZVJ5b2ljaGkgS2F0b1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREphT0dBWDAzVWVYN3M0YURGOEVWNEl6WHNibDl3VG9RLTdtLW5mN2c4c2JVbGNoM0JYZXNIZmVMMGJZYThrbFFYbmtlMnFQUHlpOUhtOXV3YWVYUl8zX1BzZnR4UXNMeWhnbWVpSVdmT0NjRUptTmNqakllMzZwYlhkYThsYWZ2SUZUQ3BfYWlfQzN2QTVMbWE2cFo2SUh5Ujhidjl2TDBLU2czSnlsYmpnTFh0VmEiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkYxcDBEMnFlbTE4UjJxbTlSZHFSRVVBIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUlE5VitHSCDpnZLmo67luILjgIHpnZLmo67nnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSRzJSUTlWK0dIIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkYxcDBEMnFlbTE4UjJxbTlSZHFSRVVBIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDEwNgogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIwMzAtMDgxMSDpnZLmo67nnIzpnZLmo67luILpnZLmn7PvvJLkuIHnm67vvJfiiJLvvJLvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogNDAuODI3MzA2NiwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzU4OTU4OQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjgyODU4NDMyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC43NjAzMTE0Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MjU4ODQ2NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzU3NjExODIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44OI44OJ5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAwMCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEwNTYxODA2NzE0MjU4NjQ1MTA4XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlpIQVFNbVhxN01vam1wLWpqdEVweklIU0Q1SUd4VThXNXNCQURZLW1RcTgwdEZRQk9laUpwUy0tdG1kWnRDQ2ZwXzBtV3htQUpFdlhSNGJNVElzaVhsN0R6a3lTaER3bmt0VXlUM3QxNHhJSzB6R09fcjlndzNfT0UzTWtrOTZiajZZSTB1aDRfNkkxS0xlZXE4bXZjd2RMai0zYmoyUnNFTDlFaTdPNWxTc1lOYyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKaVJZTllfcWVtMThSV3FmYmpSMVNhaUUiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJSUUc1K1dIIOmdkuajruW4guOAgemdkuajruecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFJHMlJRRzUrV0giCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKaVJZTllfcWVtMThSV3FmYmpSMVNhaUUiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNTQKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMDMwLTA5NjQg6Z2S5qOu55yM6Z2S5qOu5biC5Y2X5L2D77yS5LiB55uu77yT4oiS77yS77yQIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDQwLjgxMzIzOTEsCiAgICAgICAgICAgICAgICJsbmciIDogMTQwLjc4MzY5NzQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MTQ1MTEwNzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzg1MDYxODc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuODExODExNDIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjc4MjM2MjIyMDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuOBpOOBj+OBoOa4qeaziSDjgobjg7zjgb3jgaPjgb0iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyMTYwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDM0NTQxNTQwODY0NDQ2MDQwMDJcIlx1MDAzZWtlbmljaGkgaXp1bWlcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWW0yUFc5blIya1N3bXUzajZveU5HcnFDWkZSRDdVUjdtd1FSejI1T2pwLTJ2QUxabDVLVjNCdjBCOWJZSUJUckRWYm93aGlvSGVwLWhaZXpHd09GV00zcFZUV2xLQkdJM0ZRaEhTSkgwbVJRal9VbV9OZTFuTlRfVlI5U2pxc2hSQ2txVWFSbGpuTnh5WTZwM1VnaHdaR3BkX3BxQmpVSEFyTHozZEE3V0pSQ3JTIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDM4NDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpCZjdWS1VhZW0xOFI0bW5ES2VMVmpHRSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlJRN00rOEMg6Z2S5qOu5biC44CB6Z2S5qOu55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkcyUlE3TSs4QyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpCZjdWS1VhZW0xOFI0bW5ES2VMVmpHRSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMzAzCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjAzOC0wMDU4IOmdkuajruecjOmdkuajruW4gue+veeZveaxoOS4iu+8ku+8kO+8leKIku+8kiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiA0MC44NTIyNjIyLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC42ODE2NDY0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuODUzNjEwODI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjY4MjkyODg3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjg1MDkxMTE3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC42ODAyMjkyMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjg5fjg6njgqTjg5njg7zjg4jjgrXjgqbjg4pWaWh0YSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMxOTQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNjk2NjQzODQ0OTIzMDAzMDk5M1wiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpaZU9uXzBtU291ejlvTmk3Y2xjdVN2aTQ3b2p1cGk1X2dRX2hmcy05S1lGd2VSZXo1ZTFaLXpsSXphZTN4ZFU0Z1lFb3N2Yng2TkhSX3VXdTlWU1lHLXBDaklLVk9YZjVGWDFqUVBUazZhTk9NeXJ6N3FTNXhDSWl3MjVXM29IZjkteFZ5eGpoWElwRFNSVVRyUkRRSy1HUUZtdVYyZ0hubWFIUkY2UDFsTFpRczIiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMjM5NgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSjZheU9IZk9abTE4Ukx2U3VHeW9YeGxBIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiVk0ySitXTSDpnZLmo67luILjgIHpnZLmo67nnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSRzJWTTJKK1dNIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuNywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSjZheU9IZk9abTE4Ukx2U3VHeW9YeGxBIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA5CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjAzMC0wODQ0IOmdkuajruecjOmdkuajruW4guahguacqO+8kuS4geebru+8ke+8kOKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MTAxNTI0LAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC43NDQwMDYxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuODExNTI2Njc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjc0NTM1MzM3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjgwODgyNzAyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC43NDI2NTM3MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLmoYLmnKjmuKnms4kiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTY4MDAxMzg5MDU0OTk3MzEyNjNcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWnVVNW9qbGZyY0Vlb181TjY1a3I1T3E5dDk4bm5wdl9rZWduSFpEUTAtYTZFbmFmVVZ1dXJEdDJ0Z3ZfV1RsS0pLQU5LRkZMcm1oTnYtaWVORFlxVkpidlhEd3hjYWhlem10YnZaN0Jlc05WTDF5aUNnNjk2T1YzRGlKNFN5Q3NKbThnbzluOHlaXy10U0hFaTVVRGxJcjFUbldQOWx0Vmhib1lwd0xuYWtCOTlvIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpDWXZvdTZhZm0xOFJBekw2Rk43YkQtcyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlJQNlYrMkog6Z2S5qOu5biC44CB6Z2S5qOu55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkcyUlA2VisySiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpDWXZvdTZhZm0xOFJBekw2Rk43YkQtcyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA4MQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIwMzAtMDk0NSDpnZLmo67nnIzpnZLmo67luILmoZzlt53vvJjkuIHnm67vvJXiiJLvvJQiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogNDAuODA2Nzk2NywKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzY5MTIxOAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjgwODEzODc3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC43NzA0ODM5Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MDU0MzkxMjAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzY3Nzg0MjcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5b6z5LmD5rmv5rip5rOJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDAwMCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTEzMDg0MDAxMDA2MTA2ODMxNzc1XCJcdTAwM2Xlk7JcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWVFHWVlHVmxrNUdwdHFMbXZTeENyd3YzeVllSWJZUU5LZVlfdFNwUEpfRGRBUnQ3MFlGdEVST1dZZW1pcmtSUktWTDRuZ0Y3U2lla2s4LXNSdTBhQmNQTzhvM3lFQ1p6QTNQR2ZXNUZFX2Y4Mk1pWjA5aDkzS3ZmWk5hQnFzdUxpUExTdzJUSFZZYlVYcDhwNkQtczhzZF95ZmduQl9lVmUyNTV6YVo1cmdENHh6IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp5ZHhJdExXZm0xOFJER3NZa3E5Mld6ZyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlJRNDkrUEog6Z2S5qOu5biC44CB6Z2S5qOu55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkcyUlE0OStQSiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUp5ZHhJdExXZm0xOFJER3NZa3E5Mld6ZyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA2MwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIwMzAtMDg2MiDpnZLmo67nnIzpnZLmo67luILlj6Tlt53vvJHkuIHnm67vvJHvvJDiiJLvvJHvvJQiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogNDAuODI0NjYxLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC43MzUzNzM0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuODI2MDUxODc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjczNjYzMzk3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjgyMzM1MjIyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC43MzM5MzQzMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLpnZLmo67jgb7jgaHjgarjgYvjgYrjgpPjgZvjgpMiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyOTM2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTgyMDc2NjI2MTU0Mjk1ODcxMTRcIlx1MDAzZWt1cnVrdXJ1TzgyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmJaWjNZY2E5T2tSS1BfWDZoOW9leU5jLVJDWmxnM3lnX2ZORmhSa0Zld0JYdHY5VDAtNjh4RmZ4UEZLNDhNQnd6NDlxRWs2dktfN2RlOVd3S0gwV1JMUWtOc3hMZkUwSlY1UlZFUmRHNmEwR0ZRZjdYdGR5bUlkYkIybmd1WklSaGcxZ3hrR0RkR2JuRWE5NGlsT3lSbTdSaEZia2tURlRkRERTWmMzUVFkUnRRNSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzOTE2CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKeDB1djd4dWZtMThSOEZjY3NxcXJNMTgiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJSUEZQK1Y0IOmdkuajruW4guOAgemdkuajruecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFJHMlJQRlArVjQiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC4xLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKeDB1djd4dWZtMThSOEZjY3NxcXJNMTgiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInRvdXJpc3RfYXR0cmFjdGlvbiIsCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxOTcxCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjAzMC0wODEzIOmdkuajruecjOmdkuajruW4guadvuWOn++8kuS4geebru+8ke+8kOKIku+8kyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MTk3MDYsCiAgICAgICAgICAgICAgICJsbmciIDogMTQwLjc2Mzk1ODMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MjEwNjkyMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzY1MzYwMDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuODE4MzY5NTcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjc2MjY2MDQyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIumVt+eUn+a5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIzMDQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwOTAzMjY2MjM3NDAyMTM2MTM1NFwiXHUwMDNl56aP5bO25rWp5pmDXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESllXdmxEUm4xRXJtdTdMX2dhdm1aVmlBOG4wUnNrYnlBU3FWZHdDTUFpSV8tNi1mRkd2MWlORnZFUHhEUld5V2VBTDJwQWlSX1oxOWZwTjRvUXd2OGFGR0N1SzJZQXlWaGJCOEt4R2tacm5jbnB6YlJWMldFQXRTemJ2RWhOUE83bDlUUnBwdXdvV2RnNlVrNjJabkc5ZlhqemNTSnJpdXJjNUJFS0p4eWpYSXQ5ZSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDk2CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKRVZwcGdGYWVtMThSSTU2SkRMeUFkZUkiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJSUTk3K1ZIIOmdkuajruW4guOAgemdkuajruecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFJHMlJROTcrVkgiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKRVZwcGdGYWVtMThSSTU2SkRMeUFkZUkiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNDIKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMDM4LTAwMjEg6Z2S5qOu55yM6Z2S5qOu5biC5a6J55Sw6L+R6YeO77yR4oiS77yX77yTIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDQwLjc5ODkyOTUsCiAgICAgICAgICAgICAgICJsbmciIDogMTQwLjcwNjg1NzUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MDAyMTExMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzA4MTQ3ODI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuNzk3NTExNDcwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjcwNTQ0ODE3MDEwNzIKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuS7meWvv+ODu+m2tOS6gOa4qeaziSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDI0NDgsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMDE2NjEzNzgwMTA3NDc2Mzg4NlwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpicEhSUjNLQjl3OUJqa3FSRnBDd3pUOC15cHRiUGl0Y2NPby1jejZtWEZ0dS1KZ0FqeVlVYmZGNWhUWTU0UWd1WEpidTUtZ2RvbDVlbHZsLVFjZnRKZjRPOGhWUlVEZzUyWGtkX0l6S1NQbGtMLUJkcFVSRnozWkN6QnJNaXJGMno2TGJUSFFxZG1vN0Z6TlJMVDhyVmlJQ01mZGdxNS1sVmhUSDgwOWpXMEtxbVAiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzI2NAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSjB3UEVTeXVnbTE4Umc0aWY4ckM2cHNVIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUVBYNCtIUSDpnZLmo67luILjgIHpnZLmo67nnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSRzJRUFg0K0hRIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSjB3UEVTeXVnbTE4Umc0aWY4ckM2cHNVIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDI5MgogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIwMzAtMDg1MyDpnZLmo67nnIzpnZLmo67luILph5HmsqLvvJTkuIHnm67vvJHvvJbiiJLvvJgiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogNDAuODA5NzgxOCwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzMyMTgxOQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjgxMTEyMTQ3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC43MzM1NjQwMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MDg0MjE4MjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzMwODY0MzcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44G/44Gh44Gu44GP5rW05aC0IiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDAzMiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAxNDA4NTg0MjY4NDE3OTc4MzgzXCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESllwUlJrMUQ3eXYwaFhuRFphbkNPSzZqcFN4SjFCTEgtNmR3bVBFNTFqMXpGSC0xQ0toOXd4N2xRdm5oX2dWMV82M3daa0NGblk4UXI3WjVXRFB4bnptLTdnLThwdFZBaWE4VzZsUW14Uk9WUkNFWjJMRXdQSzBLQmpvUmYtNXk0aHpEWnBfY0Nlc08wOFg3Tjg3dVdCYm9jeHdMZEhZd0FEV1BWUjBqTVhIaG9raiIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzMDI0CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKSjJVWFczV2ZtMThSLTE4a2t0TmVOak0iLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJSUDVKK1dWIOmdkuajruW4guOAgemdkuajruecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFJHMlJQNUorV1YiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKSjJVWFczV2ZtMThSLTE4a2t0TmVOak0iLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjAKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMDMwLTA4NTYg6Z2S5qOu55yM6Z2S5qOu5biC6KW/5aSn6YeO77yV5LiB55uu77yS77yU4oiS77yS77yU4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDQwLjc5ODcwMTIsCiAgICAgICAgICAgICAgICJsbmciIDogMTQwLjcyNzg1NDcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MDAwMjIzMjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzI5MzQ1NDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuNzk3MzIyNjcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjcyNjY0NTgyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIua5r+alveWckiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDU1MDQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMjY3NTUyMTI3Mjk3NDI3OTM3OFwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpiVmZuelVkUnJpQUg2Wks1STh1TExkcl9lcmtRRzBYMEN6Q3FKazZqNnVBYzM5bUZmZGhYMFJtUENMQ29JV1BnZDVlczJOUElCWFJURGMxZTdvd25pOXFZNkdXVVJXU0dwVzVGMFFNWEtjcklCdXhueGZMdkNMbGowalZSamJMVFIyUXkzeC1WUGN2eG03bXdFWHhpYUdZdEctRkxRRkpRNWNtWGs1bVRwbHBFbnoiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzA5NgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSm5mbDdvWVdmbTE4Umd6MEdScXhqOWFnIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUVBYSCtGNCDpnZLmo67luILjgIHpnZLmo67nnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSRzJRUFhIK0Y0IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuMywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSm5mbDdvWVdmbTE4Umd6MEdScXhqOWFnIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE3MwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJIwMzgtMDAwNCDpnZLmo67nnIzpnZLmo67luILlr4znlLDvvJPkuIHnm67vvJHvvJbiiJLvvJXvvJAiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogNDAuODM0MDU4NiwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzA5NTExOAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjgzNTQzNjUyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC43MTEwODg1Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MzI3MzY4NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzA4Mzg4OTIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi44GC44GV44Gy5rip5rOJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjU5MiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA5ODE2NDE4MTg5MDg5MTIwNzc2XCJcdTAwM2VDaG9jbyBNaW50XHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlo4cWhIYldUTTNnTHFjREhadklYTTVRcWJFRWZzb2FiM2RUajc4WDdndjh1aXJILUZvazVSOTVYYlIzV19mSTIxek9LTDVMQkU0R05tQ2FBTVpodnRuVzJOazczVE9xU0N2Qy1NQW9vcTM2S3ZXQXdoenNTYTBoak9fU3UxRXFQT3lHZ0xkWjBBTmFfSVhNaWFxTXVMVWtGdnlDOGRCR05iWk1pYTVQMTFfQkdPciIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0NjA4CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKUFU5dWtUR2ZtMThSQmZUN0g2NlZEeVEiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJSUE01K0hQIOmdkuajruW4guOAgemdkuajruecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFJHMlJQTTUrSFAiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy44LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKUFU5dWtUR2ZtMThSQmZUN0g2NlZEeVEiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTkxCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjAzMC0wMTMyIOmdkuajruecjOmdkuajruW4guaoquWGheelnueUsO+8me+8leKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiA0MC43NzU4NjUxLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MC43NjQyMTUyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuNzc3MjE4MTc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjc2NTU0MjQyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjc3NDUxODUyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC43NjI4NDI3NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgYvjgaPjgbHjga7jgoYiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDMyLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTE3MzU0Nzc2NTg2NjM2Nzk0MTVcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWU1hM3R6LXJfWkE0TGRja2V4RlprT1hqY1JRUTY4NVBzWXBmUW1oYmRrMnFXU1VkUzJkX2ZtN1NpN2NfQ3JZWmlaMDFERS1QLVdmTVNCRFdHZHU2YktGcnlxbzkxQWlrN0IxQW1aSU41MmdRenpwUnFlcm5sX3UzU1E5VzFDdDVobXc3c1h1a0N6QWQ1TC0xeFNUa3FzcU1qTm9WUFdzVHJxUWp6UFhwRDE4di1pIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp6V2ZwREZGMW0xOFJ0SlNtald4UXV3cyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlFRRzcrOE0g6Z2S5qOu5biC44CB6Z2S5qOu55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkcyUVFHNys4TSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUp6V2ZwREZGMW0xOFJ0SlNtald4UXV3cyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogODg5CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjAzMS0wODMzIOmdkuajruecjOWFq+aIuOW4guWkp+S5heS/nemHjummrOWwj+Wxi++8le+8kuKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiA0MC41MTI3MTgzLAogICAgICAgICAgICAgICAibG5nIiA6IDE0MS41NjEwMTQ4CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuNTE0MTE0MTc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQxLjU2MjI1NTQyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjUxMTQxNDUyMDEwNzI3LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MS41NTk1NTU3NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLph47ppqzjga7mua/lpKnnhLbjg6njg4njg7PmuKnms4kiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDAwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTU1NTczOTMwMzMyNTEyODY2MDNcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKYmFacFR4Q0dOVlJmYjc2OHE0eXNxRERONERnMFg3ejdjSWJpcDlXT1ViLUhSd0NuaXBUNzBrNXVjdkhuLVl0LV9ZamhJUURQb01iR2hCQ282M25icDVRdXlVYzI1MFN0YnBqV1pnN3FUOWtLc2hpLU85d3NlYWF3LXhHVmlSbEMxYjBTb2F1Z29UdEx5QUlTd292VmVLS3U3WHB3QnpYVXVVS3lYa2dGRkgxUlc3IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMwMDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp5OG5oeEtsVG0xOFJGNDhyWnl5SHVobyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkdINzYrM0Mg5YWr5oi45biC44CB6Z2S5qOu55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkczR0g3NiszQyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUp5OG5oeEtsVG0xOFJGNDhyWnl5SHVobyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjU3CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjAzMC0wOTA0IOmdkuajruecjOmdkuajruW4guiMtuWxi+eUuu+8ke+8lOKIku+8ke+8mSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MjU3NjQsCiAgICAgICAgICAgICAgICJsbmciIDogMTQwLjc2NDY1MjYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA0MC44MjcwOTY0Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzY2MDM0MDc5ODkyOAogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuODI0Mzk2ODIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQwLjc2MzMzNDQyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWkmuWWnOOBrua5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwOTYxMjcyMDA2NzQ1MjM1OTU2OVwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpZQkh4VkJfSWRnVmRjbl9BRzhCXzkxZ21Hei01dndvekZ6d1I0bmFvbC0xcWNRVmlqa0dsQUdFOXZtZ2FOdjVKR2NVb1BZRV9remJsZ0c3N1V4Zm9US25XX3JTMDloWE1tOWxlYU9PdTU1R19GV3ZSZmlIZm54d1I4WGlQWVM3ejVWdEZIdDNDdmVZZlJGRm5VVVpPMURseThYZ19LZGVzUjJfaERDMlBObTlYX3MiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkdlclpiZmVlbTE4UmRoNUpia1FGd0FvIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUlFHNys4VyDpnZLmo67luILjgIHpnZLmo67nnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhSRzJSUUc3KzhXIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkdlclpiZmVlbTE4UmRoNUpia1FGd0FvIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE4CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjAzMS0wODEzIOmdkuajruecjOWFq+aIuOW4guaWsOS6leeUsOadvuWxseS4i+mHjuWgtO+8l+KIku+8k++8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiA0MC41MDM0OTc1LAogICAgICAgICAgICAgICAibG5nIiA6IDE0MS41MzYxNjk2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNDAuNTA0Nzg2MTI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTQxLjUzNzYyOTQyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjUwMjA4NjQ3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MS41MzQ5Mjk3NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlhavmiLjpiq3mua/jgqrjg7zjg6vjgqbjgqfjgqTjgroiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDAwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTYzMTM1Njc3MjY5MTI2MzcwNDdcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWS1iN2tQUTVFY2lEN0x6b0tsM2VsdXR1eTNySUNLZnNoclI4ejJta1l6dlRFNjNlUG5PaDB1clAtV2tOajhtLTJqQld5M2h5R0tLbXFxd1ZPVGdFUDFJUTVneG9VM3ZOWGVXSUVOTlh4eXlmdG9nRzJmYVVya2lHUlJlQl8yU01FMmp4bC1oVTMzUzZLZWxuMG5yZXplVnVCQUlNRTUxRFFqb3J5aDVHQ2NBYU1pIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDUzMzQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpVZmhTYXY5VG0xOFJnY0k5Q1FMTUNxayIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkdHM1ArOUYg5YWr5oi45biC44CB6Z2S5qOu55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkczR0czUCs5RiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpVZmhTYXY5VG0xOFJnY0k5Q1FMTUNxayIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxNTEKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMDM4LTAwMDQg6Z2S5qOu55yM6Z2S5qOu5biC5a+M55Sw77yR5LiB55uu77yR77yW4oiS77yRIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDQwLjgzMDc0MiwKICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzE3Njk2NgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDQwLjgzMjEwMjYyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDE0MC43MTkwMzc5Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA0MC44Mjk0MDI5NzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxNDAuNzE2MzM4MzIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5rKW6aSo5rip5rOJIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjE2MCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE1NDk3OTI5NzQ0ODgyNDU0ODYxXCJcdTAwM2XnjKvlsYvmlbfjgYLjgpPjgZNcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWWdLZzZXWkRUXzhCbmJPQXNhUVZWclRzYktvbGVDWnZpZklndTNtWkZuRlZCQWlEc2VvMUU3djNNTFFpWDY1bWRiOFF5djJHSlJMeHU1ZnpoMEFEYWVKTUFjdEFKRWxRY0pnajM5eFZCWHc1M3phMGRrYmM5LWd4cjlhb1pTOUdoVEVnajV6UzVzTVNDd1NaaGxSLXBFMUlmemJGdGdIN2UwQlZCOXNuRHlJTHlYIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDM4NDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpKMWRYMVNTZm0xOFJ5cDZrUHRlM0VIYyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIlJQSjkrNzMg6Z2S5qOu5biC44CB6Z2S5qOu55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UkcyUlBKOSs3MyIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpKMWRYMVNTZm0xOFJ5cDZrUHRlM0VIYyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxMjYKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Sun, 07 Apr 2024 10:19:30 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E5%88%86%E7%9C%8C%20%E6%9D%B1%E9%9F%BF%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:20:06 GMT
      Expires:
      - Sun, 07 Apr 2024 10:25:06 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '40918'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=672
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:20:06 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E4%BD%90%E8%B3%80%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:20:08 GMT
      Expires:
      - Sun, 07 Apr 2024 10:25:08 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41736'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=446
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:20:08 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%85%B5%E5%BA%AB%E7%9C%8C%20%E8%8C%9C%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:21:07 GMT
      Expires:
      - Sun, 07 Apr 2024 10:26:07 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41908'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=435
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:21:07 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%85%B5%E5%BA%AB%E7%9C%8C%20%E8%8C%9C%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:21:07 GMT
      Expires:
      - Sun, 07 Apr 2024 10:26:07 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41908'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=427
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:21:08 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%85%B5%E5%BA%AB%E7%9C%8C%20%E8%8C%9C%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41908'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Date:
      - Sun, 07 Apr 2024 10:21:07 GMT
      Expires:
      - Sun, 07 Apr 2024 10:26:07 GMT
      Cache-Control:
      - public, max-age=300
      Content-Type:
      - application/json; charset=UTF-8
      Age:
      - '1'
      Server-Timing:
      - gfet4t7; dur=5
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:21:08 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%A6%8F%E5%B3%B6%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:21:10 GMT
      Expires:
      - Sun, 07 Apr 2024 10:26:10 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42427'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=461
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:21:10 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%A6%8F%E5%B2%A1%E7%9C%8C%20%E6%96%B0%E6%A3%AE%E7%94%B0%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:24:31 GMT
      Expires:
      - Sun, 07 Apr 2024 10:29:31 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '37049'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=372
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:24:31 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B1%B1%E6%A2%A8%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:24:33 GMT
      Expires:
      - Sun, 07 Apr 2024 10:29:33 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42180'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=458
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:24:33 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%9F%B3%E5%B7%9D%E7%9C%8C%20%E5%8D%97%E4%B8%8A%E9%87%8E%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:40:23 GMT
      Expires:
      - Sun, 07 Apr 2024 10:45:23 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '7892'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=324
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:40:23 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%A6%99%E5%B7%9D%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:40:25 GMT
      Expires:
      - Sun, 07 Apr 2024 10:45:25 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41200'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=417
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:40:25 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%84%9B%E5%AA%9B%E7%9C%8C%20%E4%B8%AD%E7%8E%B2%E5%A5%88%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:41:19 GMT
      Expires:
      - Sun, 07 Apr 2024 10:46:19 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41870'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=678
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:41:20 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%BE%B3%E5%B3%B6%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:41:22 GMT
      Expires:
      - Sun, 07 Apr 2024 10:46:22 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41350'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=418
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:41:22 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%BB%8B%E8%B3%80%E7%9C%8C%20%E9%99%BD%E8%8F%9C%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:44:13 GMT
      Expires:
      - Sun, 07 Apr 2024 10:49:13 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42032'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=611
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:44:13 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B2%A1%E5%B1%B1%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:44:16 GMT
      Expires:
      - Sun, 07 Apr 2024 10:49:16 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41097'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=439
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:44:16 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A5%88%E8%89%AF%E7%9C%8C%20%E8%97%A4%E7%94%B0%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:52:34 GMT
      Expires:
      - Sun, 07 Apr 2024 10:57:34 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41966'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=655
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:52:34 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%84%9B%E7%9F%A5%E7%9C%8C%20%E5%A4%A7%E9%87%8E%E5%8F%A3%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:52:35 GMT
      Expires:
      - Sun, 07 Apr 2024 10:57:35 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '12719'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=498
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:52:35 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E9%98%AA%E5%BA%9C%20%E5%B2%A1%E6%9C%AC%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:53:50 GMT
      Expires:
      - Sun, 07 Apr 2024 10:58:50 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42874'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=848
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:53:50 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%9D%B1%E4%BA%AC%E9%83%BD%20%E5%8D%97%E8%B0%B7%E5%8F%A3%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:53:52 GMT
      Expires:
      - Sun, 07 Apr 2024 10:58:52 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42079'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=853
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:53:52 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%86%8A%E6%9C%AC%E7%9C%8C%20%E9%99%BD%E6%96%97%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:53:52 GMT
      Expires:
      - Sun, 07 Apr 2024 10:58:52 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '12634'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=359
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:53:52 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%A7%8B%E7%94%B0%E7%9C%8C%20%E5%8C%97%E8%8A%BD%E8%A1%A3%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 07 Apr 2024 10:53:53 GMT
      Expires:
      - Sun, 07 Apr 2024 10:58:53 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41973'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=450
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 07 Apr 2024 10:53:53 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%A6%99%E5%B7%9D%E7%9C%8C%20%E5%A4%A7%E5%B2%A1%E7%94%B0%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 10 Apr 2024 09:42:59 GMT
      Expires:
      - Wed, 10 Apr 2024 09:47:59 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41463'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=673
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 10 Apr 2024 09:42:59 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%84%9B%E5%AA%9B%E7%9C%8C%20%E5%8D%97%E5%A5%88%E3%80%85%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 10 Apr 2024 09:43:00 GMT
      Expires:
      - Wed, 10 Apr 2024 09:48:00 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41557'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=604
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 10 Apr 2024 09:43:00 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%8D%83%E8%91%89%E7%9C%8C%20%E5%8D%97%E6%9D%8F%E6%9D%91,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 10 Apr 2024 09:43:01 GMT
      Expires:
      - Wed, 10 Apr 2024 09:48:01 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '10688'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=360
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 10 Apr 2024 09:43:01 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E7%A6%8F%E4%BA%95%E7%9C%8C%20%E5%8C%97%E5%B1%B1%E5%B4%8E%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 10 Apr 2024 09:43:02 GMT
      Expires:
      - Wed, 10 Apr 2024 09:48:02 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42228'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=569
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 10 Apr 2024 09:43:02 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%A6%99%E5%B7%9D%E7%9C%8C%20%E5%8C%97%E5%A4%A7%E5%A1%9A%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 05:00:26 GMT
      Expires:
      - Fri, 12 Apr 2024 05:05:26 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '37630'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=405
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 05:00:26 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%A4%A7%E9%98%AA%E5%BA%9C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 05:00:29 GMT
      Expires:
      - Fri, 12 Apr 2024 05:05:29 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42849'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=714
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 05:00:29 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%A0%83%E6%9C%A8%E7%9C%8C%20%E5%8D%97%E5%89%8D%E7%94%B0%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 05:13:27 GMT
      Expires:
      - Fri, 12 Apr 2024 05:18:27 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42076'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=569
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 05:13:27 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B2%A9%E6%89%8B%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 05:13:29 GMT
      Expires:
      - Fri, 12 Apr 2024 05:18:29 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41180'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=456
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 05:13:29 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%95%B7%E9%87%8E%E7%9C%8C%20%E8%A5%BF%E4%B8%80%E8%BC%9D%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 05:16:49 GMT
      Expires:
      - Fri, 12 Apr 2024 05:21:49 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42357'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=427
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 05:16:49 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%96%B0%E6%BD%9F%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 05:16:50 GMT
      Expires:
      - Fri, 12 Apr 2024 05:21:50 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42361'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=454
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 05:16:50 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%92%8C%E6%AD%8C%E5%B1%B1%E7%9C%8C%20%E9%AB%98%E6%9C%A8%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 05:17:38 GMT
      Expires:
      - Fri, 12 Apr 2024 05:22:38 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41413'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=611
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 05:17:38 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%AE%AE%E5%B4%8E%E7%9C%8C%20%E5%B0%8F%E9%AB%98%E7%94%B0%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 08:27:46 GMT
      Expires:
      - Fri, 12 Apr 2024 08:32:46 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '39813'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=421
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 08:27:46 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%AE%AE%E5%B4%8E%E7%9C%8C%20%E5%B0%8F%E9%AB%98%E7%94%B0%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '39813'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Date:
      - Fri, 12 Apr 2024 08:27:46 GMT
      Expires:
      - Fri, 12 Apr 2024 08:32:46 GMT
      Cache-Control:
      - public, max-age=300
      Content-Type:
      - application/json; charset=UTF-8
      Age:
      - '0'
      Server-Timing:
      - gfet4t7; dur=1
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 08:27:46 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%9F%BC%E7%8E%89%E7%9C%8C,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 08:27:47 GMT
      Expires:
      - Fri, 12 Apr 2024 08:32:47 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '43086'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=484
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 08:27:48 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B2%A1%E5%B1%B1%E7%9C%8C%20%E4%BB%81%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 08:36:19 GMT
      Expires:
      - Fri, 12 Apr 2024 08:41:19 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42136'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=454
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJuZXh0X3BhZ2VfdG9rZW4iIDogIkFUcGxESmE2MlctbmZNV04zMlU2ckgyVHFFdmR2djBURVNKMll5aFJ0RXBYRXRqZkxsVmJnWWFTeFlEN0FoaWZCSUVvNkc2ajlLZEQ2S25wT2JpN09RYVpLOWdHN2hxcEFwbVJuZzliWEFtSmhrOU5qYjkwTmFGT3JrVFVkTjFpUDgxSTlncDlBaHdhUDZ3TzBJU0ZnRzFmYm8wUFp1cnBjcW5PbVpHX3NWZ2w0V3ZqZ3U4V1NfTGFRWU1qck5wekd4b3BRM1dVdnp2eWdhdVA5ODFQbVNxTDB2ZjFzVE1TWTVWTFlxT3ZvVlpYUUF0bkUzM3pSX212b3J4U2FsQ2hscmFPMHo3VnFCNnB1MHI3VmVTalJ6dzNQajdoVkREbnZ4QXEwblhhT3FZOEdyc2lCQXQzNDE2ZmZpX28zdkFKWlcxMEJZNkVqQ3V5YWhta21fZU05U2V4bi1rN2dfYk9MSGZzYVNtUy1CSDJ1WWk3WEhjQjF5X1VFemZoSmJLNzF2RV9VQ3NtdmJHZkFnRmJiTHZ4cFQ1RlU2eVZLRUFXIiwKICAgInJlc3VsdHMiIDogCiAgIFsKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzExLTA5MDUg5bKh5bGx55yM5YCJ5pW35biC5YWQ5bO25ZSQ55C055S677yR77yU77yS77yR4oiS77yS77yWIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0LjQ2MTM1MTMsCiAgICAgICAgICAgICAgICJsbmciIDogMTMzLjg3NTAwOTcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC40NjI3MTU0Mjk4OTI3MywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuODc2Mzk2NzI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNDYwMDE1NzcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjg3MzY5NzA3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIua1ruOCteOCpuODiiAvIGZ1dXNhdW5h44CU5LqI57SE5Yi244CVIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzg5MSwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAxNTEwMzgzMTc2MTQzMjk4MjM0XCJcdTAwM2Xnr6Dljp/osarlpKpcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKYjJQTGFxNzlHQkxjbGJtd1VCSWJjdUlXNFN1MWJvMG8wT0lBOVhGMFM4UEpodTRibkhpWmFYNTNwR2ZGaUwwOTJhRzdMd0Z1ZGVlNW8xaDgyTkpfVzFHVEVWZm50aVRhb2hqLVZQOTdLUjlBQVVJVm83VlJBdEdLM1hoejFlbFpWSWRlOVlvcVNMYTJtYUFXaFdiMzVGSjdKWExRdUVYT1R1S0YydTR5Rm5mSkpxIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDUxODgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpmOWRNcTZMbFV6VVJHSmxaUU5WZjFOdyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkZWNkYrR1gg5YCJ5pW35biC44CB5bKh5bGx55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZNRlY2RitHWCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjMsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpmOWRNcTZMbFV6VVJHSmxaUU5WZjFOdyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImhlYWx0aCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE1CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjcwMC0wOTM0IOWyoeWxseecjOWyoeWxseW4guWMl+WMuuWlpeeUsOWNl+eUuu+8luKIku+8ku+8lyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC42NDA3NTc2LAogICAgICAgICAgICAgICAibG5nIiA6IDEzMy45MjQxOTk2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjQxOTkxNDI5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjkyNTQ4NDAyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjYzOTI5MTc3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy45MjI3ODQzNzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlvozmpb3muKnms4kg44G744Gu44GL44Gu5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzAwMCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTExODU1MjQzMzMwNzA3MDYxNjU4XCJcdTAwM2XmuIvosLfliJ3ku6NcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWUN6OWZQNnhmOFFvSklLZ2dKQTAxcDF0Y3A3eFQyRlpxa1d4dnJPYXRld2tZeEtMNzFxUEp5SEhQbm56cW9OTV9tRlQ5MHh4RWoyTElGZENRMmlnRW43bnlPYjRVZDVzQnpSN1MzY2NaYVJKRndPcmdWRUY3cmxvWUhJbU9XYXZDeDMxMUdzS1piZU5uUVlGWmZINWlPVU1heGE5T3RWajBrcEJqY3p1cHY1M096IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUo5NnFPTUpVSFZEVVJYUmEzV050RGl0YyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkpXUkYrOEog5bKh5bGx5biC44CB5bKh5bGx55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZNSldSRis4SiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUo5NnFPTUpVSFZEVVJYUmEzV050RGl0YyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxMDQwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjcwMC0wOTc1IOWyoeWxseecjOWyoeWxseW4guWMl+WMuuS7iu+8kuS4geebru+8keKIku+8ku+8lSDjgrfjg4Djg4Pjgq/jgrnlsqHlsbHku4rjgq/jg6njg5YiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjUwMDM5NCwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuODk3MTY5NAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjY1MTM2MTU3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy44OTg1MDAwNzk4OTI4CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC42NDg2NjE5MjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuODk1ODAwNDIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAiSE9UVEVSUzI05bKh5bGx5LuK5bqXIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNDQ4MCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAyNjcwOTE2OTMyODc0NzU1MDk5XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlpHaV9lb2E3T0R2V2VTZjctZ29mVkJLODFOaDFBYXd2aGdnVVBKZnRSVDBTRy13d2tNLUpyckhHVlJ6NUp1S1JnZWpxV0g5bVR3SXpOdzZHLXpnOWVxY2pCMkhBYUV6MjUxdzRVdE5MMXZPUlJBWk10RFM1V21RREZ2RHBmZ1VpSjNTRFlIWG5kOHVUdjlNVlo3UUhwUlJEdTRZdk1vVDZyZTdOa2R5WVlabnBNMCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA2NzIwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKanhmM2JZVUhWRFVSZnF5N1dOOWs3a3ciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJKVlhXK1hSIOWyoeWxseW4guOAgeWyoeWxseecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2TUpWWFcrWFIiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNC4zLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKanhmM2JZVUhWRFVSZnF5N1dOOWs3a3ciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJoZWFsdGgiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxNQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3MDAtMDk0MSDlsqHlsbHnnIzlsqHlsbHluILljJfljLrpnZLmsZ/vvJLkuIHnm67vvJTiiJLvvJHvvJUiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjMzMTQyOSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuOTIzMTYzNAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjYzNDQxNDMyOTg5MjcxLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy45MjQ1NDgwMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC42MzE3MTQ2NzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuOTIxODQ4MzcwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAiU1BBJldlbGxuZXNz44G944GL44G944GLIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzQ1NiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTExMTQzNDI5Njc1NjcyNjA2NjY2XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlpQNW0zLURwemxSelBLRXU4RUk5SmxjNXFNRC1BNnB6cFRwVzdRbEN1MXJEZHRROWxPLWFsZjhCZUx3bTYzaXBzcnpOd3FNVjcwNFNQWUhsZ3ZidGJadzVpaTZ0Wl9EUjJTZTl1d3U0azgwY1ZTMEUtZjJHRHhnV1RWX1BaR0JCcUE3V29IQVhlQ184M3ZXSFJNd29DaVY3dHhUdmhock9ybEFnN2kxQWotcWV1YyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA1MTg0CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKS3d4bWI0MEhWRFVSc0YtWkdnSDk0TkkiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJKV01GKzc2IOWyoeWxseW4guOAgeWyoeWxseecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2TUpXTUYrNzYiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy42LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKS3d4bWI0MEhWRFVSc0YtWkdnSDk0TkkiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgImd5bSIsCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNzQ2CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjcwNi0wMDAyIOWyoeWxseecjOeOiemHjuW4gueviea4r++8keS4geebru+8keKIku+8ke+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC40OTMxNzI3LAogICAgICAgICAgICAgICAibG5nIiA6IDEzMy45NTYxMTI3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNDk0NDkxMDI5ODkyNzEsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjk1NzU0NDYyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjQ5MTc5MTM3MDEwNzI2LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy45NTQ4NDQ5NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLngKzmiLjlhoXmuKnms4kg44Gf44G+44Gu5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjczNiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE3ODg3MzIxNDYwMDExMzQ3MTA4XCJcdTAwM2VzdXp1a2kgaWNoaXJvXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESmJxZmo5b3pkWndaVVNUSE1CRElyQXZSOUZ5NmxwazJIZG5EeDRMTWt4bE5xWDNHYW9oakFqbHBOQlRDSF85ajZvcVZYYkhCTHhIUGpHdlJ3NUFFSEpuQlpYREhzNnNmLWJDTTBKbS1XS0J3ZmVZdHhzTnNWaElJblNoZS1CbWQ1MHFTQVlscHNWaEwxZFVDRk5ucG5QMW5pMDEzcHJOOWxpT1dkMGlrUEw5UHFBbyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0ODY0CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKVWRQb0tRaDJWRFVScDFJOC1Xa3hhbTgiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJGWFY0KzdDIOeOiemHjuW4guOAgeWyoeWxseecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2TUZYVjQrN0MiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSlVkUG9LUWgyVkRVUnAxSTgtV2t4YW04IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJiZWF1dHlfc2Fsb24iLAogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgInJlc3RhdXJhbnQiLAogICAgICAgICAgICAiZm9vZCIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE5MjEKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzExLTA5MzQg5bKh5bGx55yM5YCJ5pW35biC5YWQ5bO25aGp55Sf77yT77yX77yX77yXIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0LjQ5MDU2NjMsCiAgICAgICAgICAgICAgICJsbmciIDogMTMzLjc3MDg3MTQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC40OTE3Njc1Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNzcyMTQ1MDc5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNDg5MDY3ODcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjc2OTQ0NTQyMDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9sb2RnaW5nLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM5MDlDRTEiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2hvdGVsX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLngKzmiLjlpKfmqYvjgrnjg5Hjg6rjgr7jg7zjg4giLAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTc1NDU4ODA3MDAwNDIwNTY1MzNcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKYWFkZ2pGclR6SzliUlgwZ1RjYzZqYkpmSExpYmt6OGxrQVc0amlxOHN3bWZNbkw3ZjlXTi14VHlLSHRtZVJuU2Q2cGJ5dWdBelh2cng2eGU1N3NOWjVFQVJWRmhyR0xsZFhDTnFkNS0tTmtiRzkyVFZINEJOX2ZQb3JtanczSzFtQkRmcl9ibmFvaGtCUXN3RXN2TWM0ckw2bFc5VTd3d0lubE5ValBaZmRsOC1GIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpwZUR6Uk1kWVVUVVJVQVc5VFFDNWVYSSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkZRUkMrNjkg5YCJ5pW35biC44CB5bKh5bGx55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZNRlFSQys2OSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjUsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpwZUR6Uk1kWVVUVVJVQVc5VFFDNWVYSSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAic3BhIiwKICAgICAgICAgICAgImxvZGdpbmciLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA4OTIKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMTMxLTAwMzIg5p2x5Lqs6YO95aKo55Sw5Yy65p2x5ZCR5bO277yW5LiB55uu77yT77yU4oiS77yR77yYIOa4oei+uuODk+ODqyIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MjQ0NjQ1LAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS44MjA5ODYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MjU4MTI1Mjk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzkuODIyMzMxNDI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzIzMTEyODcwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjgxOTYzMTc3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWvuuWztua1tOWgtCIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDEwNjcsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNTQ0ODkwMDgxMjU4Mzg0MzYxN1wiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREphcm5EbFd2NEwzZncwRGJDVlZvakZzcUl4dFJSOTJVMjFDYzFvU0cyUy1BMmJHa3l6eW9tNUcyVTUtb3ZUUTliUnE4b1MxZDNfZF9WZ3N6UGo0ZmxhMU1XRXFldjRxU3d4V3BxNXl0VFg5RXdwS1p0TEhBM0lMX1piS0E3ekV4ZVJibWd4Q3ZaSVhoN2IySEl3M3I1Z0NjaUFhZ0hJN2U2YWlNV1ZCU2ZNbEVkY3kiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMTYwMAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSk41TTdVU0tQR0dBUmsyWmpjOVcwUXRJIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUFJGQytRQyDloqjnlLDljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hQUkZDK1FDIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpONU03VVNLUEdHQVJrMlpqYzlXMFF0SSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAxOTcKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSMTY0LTAwMDMg5p2x5Lqs6YO95Lit6YeO5Yy65p2x5Lit6YeO77yU5LiB55uu77yZ4oiS77yS77ySIOODoeODquODvOOCs+ODvOODiOOCouOCr+OCoiIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS43MDc1NjEzLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS42ODU3NzM3CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNzA4ODgwNjI5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjY4NzEyMzQ3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjcwNjE4MDk3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS42ODQ0MjM4MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgqLjgq/jgqLmnbHkuK3ph44iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA0MDAwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDE3ODUwOTQxNzQ3NTEwODM2NjVcIlx1MDAzZeadvuawuOaLk+S5n1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpaLW8zd0VLQVhURkJzWnh1SHQzRGZxaFhiTlhwMlJTZWpROG5hU1cweTFzXzZyUUNCaERRcHd1dzJPX2dCNE1BekdJdnBhTG5paHJVVEJPTEljblVOTnBSTmQyOWtHaGdPTjdTSjNMM1h6YU1RVTUyZHhJOExqcldKQjZUUGg0MC1hQ1diNnBUcTN1VXRKN1JIdzFOQUJBa09FdnM4VGxMaVlHRnNxNUlmQWhVaFEiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzAwMAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkpWbVdpOG55R0dBUnE5Q0pxaXdjUDZvIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUE00UCtYNyDkuK3ph47ljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hQTTRQK1g3IgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpKVm1XaThueUdHQVJxOUNKcWl3Y1A2byIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA0NTEKICAgICAgfSwKICAgICAgewogICAgICAgICAiYnVzaW5lc3Nfc3RhdHVzIiA6ICJPUEVSQVRJT05BTCIsCiAgICAgICAgICJmb3JtYXR0ZWRfYWRkcmVzcyIgOiAi5pel5pys44CB44CSNzAyLTgwNDcg5bKh5bGx55yM5bKh5bGx5biC5Y2X5Yy66Iul6JGJ55S677yV4oiS77ySIiwKICAgICAgICAgImdlb21ldHJ5IiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibGF0IiA6IDM0LjYxMjkzMDcsCiAgICAgICAgICAgICAgICJsbmciIDogMTMzLjk0NTMyNjMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC42MTQyOTc2Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuOTQ2Njc2ODI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjExNTk4MDIwMTA3MjcsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjk0Mzk3NzE3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuemj+Wztua4qeaziSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIyNTAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwOTg2NDY3NTI0MTYzMjYzNDQyOFwiXHUwMDNlQkVBUiBISVJPXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESloycXBNUmoyMFhjLXU3OWpya1NybEdoU3dKNm9saHowYTFYMmgyczBlU3ZiNklxX24wZXVOczlqV0ZBbHktLUVocFl4UFdtek12dTU5bzJuTzd5OW5MV3UwS293OFVheWpvOG9KMHM2N3VhOUdiZ2FOVFdsSU1FRmlHUHR3cHJsYU11aFFUVU0wcV9seG5fRjFCNDllcWFOd3BodGtYbGNlZ1RFU1pQajU4X1dPUyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDAwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKT2U2SXB2XzNVelVSSGFRRGxvZ3NHeFUiLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJKVzdXKzU0IOWyoeWxseW4guOAgeWyoeWxseecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2TUpXN1crNTQiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogNCwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSk9lNklwdl8zVXpVUkhhUURsb2dzR3hVIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDQyCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjE0MC0wMDE0IOadseS6rOmDveWTgeW3neWMuuWkp+S6le+8keS4geebru+8lO+8kuKIku+8lCIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNS42MDQwMDAyLAogICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MzIzMjE2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzUuNjA1MzU0NDc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM5LjczMzY1MjMyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM1LjYwMjY1NDgyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzOS43MzA5NTI2NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLjgZnjgYjjgbLjgo3mua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzODQwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDM0MDExNzcxNTk4MjYyMDg5ODFcIlx1MDAzZeacq+W6g+a5r1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpaemxvUTFLWWlnWERMNFc4TnJ0MDZmaVNTckZVcDg4X2czZGJWaF9ZcDlwZzVSQ0hua2l5U21HOVFrd2RIczlSREdiRzZ0d3ZzcmZOMWhKYkNUX3VIeVZ3M2o2V3ZKODBpTjBiRGgyVjA1MTdacHhkWENCSTUtUkp6ODVjLUp0T1VEeG1Mb2tMcDhFMDZVMExqSE5UQTJ6OUhqTUFzY2t4MGU1eWUtUjVNdlJuSzciLAogICAgICAgICAgICAgICAid2lkdGgiIDogNTc2MAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSmJleV8tWDJLR0dBUkx0VWY1d2pFNmo0IiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSlAzSitKViDlk4Hlt53ljLrjgIHmnbHkuqzpg70iLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRN1hKUDNKK0pWIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSmJleV8tWDJLR0dBUkx0VWY1d2pFNmo0IiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDE5OAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3MDEtMDE0NCDlsqHlsbHnnIzlsqHlsbHluILljJfljLrkuYXnsbPvvJHvvJnvvJfiiJLvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjQ3ODA2NywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuODcxNTEyNwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjY0OTA1OTc3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy44NzI4MTQ0Mjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC42NDYzNjAxMjAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuODcwMTE0NzcwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5bKh5bGx44G/44KE44Gz5rip5rOJIOWkp+WutuaXj+OBrua5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDM0NTYsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwOTQ3NTU3NjQ5MTA4Mzc4MDUxMVwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREphTFBYSllwS3BDajcwcURmNnJEdFp3UXItQ0Q3bWtlVGo2ZDBvdU1YdWZBSEloakdPOWMwenRoMndhYXZSa1ZOSHl5Z2hrbkZrVEp3T1FHSWM2dmlJTUxTVXlsTFFNTDVuRktIYzNyVW5rd24ybHVHbjJ0eUpMQ3lFcTVGcjNvM1RGdXFhSk00aXFib25HeEFXbFJMcnlveERvMzNuYV9zbG9Pb0g3d2JtelVjaWoiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNTE4NAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSnJRZVJSNnI0VXpVUmxVTERDc1FUZ1dvIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiSlZYQys0SiDlsqHlsbHluILjgIHlsqHlsbHnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNk1KVlhDKzRKIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuOSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSnJRZVJSNnI0VXpVUmxVTERDc1FUZ1dvIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJneW0iLAogICAgICAgICAgICAiaGVhbHRoIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTM2NwogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3MTAtMDI1MiDlsqHlsbHnnIzlgInmlbfluILnjonls7bniKrltI7vvJnvvJjvvJHiiJLvvJEiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNTYyMDMxOTk5OTk5OTksCiAgICAgICAgICAgICAgICJsbmciIDogMTMzLjY4NTQ0OAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjU2MzQ0Mzk3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy42ODY2MjU5Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC41NjA3NDQzMjAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuNjgzOTI2MzIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5rqA5aSp44Gu5rmvIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUKICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMzA3MiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE0MDQxNTY2MzE3MjI1Nzg4MTM0XCJcdTAwM2Xjgobjga7jgY3jgYvjgZrjgb5cdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWXoycXprcmNnX25oOTJHUmg4RnVjLVVEdDE3UlNScjBzdkdkaTMyWFI4OFNXdzFhNFIxeGxBMmZ1c2t2dkl5ZHNQNkdMUWEtUTlja1I2XzZPN3gxWDhLTGptNmV4TkJGMXl2ejB6aDJDNV9wTGZ2SVJoOWZpcFB2ejJ2Qi1oemZ5ZzlKdDM2T2NnNnBpWVkxMXVNNDYxT3VLN0lzdkRwQVo2b3p5aDU5NFZ1UXJ6IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwODAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpieGxJdFZwYVVUVVIwRmZkczFCT0tuSSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkhNNlArUjUg5YCJ5pW35biC44CB5bKh5bGx55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZNSE02UCtSNSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKYnhsSXRWcGFVVFVSMEZmZHMxQk9LbkkiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogNTkzCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjcwMS0xMzM0IOWyoeWxseecjOWyoeWxseW4guWMl+WMuumrmOadvuWOn+WPpOaJje+8mOKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC42ODg2NDgyLAogICAgICAgICAgICAgICAibG5nIiA6IDEzMy44MTY4ODEyCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjkwMDA5NDI5ODkyNzMsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjgxODIzNjUyOTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjY4NzMwOTc3MDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy44MTU1MzY4NzAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLnmbrphbXmtbTjgajmhqnjgYTjga7nqbrplpMg44Kw44Ot44O844Oq44O844CQ6YW157Sg6aKo5ZGC44CRIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNzYzNDQ0MjYwNjgxODAxODYxOFwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpiQ3JwOEI2SFBHY0tCVXVnS25JVkExc2pQSFF2Q2lXMlV0dzVJY1ZqWjA5YUxQM3VzS3VjMEtrWGtYZjBCQW5kZnJEVE5pa3V1eDB2b19YbFctUW44OFZPc0RjekdIUV9GLU9TR1dmY2tmQ2pXdkJ1dFdhc0VpTjhxT1BHUWozZzZYRUhMWXAxWG1YdlBsMnJiU2tzdnJEV3RKY2s0MnVlYnpkbUNUbFpVVWw3SDQiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSjV3X3l4ZkVCVkRVUkQxdGJNSzBoRHFFIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiTVJROCtGUSDlsqHlsbHluILjgIHlsqHlsbHnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNk1NUlE4K0ZRIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDQuNywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSjV3X3l4ZkVCVkRVUkQxdGJNSzBoRHFFIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiA3CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjcwMC0wMDI2IOWyoeWxseecjOWyoeWxseW4guWMl+WMuuWliemChOeUuu+8lOS4geebru+8ke+8leKIku+8ku+8liIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC42NjkyMzQ1LAogICAgICAgICAgICAgICAibG5nIiA6IDEzMy45MDkzMzk2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjcwNTg1MTc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjkxMDcxOTg3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjY2Nzg4NTUyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy45MDgwMjAyMjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLptrTmua8iLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyNDQ4LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDQ5NTc0MzE5NzM0NDQ2NTMzMTRcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKYlEzeXpqR0ZBM1UxS3NKbGVNQkYyYTVMNUVqczhGUWlQUF85VVJXTnZjdU80VVRtUTFEVnVGbmZXazY5a1NSTGFPNzJJYTFybW1qUU5Ud1RxaEJCbWNlV3NFd2ktazdMdzJQdTVYUDlVQk5XY1FvbFRkb3IxNS1zN1lmZ24zLVRKMnRSNDFlRDB3WXVnNFZOSDlRUVNLM2xqQl9BRW1fSUhiRkh5YjUwTlBQbTRjIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDMyNjQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpxNnEyWVZRR1ZEVVJmQ09jTUtBaUt0WSIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIk1XOTUrTVAg5bKh5bGx5biC44CB5bKh5bGx55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZNTVc5NStNUCIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA0LjEsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUpxNnEyWVZRR1ZEVVJmQ09jTUtBaUt0WSIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInVzZXJfcmF0aW5nc190b3RhbCIgOiAyNAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3MDEtMTE0MSDlsqHlsbHnnIzlsqHlsbHluILljJfljLroj4Xph47vvJLvvJbvvJTvvJDiiJLvvJgiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNzM1MjQyNywKICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuODk3MTIxMgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjczNjYxMDUyOTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy44OTg1MTI2Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC43MzM5MTA4NzAxMDcyOCwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuODk1ODEzMDIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5qGD5aSq6YOO5rip5rOJIOS4gOa5r+mkqCIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDI1OTIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMjczMDE3MDgzMDY3NzI3NjcwM1wiXHUwMDNl5ZKM5pyo6KyZ5rK7XHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlluTVBkaUhUWlBsWndYQ1pUZjlJdE5FWXJCOTBicy03U2IzRkxMTWsxZ2FkVmVVdEk1UTBBOHJmRjZXREpmbmpKd2hHbWtNWHdudEhaREZrR3JRR05VbTgwVzIxOEkwTDF1YjRlSDVxaF8tN1prUkZ3QzdCZXhqWHBuNTRSZ0h2b1VjN3IxNGlRV2lEbGMzRHNlQnF1NmR4a0NZS3ZJRklpbUtwLTV4bDk0NHlrSyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxOTQ0CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKRFlBYkgxQUVWRFVSak1ISlQ0Qjg5c3ciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJQVlBXKzNSIOWyoeWxseW4guOAgeWyoeWxseecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2TVBWUFcrM1IiCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKRFlBYkgxQUVWRFVSak1ISlQ0Qjg5c3ciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjYzCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjcwNC04MTI1IOWyoeWxseecjOWyoeWxseW4guadseWMuuilv+Wkp+WvuuW3neWPo++8k++8ku+8l+KIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC42NDY0MzE5LAogICAgICAgICAgICAgICAibG5nIiA6IDEzNC4wNDkzODA1CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjQ3MzMxOTc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjA1MDc4MDE3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjY0NDYzMjMyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzNC4wNDgwODA1MjAxMDczCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLlgaXlubjjg5fjg6njgrbopb/lpKflr7oiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDU0ODA3NTk2NzU4NDY4Njg3MTJcIlx1MDAzZUEgR29vZ2xlIFVzZXJcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQVRwbERKWmpKRkRqM2poQ19GTzRHRUYyODcyd1pYS2JZZXEtOE14TTJBTEVWR0tRMmR3a3ludEpiRXNlVk1Zc1MxVkhUR3VOdmNXbF93bXlOVEExNm9jVWFxa2dMMm9RbGtNVy1iSGlabUlUNjIyUDJhZ3VpT1k2dXpLbmpZNUhuaWdnT0tCSjdNYjlVWWl6QThiREs0VTFzams2RXB1NWRuaGhmM3pZM0lscl82UFlMbkVuIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMzIKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp5M2o4aTNvTVZEVVJJaUo1WENjV05GcyIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkoyV1grSFEg5bKh5bGx5biC44CB5bKh5bGx55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZQSjJXWCtIUSIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNoSUp5M2o4aTNvTVZEVVJJaUo1WENjV05GcyIsCiAgICAgICAgICJ0eXBlcyIgOiAKICAgICAgICAgWwogICAgICAgICAgICAibWVhbF90YWtlYXdheSIsCiAgICAgICAgICAgICJzcGEiLAogICAgICAgICAgICAicmVzdGF1cmFudCIsCiAgICAgICAgICAgICJmb29kIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMTU1CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjcwOS0wNzAxIOWyoeWxseecjOi1pOejkOW4gumFjOeUsO+8ke+8kO+8k++8kuKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC44MjQ4ODIzLAogICAgICAgICAgICAgICAibG5nIiA6IDEzNC4wNTM2MjkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC44MjYxMDk4Nzk4OTI3MiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzQuMDU0ODgyMDI5ODkyNwogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuODIzNDEwMjIwMTA3MjgsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTM0LjA1MjE4MjM3MDEwNzMKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YxL3BuZ183MS9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpY29uX2JhY2tncm91bmRfY29sb3IiIDogIiM3QjlFQjAiLAogICAgICAgICAiaWNvbl9tYXNrX2Jhc2VfdXJpIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL3YyL2dlbmVyaWNfcGlubGV0IiwKICAgICAgICAgIm5hbWUiIDogIuWkqeeEtua4qeazieODhOODq+OBrua5r+ODu+W1kOOBrua5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDEwODAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExNjU4NTA5ODA0MTY0NTk4NTY1NFwiXHUwMDNlQSBHb29nbGUgVXNlclx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREpacmNVc2liYU11NlhVVnB6b05JU0JPZlluY09oQ0tZbEdzYW5mcEhvaHNnUHdKM0puYzRjQWVwQzNmQXdudmhfdlAyRXBPYWl2Q25NbnRTLU5lT0FEcFJtMVJlU1ZJTEdIbFREeGJtWlRjWFhPMF95VDZveHg3cE5xbGRiMkNPa09hQjRSTUxMb2FQZVJZSWYxUDMxUERhZjJVYUxOQjA1MmJac2E1VjdFMERuaTQiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMTkyMAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkpUU1FycWdWVkRVUml5VWRfc3h4RTNZIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiUjNGMytXRiDotaTno5DluILjgIHlsqHlsbHnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNlBSM0YzK1dGIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSkpUU1FycWdWVkRVUml5VWRfc3h4RTNZIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDEzNAogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3MDItODA1OCDlsqHlsbHnnIzlsqHlsbHluILljZfljLrkuKbmnKjnlLrvvJLkuIHnm67vvJHvvJPiiJLvvJHvvJQiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjA5ODMzMSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuOTQzNjgwNwogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjYxMTE3MTg3OTg5MjcyLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy45NDUxMTYxMjk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC42MDg0NzIyMjAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuOTQyNDE2NDcwMTA3MgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5bKp55uk552h55yg5rW044K144Ot44OzIOOBr+OBhOOCgOOCi+OBtuOBl+KtkO+4jiIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQ4MCwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IAogICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA1MDk5NDg4NDc4MzM1NTQxODM4XCJcdTAwM2VBIEdvb2dsZSBVc2VyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlk4ZmtZaUlrT0VCV01GUVIzVzFSTlFlcTNoOWNlOGhZbkNuUDI4eWktZlVGMFd5Vy10UzM3TTlfX3VsdXlNUVQ2VmNiQUJwQkdtZzJRT3pIWkF0eGVUcHlPb3Q5aVZMWW5obzBCVE5wc0poMFpySEptbTRlMU9aMFJWRVhSVGVhdmtiNkY0b3dCS3FIa3N3QWRVb3hRR2JvdmhwNkdQazhjdThNa0doaHlnbFpQUCIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA2NDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpPVzFkdlM3NVV6VVJVZjU5Qmc4U2hBOCIsCiAgICAgICAgICJwbHVzX2NvZGUiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImNvbXBvdW5kX2NvZGUiIDogIkpXNVYrV0Yg5bKh5bGx5biC44CB5bKh5bGx55yMIiwKICAgICAgICAgICAgImdsb2JhbF9jb2RlIiA6ICI4UTZNSlc1VitXRiIKICAgICAgICAgfSwKICAgICAgICAgInJhdGluZyIgOiA1LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKT1cxZHZTNzVVelVSVWY1OUJnOFNoQTgiLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInNwYSIsCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDEwCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImJ1c2luZXNzX3N0YXR1cyIgOiAiT1BFUkFUSU9OQUwiLAogICAgICAgICAiZm9ybWF0dGVkX2FkZHJlc3MiIDogIuaXpeacrOOAgeOAkjcwMC0wODI1IOWyoeWxseecjOWyoeWxseW4guWMl+WMuueUsOeUuu+8kuS4geebru+8luKIku+8kSIsCiAgICAgICAgICJnZW9tZXRyeSIgOiAKICAgICAgICAgewogICAgICAgICAgICAibG9jYXRpb24iIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImxhdCIgOiAzNC42NTk5ODU5LAogICAgICAgICAgICAgICAibG5nIiA6IDEzMy45MjQ0OTA5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IAogICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjYxMzQ5Mjc5ODkyNzIsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMTMzLjkyNTgzNTM3OTg5MjcKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjY1ODY0OTYyMDEwNzI4LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy45MjMxMzU3MjAxMDcyCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92MS9wbmdfNzEvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWNvbl9iYWNrZ3JvdW5kX2NvbG9yIiA6ICIjN0I5RUIwIiwKICAgICAgICAgImljb25fbWFza19iYXNlX3VyaSIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy92Mi9nZW5lcmljX3BpbmxldCIsCiAgICAgICAgICJuYW1lIiA6ICLnlLDnlLrmuKnms4kiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiAKICAgICAgICAgewogICAgICAgICAgICAib3Blbl9ub3ciIDogdHJ1ZQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IAogICAgICAgICBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDI0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogCiAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTQwNDE1NjYzMTcyMjU3ODgxMzRcIlx1MDAzZeOChuOBruOBjeOBi+OBmuOBvlx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJBVHBsREphNGxPak5lMjJBRGs4THlqdFIzakltTktUUkJYb0pFeTQ2LWxBRmdiOGJpeHJCMjNuV1B4OE9IVGFiU3VDak03RjlQTFA3UGIzVjRsUmY3U3JBTm03Tzh2YlY5YWIwNS1heTlZbndPY1RtSmZ5QThQNVhQMkprdTBCeFhXcGFNd3hHU1NDckE4OVJVOG9yT0wzUXpsUUJxcWdCVTBwT2lXMnRLUnkzY0gzeGNuRGkiLAogICAgICAgICAgICAgICAid2lkdGgiIDogNDAzMgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSlRjMnVWYlVIVkRVUko4ODlrTU16LWtFIiwKICAgICAgICAgInBsdXNfY29kZSIgOiAKICAgICAgICAgewogICAgICAgICAgICAiY29tcG91bmRfY29kZSIgOiAiTVc1RitYUSDlsqHlsbHluILjgIHlsqHlsbHnnIwiLAogICAgICAgICAgICAiZ2xvYmFsX2NvZGUiIDogIjhRNk1NVzVGK1hRIgogICAgICAgICB9LAogICAgICAgICAicmF0aW5nIiA6IDMuNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ2hJSlRjMnVWYlVIVkRVUko4ODlrTU16LWtFIiwKICAgICAgICAgInR5cGVzIiA6IAogICAgICAgICBbCiAgICAgICAgICAgICJwb2ludF9vZl9pbnRlcmVzdCIsCiAgICAgICAgICAgICJlc3RhYmxpc2htZW50IgogICAgICAgICBdLAogICAgICAgICAidXNlcl9yYXRpbmdzX3RvdGFsIiA6IDEwOQogICAgICB9LAogICAgICB7CiAgICAgICAgICJidXNpbmVzc19zdGF0dXMiIDogIk9QRVJBVElPTkFMIiwKICAgICAgICAgImZvcm1hdHRlZF9hZGRyZXNzIiA6ICLml6XmnKzjgIHjgJI3MDItODAwMiDlsqHlsbHnnIzlsqHlsbHluILkuK3ljLrmoZHph47vvJfvvJHvvJXiiJLvvJIiLAogICAgICAgICAiZ2VvbWV0cnkiIDogCiAgICAgICAgIHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJsYXQiIDogMzQuNjE4NTM5OSwKICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuOTc5MTY2OQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiAKICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibGF0IiA6IDM0LjYxOTk0MDgyOTg5MjcxLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDEzMy45ODA0NzI5Nzk4OTI3CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogCiAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiAzNC42MTcyNDExNzAxMDcyNywKICAgICAgICAgICAgICAgICAgImxuZyIgOiAxMzMuOTc3NzczMzIwMTA3MwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjEvcG5nXzcxL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImljb25fYmFja2dyb3VuZF9jb2xvciIgOiAiIzdCOUVCMCIsCiAgICAgICAgICJpY29uX21hc2tfYmFzZV91cmkiIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvdjIvZ2VuZXJpY19waW5sZXQiLAogICAgICAgICAibmFtZSIgOiAi5bKh5bGx44G144KM44GC44GE772+776d776A772wIOahkeOBrua5ryIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDQwMzIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiAKICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNzE2Mzg1NTgyMDY3ODkzMTQ4OVwiXHUwMDNl44G/44KI44GX44G+44GV44KG44GNXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkFUcGxESlpka0hQRndQLWtMTHBnZjNkT1VaNENvc0lOa0ZQWndDR2RoMTBnOTBUaE1IRFJkYVA4WlA3THBRMURxSXBNMlM2eWhRTEhOTjd0UGhpdnpJRl9FRXllTU1tSjN0Mzdlc0plZXdBZXQtZXo3aExYTXVWQm9yY3VOX29GbWVsUzQ4OUo3SmtGX2t4QkswZm9qMlo3eTdrY3Etd0xIWTFvaFE2NWFoaXdrZURYUWJlciIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzMDI0CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKbzZMSVlFb0lWRFVSbm0zRHdBVWRNdnciLAogICAgICAgICAicGx1c19jb2RlIiA6IAogICAgICAgICB7CiAgICAgICAgICAgICJjb21wb3VuZF9jb2RlIiA6ICJKWDlIK0NNIOWyoeWxseW4guOAgeWyoeWxseecjCIsCiAgICAgICAgICAgICJnbG9iYWxfY29kZSIgOiAiOFE2TUpYOUgrQ00iCiAgICAgICAgIH0sCiAgICAgICAgICJyYXRpbmciIDogMy4yLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDaElKbzZMSVlFb0lWRFVSbm0zRHdBVWRNdnciLAogICAgICAgICAidHlwZXMiIDogCiAgICAgICAgIFsKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ1c2VyX3JhdGluZ3NfdG90YWwiIDogMjYKICAgICAgfQogICBdLAogICAic3RhdHVzIiA6ICJPSyIKfQ==
  recorded_at: Fri, 12 Apr 2024 08:36:20 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%BA%83%E5%B3%B6%E7%9C%8C%20%E4%B8%AD%E6%82%A0%E5%A4%AA%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 10:51:13 GMT
      Expires:
      - Fri, 12 Apr 2024 10:56:13 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42216'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=414
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 10:51:13 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%9F%BC%E7%8E%89%E7%9C%8C%20%E4%B8%AD%E9%99%B8%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 10:51:14 GMT
      Expires:
      - Fri, 12 Apr 2024 10:56:14 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '20945'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=384
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 10:51:14 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E5%B1%B1%E6%A2%A8%E7%9C%8C%20%E5%90%89%E7%94%B0%E5%8C%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 10:51:25 GMT
      Expires:
      - Fri, 12 Apr 2024 10:56:25 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '26960'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=389
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 10:51:25 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E4%BD%90%E8%B3%80%E7%9C%8C%20%E9%99%BD%E5%AD%90%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 10:51:26 GMT
      Expires:
      - Fri, 12 Apr 2024 10:56:26 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '20747'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=335
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 10:51:26 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%95%B7%E9%87%8E%E7%9C%8C%20%E5%A4%A7%E8%BC%9D%E7%94%BA,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 10:51:32 GMT
      Expires:
      - Fri, 12 Apr 2024 10:56:32 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '42235'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=385
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 10:51:32 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E6%BB%8B%E8%B3%80%E7%9C%8C%20%E9%99%B8%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 10:51:33 GMT
      Expires:
      - Fri, 12 Apr 2024 10:56:33 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '41651'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=800
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 10:51:33 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%9D%99%E5%B2%A1%E7%9C%8C%20%E4%B8%8A%E7%94%B0%E5%B8%82,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 10:51:34 GMT
      Expires:
      - Fri, 12 Apr 2024 10:56:34 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '39788'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=825
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 10:51:34 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=AIzaSyC0_RK9X3zEb7ZLSl0WTcSX2gX1uF6a9to&language=ja&query=%E9%95%B7%E5%B4%8E%E7%9C%8C%20%E9%99%BD%E9%83%A1,%E3%82%B5%E3%82%A6%E3%83%8A&rankby=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Fri, 12 Apr 2024 10:51:35 GMT
      Expires:
      - Fri, 12 Apr 2024 10:56:35 GMT
      Cache-Control:
      - public, max-age=300
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '37469'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=537
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 12 Apr 2024 10:51:35 GMT
recorded_with: VCR 6.2.0
